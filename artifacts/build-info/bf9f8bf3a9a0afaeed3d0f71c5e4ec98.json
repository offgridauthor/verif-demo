{"id":"bf9f8bf3a9a0afaeed3d0f71c5e4ec98","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/VotingTokenX.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract VotingTokenX is Initializable, ERC20Upgradeable, PausableUpgradeable, OwnableUpgradeable, ERC20PermitUpgradeable, ERC20VotesUpgradeable, UUPSUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize() initializer public {\n        __ERC20_init(\"VotingTokenX\", \"VOT\");\n        __Pausable_init();\n        __Ownable_init();\n        __ERC20Permit_init(\"VotingTokenX\");\n        __ERC20Votes_init();\n        __UUPSUpgradeable_init();\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        whenNotPaused\n        override\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {}\n\n    // The following functions are overrides required by Solidity.\n\n    function _afterTokenTransfer(address from, address to, uint256 amount)\n        internal\n        override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount)\n        internal\n        override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._mint(to, amount);\n    }\n\n    function _burn(address account, uint256 amount)\n        internal\n        override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20PermitUpgradeable.sol\";\nimport \"../../../utils/math/MathUpgradeable.sol\";\nimport \"../../../governance/utils/IVotesUpgradeable.sol\";\nimport \"../../../utils/math/SafeCastUpgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesUpgradeable is Initializable, IVotesUpgradeable, ERC20PermitUpgradeable {\n    function __ERC20Votes_init() internal onlyInitializing {\n    }\n\n    function __ERC20Votes_init_unchained() internal onlyInitializing {\n    }\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 high = ckpts.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n            if (ckpts[mid].fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : ckpts[high - 1].votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSAUpgradeable.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {DelegateChanged} and {DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n        oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {\n            ckpts[pos - 1].votes = SafeCastUpgradeable.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate that the this implementation remains valid after an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20PermitUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/cryptography/draft-EIP712Upgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20PermitUpgradeable, EIP712Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    mapping(address => CountersUpgradeable.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSAUpgradeable.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        CountersUpgradeable.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotesUpgradeable {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCastUpgradeable {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private _HASHED_NAME;\n    bytes32 private _HASHED_VERSION;\n    bytes32 private constant _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash());\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712NameHash() internal virtual view returns (bytes32) {\n        return _HASHED_NAME;\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712VersionHash() internal virtual view returns (bytes32) {\n        return _HASHED_VERSION;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"Initializable":[749],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":2896,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":750,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,2895,749],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","exportedSymbols":{"IVotesUpgradeable":[209]},"id":210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotesUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":209,"linearizedBaseContracts":[209],"name":"IVotesUpgradeable","nameLocation":"278:17:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"302:71:1","text":" @dev Emitted when an account changes their delegate."},"id":143,"name":"DelegateChanged","nameLocation":"384:15:1","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"416:9:1","nodeType":"VariableDeclaration","scope":143,"src":"400:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"443:12:1","nodeType":"VariableDeclaration","scope":143,"src":"427:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"473:10:1","nodeType":"VariableDeclaration","scope":143,"src":"457:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:85:1"},"src":"378:107:1"},{"anonymous":false,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"491:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":152,"name":"DelegateVotesChanged","nameLocation":"626:20:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"663:8:1","nodeType":"VariableDeclaration","scope":152,"src":"647:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"681:15:1","nodeType":"VariableDeclaration","scope":152,"src":"673:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"706:10:1","nodeType":"VariableDeclaration","scope":152,"src":"698:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:71:1"},"src":"620:98:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"724:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":160,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"817:8:1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"834:7:1","nodeType":"VariableDeclaration","scope":160,"src":"826:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:17:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"866:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:9:1"},"scope":209,"src":"808:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"881:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1009:12:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"account","nameLocation":"1030:7:1","nodeType":"VariableDeclaration","scope":170,"src":"1022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"blockNumber","nameLocation":"1047:11:1","nodeType":"VariableDeclaration","scope":170,"src":"1039:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:38:1"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1083:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:1"},"scope":209,"src":"1000:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1098:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1477:18:1","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"blockNumber","nameLocation":"1504:11:1","nodeType":"VariableDeclaration","scope":178,"src":"1496:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:21:1"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":178,"src":"1540:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1539:9:1"},"scope":209,"src":"1468:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1555:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1640:9:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"account","nameLocation":"1658:7:1","nodeType":"VariableDeclaration","scope":186,"src":"1650:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:17:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"1690:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1689:9:1"},"scope":209,"src":"1631:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1705:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1790:8:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"delegatee","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":192,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"1826:0:1"},"scope":209,"src":"1781:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1833:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1914:13:1","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"delegatee","nameLocation":"1945:9:1","nodeType":"VariableDeclaration","scope":208,"src":"1937:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1937:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"nonce","nameLocation":"1972:5:1","nodeType":"VariableDeclaration","scope":208,"src":"1964:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"expiry","nameLocation":"1995:6:1","nodeType":"VariableDeclaration","scope":208,"src":"1987:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"v","nameLocation":"2017:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":200,"name":"uint8","nodeType":"ElementaryTypeName","src":"2011:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"r","nameLocation":"2036:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2028:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"s","nameLocation":"2055:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2047:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1927:135:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"2071:0:1"},"scope":209,"src":"1905:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":210,"src":"268:1806:1","usedErrors":[]}],"src":"110:1965:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[219]},"id":220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":211,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":219,"linearizedBaseContracts":[219],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"387:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":218,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"852:2:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":218,"src":"878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:2"},"scope":219,"src":"830:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":220,"src":"342:547:2","usedErrors":[]}],"src":"113:777:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ERC1967UpgradeUpgradeable":[588],"IBeaconUpgradeable":[598],"IERC1822ProxiableUpgradeable":[219],"Initializable":[749],"StorageSlotUpgradeable":[3029]},"id":589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":221,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":599,"src":"141:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":220,"src":"184:56:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":2854,"src":"241:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":3030,"src":"286:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":750,"src":"335:36:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":228,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"657:13:3"},"id":229,"nodeType":"InheritanceSpecifier","src":"657:13:3"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"373:236:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":588,"linearizedBaseContracts":[588,749],"name":"ERC1967UpgradeUpgradeable","nameLocation":"628:25:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":234,"nodeType":"Block","src":"736:7:3","statements":[]},"id":235,"implemented":true,"kind":"function","modifiers":[{"id":232,"kind":"modifierInvocation","modifierName":{"id":231,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"719:16:3"},"nodeType":"ModifierInvocation","src":"719:16:3"}],"name":"__ERC1967Upgrade_init","nameLocation":"686:21:3","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"707:2:3"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"736:0:3"},"scope":588,"src":"677:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":240,"nodeType":"Block","src":"818:7:3","statements":[]},"id":241,"implemented":true,"kind":"function","modifiers":[{"id":238,"kind":"modifierInvocation","modifierName":{"id":237,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"801:16:3"},"nodeType":"ModifierInvocation","src":"801:16:3"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"758:31:3","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"789:2:3"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"818:0:3"},"scope":588,"src":"749:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":244,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"934:14:3","nodeType":"VariableDeclaration","scope":588,"src":"909:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"1024:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":248,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1269:20:3","nodeType":"VariableDeclaration","scope":588,"src":"1243:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"1365:68:3","text":" @dev Emitted when the implementation is upgraded."},"id":253,"name":"Upgraded","nameLocation":"1444:8:3","nodeType":"EventDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1469:14:3","nodeType":"VariableDeclaration","scope":253,"src":"1453:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1452:32:3"},"src":"1438:47:3"},{"body":{"id":265,"nodeType":"Block","src":"1625:89:3","statements":[{"expression":{"expression":{"arguments":[{"id":261,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1680:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":259,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1642:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1642:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1642:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"1642:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":258,"id":264,"nodeType":"Return","src":"1635:72:3"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"1491:67:3","text":" @dev Returns the current implementation address."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1572:18:3","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"1590:2:3"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"1616:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:9:3"},"scope":588,"src":"1563:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":289,"nodeType":"Block","src":"1868:218:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":275,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1916:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":273,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"1886:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"1886:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:106:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"1878:106:3"},{"expression":{"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":283,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2032:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":280,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1994:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1994:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"1994:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":286,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2062:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:85:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":288,"nodeType":"ExpressionStatement","src":"1994:85:3"}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1720:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":290,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1814:18:3","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"newImplementation","nameLocation":"1841:17:3","nodeType":"VariableDeclaration","scope":290,"src":"1833:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:27:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"1868:0:3"},"scope":588,"src":"1805:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":304,"nodeType":"Block","src":"2248:96:3","statements":[{"expression":{"arguments":[{"id":297,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2277:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2258:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2258:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"2258:37:3"},{"eventCall":{"arguments":[{"id":301,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2319:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2310:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2310:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"EmitStatement","src":"2305:32:3"}]},"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2092:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":305,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2201:10:3","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"newImplementation","nameLocation":"2220:17:3","nodeType":"VariableDeclaration","scope":305,"src":"2212:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2211:27:3"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"2248:0:3"},"scope":588,"src":"2192:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":332,"nodeType":"Block","src":"2606:160:3","statements":[{"expression":{"arguments":[{"id":316,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2627:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":315,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2616:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"ExpressionStatement","src":"2616:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":319,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2659:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2659:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2659:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":323,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2678:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2659:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":331,"nodeType":"IfStatement","src":"2655:105:3","trueBody":{"id":330,"nodeType":"Block","src":"2689:71:3","statements":[{"expression":{"arguments":[{"id":326,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2725:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2744:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":325,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"2703:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2703:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":329,"nodeType":"ExpressionStatement","src":"2703:46:3"}]}}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2350:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":333,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2487:17:3","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"newImplementation","nameLocation":"2522:17:3","nodeType":"VariableDeclaration","scope":333,"src":"2514:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"data","nameLocation":"2562:4:3","nodeType":"VariableDeclaration","scope":333,"src":"2549:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":309,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"forceCall","nameLocation":"2581:9:3","nodeType":"VariableDeclaration","scope":333,"src":"2576:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2576:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2504:92:3"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"2606:0:3"},"scope":588,"src":"2478:288:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"3070:842:3","statements":[{"condition":{"expression":{"arguments":[{"id":345,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3422:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":343,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3384:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":3006,"src":"3384:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2978_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2978_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2977,"src":"3384:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":383,"nodeType":"Block","src":"3513:393:3","statements":[{"clauses":[{"block":{"id":368,"nodeType":"Block","src":"3618:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3644:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":363,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3652:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3644:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3636:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"3636:82:3"}]},"errorName":"","id":369,"nodeType":"TryCatchClause","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"slot","nameLocation":"3612:4:3","nodeType":"VariableDeclaration","scope":369,"src":"3604:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:14:3"},"src":"3595:138:3"},{"block":{"id":374,"nodeType":"Block","src":"3740:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3765:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":370,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3758:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"3758:56:3"}]},"errorName":"","id":375,"nodeType":"TryCatchClause","src":"3734:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":354,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3560:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":353,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3531:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$219_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$219","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":218,"src":"3531:61:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:63:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":376,"nodeType":"TryStatement","src":"3527:302:3"},{"expression":{"arguments":[{"id":378,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3860:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3879:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":380,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3885:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":377,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"3842:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3842:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":382,"nodeType":"ExpressionStatement","src":"3842:53:3"}]},"id":384,"nodeType":"IfStatement","src":"3380:526:3","trueBody":{"id":352,"nodeType":"Block","src":"3445:62:3","statements":[{"expression":{"arguments":[{"id":349,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3478:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":348,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3459:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3459:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"3459:37:3"}]}}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"2772:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2947:21:3","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"newImplementation","nameLocation":"2986:17:3","nodeType":"VariableDeclaration","scope":386,"src":"2978:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"data","nameLocation":"3026:4:3","nodeType":"VariableDeclaration","scope":386,"src":"3013:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"forceCall","nameLocation":"3045:9:3","nodeType":"VariableDeclaration","scope":386,"src":"3040:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":339,"name":"bool","nodeType":"ElementaryTypeName","src":"3040:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2968:92:3"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"3070:0:3"},"scope":588,"src":"2938:974:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"3918:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":390,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4138:11:3","nodeType":"VariableDeclaration","scope":588,"src":"4112:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4152:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"4225:67:3","text":" @dev Emitted when the admin account has changed."},"id":397,"name":"AdminChanged","nameLocation":"4303:12:3","nodeType":"EventDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4324:13:3","nodeType":"VariableDeclaration","scope":397,"src":"4316:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4347:8:3","nodeType":"VariableDeclaration","scope":397,"src":"4339:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4315:41:3"},"src":"4297:60:3"},{"body":{"id":409,"nodeType":"Block","src":"4471:80:3","statements":[{"expression":{"expression":{"arguments":[{"id":405,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"4526:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":403,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4488:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"4488:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4488:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"4488:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":402,"id":408,"nodeType":"Return","src":"4481:63:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"4363:50:3","text":" @dev Returns the current admin."},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4427:9:3","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"4436:2:3"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"4462:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4461:9:3"},"scope":588,"src":"4418:133:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":435,"nodeType":"Block","src":"4678:167:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4696:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:3","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4720:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"ExpressionStatement","src":"4688:73:3"},{"expression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":429,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"4809:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":426,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4771:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"4771:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"4771:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":432,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4830:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4771:67:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":434,"nodeType":"ExpressionStatement","src":"4771:67:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"4557:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":436,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4642:9:3","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"newAdmin","nameLocation":"4660:8:3","nodeType":"VariableDeclaration","scope":436,"src":"4652:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:3"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"4678:0:3"},"scope":588,"src":"4633:212:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":452,"nodeType":"Block","src":"5005:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5033:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"5046:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":442,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5020:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5020:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"EmitStatement","src":"5015:40:3"},{"expression":{"arguments":[{"id":449,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"5075:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":448,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"5065:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5065:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"5065:19:3"}]},"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"4851:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":453,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4965:12:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"newAdmin","nameLocation":"4986:8:3","nodeType":"VariableDeclaration","scope":453,"src":"4978:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4977:18:3"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"5005:0:3"},"scope":588,"src":"4956:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"5097:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":457,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5360:12:3","nodeType":"VariableDeclaration","scope":588,"src":"5334:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"5448:60:3","text":" @dev Emitted when the beacon is upgraded."},"id":462,"name":"BeaconUpgraded","nameLocation":"5519:14:3","nodeType":"EventDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5550:6:3","nodeType":"VariableDeclaration","scope":462,"src":"5534:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"5534:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5533:24:3"},"src":"5513:45:3"},{"body":{"id":474,"nodeType":"Block","src":"5674:81:3","statements":[{"expression":{"expression":{"arguments":[{"id":470,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5729:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":468,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"5691:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"5691:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5691:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"5691:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":467,"id":473,"nodeType":"Return","src":"5684:64:3"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"5564:51:3","text":" @dev Returns the current beacon."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5629:10:3","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"5639:2:3"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"5665:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5664:9:3"},"scope":588,"src":"5620:135:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":510,"nodeType":"Block","src":"5884:368:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":484,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5932:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":482,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"5902:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"5902:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5902:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"5894:90:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":493,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6064:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6045:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$598_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$598","typeString":"contract IBeaconUpgradeable"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":597,"src":"6045:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":490,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"6015:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"6015:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6106:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5994:172:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"5994:172:3"},{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":504,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6214:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":501,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"6176:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3029_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"6176:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2975_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6176:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"6176:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":507,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6236:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6176:69:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":509,"nodeType":"ExpressionStatement","src":"6176:69:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"5761:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5846:10:3","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"newBeacon","nameLocation":"5865:9:3","nodeType":"VariableDeclaration","scope":511,"src":"5857:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5856:19:3"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"5884:0:3"},"scope":588,"src":"5837:415:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":546,"nodeType":"Block","src":"6681:221:3","statements":[{"expression":{"arguments":[{"id":522,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"6702:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":521,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6691:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6691:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6691:21:3"},{"eventCall":{"arguments":[{"id":526,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"6742:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":525,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6727:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"EmitStatement","src":"6722:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":529,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"6766:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6766:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6766:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":533,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"6785:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6766:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"IfStatement","src":"6762:134:3","trueBody":{"id":544,"nodeType":"Block","src":"6796:100:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":537,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"6851:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":536,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6832:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$598_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$598","typeString":"contract IBeaconUpgradeable"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":597,"src":"6832:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"6880:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":535,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6810:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":543,"nodeType":"ExpressionStatement","src":"6810:75:3"}]}}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"6258:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6564:23:3","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"newBeacon","nameLocation":"6605:9:3","nodeType":"VariableDeclaration","scope":547,"src":"6597:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"6597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"data","nameLocation":"6637:4:3","nodeType":"VariableDeclaration","scope":547,"src":"6624:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"6624:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"forceCall","nameLocation":"6656:9:3","nodeType":"VariableDeclaration","scope":547,"src":"6651:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"6651:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6587:84:3"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"6681:0:3"},"scope":588,"src":"6555:347:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"7185:358:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":560,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7233:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":558,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"7203:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"7203:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7242:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7195:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7195:88:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"7195:88:3"},{"assignments":[566,568],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"success","nameLocation":"7359:7:3","nodeType":"VariableDeclaration","scope":581,"src":"7354:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"7354:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"returndata","nameLocation":"7381:10:3","nodeType":"VariableDeclaration","scope":581,"src":"7368:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":567,"name":"bytes","nodeType":"ElementaryTypeName","src":"7368:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7415:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":569,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7395:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7395:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7395:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7353:67:3"},{"expression":{"arguments":[{"id":576,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7473:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":577,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7482:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"expression":{"id":574,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"7437:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":2852,"src":"7437:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7437:99:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":556,"id":580,"nodeType":"Return","src":"7430:106:3"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"6908:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"_functionDelegateCall","nameLocation":"7097:21:3","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"target","nameLocation":"7127:6:3","nodeType":"VariableDeclaration","scope":582,"src":"7119:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"7119:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"data","nameLocation":"7148:4:3","nodeType":"VariableDeclaration","scope":582,"src":"7135:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":551,"name":"bytes","nodeType":"ElementaryTypeName","src":"7135:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7118:35:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"7171:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":554,"name":"bytes","nodeType":"ElementaryTypeName","src":"7171:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7170:14:3"},"scope":588,"src":"7088:455:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"7549:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":587,"mutability":"mutable","name":"__gap","nameLocation":"7828:5:3","nodeType":"VariableDeclaration","scope":588,"src":"7808:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"length":{"hexValue":"3530","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"7808:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":589,"src":"610:7226:3","usedErrors":[]}],"src":"116:7721:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[598]},"id":599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":590,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"118:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":598,"linearizedBaseContracts":[598],"name":"IBeaconUpgradeable","nameLocation":"208:18:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"233:162:4","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":597,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:4","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"449:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:4"},"scope":598,"src":"400:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":599,"src":"198:262:4","usedErrors":[]}],"src":"93:368:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"Initializable":[749]},"id":750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":600,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":750,"sourceUnit":2854,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"184:2198:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":749,"linearizedBaseContracts":[749],"name":"Initializable","nameLocation":"2401:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2421:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":605,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:5","nodeType":"VariableDeclaration","scope":749,"src":"2535:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":604,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"2568:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":608,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:5","nodeType":"VariableDeclaration","scope":749,"src":"2664:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":607,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"2697:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":613,"name":"Initialized","nameLocation":"2798:11:5","nodeType":"EventDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:5","nodeType":"VariableDeclaration","scope":613,"src":"2810:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":610,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:5"},"src":"2792:33:5"},{"body":{"id":668,"nodeType":"Block","src":"3101:483:5","statements":[{"assignments":[617],"declarations":[{"constant":false,"id":617,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:5","nodeType":"VariableDeclaration","scope":668,"src":"3111:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":620,"initialValue":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:5","subExpression":{"id":618,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3134:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3179:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":623,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3197:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:5","subExpression":{"arguments":[{"arguments":[{"id":632,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$749","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$749","typeString":"contract Initializable"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:5","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":628,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"3220:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2853_$","typeString":"type(library AddressUpgradeable)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"3220:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3268:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"ExpressionStatement","src":"3157:201:5"},{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":645,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3368:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":648,"nodeType":"ExpressionStatement","src":"3368:16:5"},{"condition":{"id":649,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3398:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":655,"nodeType":"IfStatement","src":"3394:65:5","trueBody":{"id":654,"nodeType":"Block","src":"3414:45:5","statements":[{"expression":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":650,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3428:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"ExpressionStatement","src":"3428:20:5"}]}},{"id":656,"nodeType":"PlaceholderStatement","src":"3468:1:5"},{"condition":{"id":657,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3483:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":667,"nodeType":"IfStatement","src":"3479:99:5","trueBody":{"id":666,"nodeType":"Block","src":"3499:79:5","statements":[{"expression":{"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":658,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3513:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"ExpressionStatement","src":"3513:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":662,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3553:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"EmitStatement","src":"3548:19:5"}]}}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"2831:242:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":669,"name":"initializer","nameLocation":"3087:11:5","nodeType":"ModifierDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"3098:2:5"},"src":"3078:506:5","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"4399:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:5","subExpression":{"id":675,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4418:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":677,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4435:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":678,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"4450:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"4409:99:5"},{"expression":{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":684,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4518:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":685,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"4533:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":687,"nodeType":"ExpressionStatement","src":"4518:22:5"},{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":688,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4550:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":691,"nodeType":"ExpressionStatement","src":"4550:20:5"},{"id":692,"nodeType":"PlaceholderStatement","src":"4580:1:5"},{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":693,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4591:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":696,"nodeType":"ExpressionStatement","src":"4591:21:5"},{"eventCall":{"arguments":[{"id":698,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"4639:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":697,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4627:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"EmitStatement","src":"4622:25:5"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"3590:766:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":702,"name":"reinitializer","nameLocation":"4370:13:5","nodeType":"ModifierDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"version","nameLocation":"4390:7:5","nodeType":"VariableDeclaration","scope":702,"src":"4384:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":671,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:5"},"src":"4361:293:5","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"4892:97:5","statements":[{"expression":{"arguments":[{"id":706,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4910:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4902:69:5"},{"id":710,"nodeType":"PlaceholderStatement","src":"4981:1:5"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"4660:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":712,"name":"onlyInitializing","nameLocation":"4873:16:5","nodeType":"ModifierDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"4889:2:5"},"src":"4864:125:5","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"5437:230:5","statements":[{"expression":{"arguments":[{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:5","subExpression":{"id":717,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5456:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"5447:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":722,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5527:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":724,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"5523:138:5","trueBody":{"id":745,"nodeType":"Block","src":"5559:102:5","statements":[{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":729,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5573:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":731,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":730,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":736,"nodeType":"ExpressionStatement","src":"5573:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":739,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":738,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":737,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5622:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"EmitStatement","src":"5617:33:5"}]}}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"4995:388:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:5","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"5417:2:5"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"5437:0:5"},"scope":749,"src":"5388:279:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":750,"src":"2383:3286:5","usedErrors":[]}],"src":"113:5557:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ERC1967UpgradeUpgradeable":[588],"IBeaconUpgradeable":[598],"IERC1822ProxiableUpgradeable":[219],"Initializable":[749],"StorageSlotUpgradeable":[3029],"UUPSUpgradeable":[885]},"id":886,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":751,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":220,"src":"140:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":589,"src":"197:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":750,"src":"248:29:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":756,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"965:13:6"},"id":757,"nodeType":"InheritanceSpecifier","src":"965:13:6"},{"baseName":{"id":758,"name":"IERC1822ProxiableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":219,"src":"980:28:6"},"id":759,"nodeType":"InheritanceSpecifier","src":"980:28:6"},{"baseName":{"id":760,"name":"ERC1967UpgradeUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":588,"src":"1010:25:6"},"id":761,"nodeType":"InheritanceSpecifier","src":"1010:25:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"279:648:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":885,"linearizedBaseContracts":[885,588,219,749],"name":"UUPSUpgradeable","nameLocation":"946:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"1102:7:6","statements":[]},"id":767,"implemented":true,"kind":"function","modifiers":[{"id":764,"kind":"modifierInvocation","modifierName":{"id":763,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1085:16:6"},"nodeType":"ModifierInvocation","src":"1085:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:6","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"1073:2:6"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":885,"src":"1042:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"1185:7:6","statements":[]},"id":773,"implemented":true,"kind":"function","modifiers":[{"id":770,"kind":"modifierInvocation","modifierName":{"id":769,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1168:16:6"},"nodeType":"ModifierInvocation","src":"1168:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:6","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"1156:2:6"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"1185:0:6"},"scope":885,"src":"1115:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"1197:87:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":780,"mutability":"immutable","name":"__self","nameLocation":"1315:6:6","nodeType":"VariableDeclaration","scope":885,"src":"1289:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":778,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}],"id":777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{}}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1324:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":802,"nodeType":"Block","src":"1863:205:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":786,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}],"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{}}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":788,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1873:80:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"1873:80:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1971:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":796,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1995:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"1963:87:6"},{"id":801,"nodeType":"PlaceholderStatement","src":"2060:1:6"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1344:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":803,"name":"onlyProxy","nameLocation":"1851:9:6","nodeType":"ModifierDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"1860:2:6"},"src":"1842:226:6","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"2298:120:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":809,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$885","typeString":"contract UUPSUpgradeable"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":811,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2333:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"2308:92:6"},{"id":816,"nodeType":"PlaceholderStatement","src":"2410:1:6"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"2074:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":818,"name":"notDelegated","nameLocation":"2283:12:6","nodeType":"ModifierDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"2295:2:6"},"src":"2274:144:6","virtual":false,"visibility":"internal"},{"baseFunctions":[218],"body":{"id":829,"nodeType":"Block","src":"3091:44:6","statements":[{"expression":{"id":827,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3108:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":826,"id":828,"nodeType":"Return","src":"3101:27:6"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"2424:575:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate that the this implementation remains valid after an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":830,"implemented":true,"kind":"function","modifiers":[{"id":823,"kind":"modifierInvocation","modifierName":{"id":822,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":818,"src":"3060:12:6"},"nodeType":"ModifierInvocation","src":"3060:12:6"}],"name":"proxiableUUID","nameLocation":"3013:13:6","nodeType":"FunctionDefinition","overrides":{"id":821,"nodeType":"OverrideSpecifier","overrides":[],"src":"3051:8:6"},"parameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"3026:2:6"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"3082:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3081:9:6"},"scope":885,"src":"3004:131:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":851,"nodeType":"Block","src":"3388:124:6","statements":[{"expression":{"arguments":[{"id":839,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3416:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"3398:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3398:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"3398:36:6"},{"expression":{"arguments":[{"id":843,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3466:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3495:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3485:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":844,"name":"bytes","nodeType":"ElementaryTypeName","src":"3489:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3485:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":842,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3444:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3444:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"3444:61:6"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"3141:169:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":852,"implemented":true,"kind":"function","modifiers":[{"id":836,"kind":"modifierInvocation","modifierName":{"id":835,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":803,"src":"3378:9:6"},"nodeType":"ModifierInvocation","src":"3378:9:6"}],"name":"upgradeTo","nameLocation":"3324:9:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"newImplementation","nameLocation":"3342:17:6","nodeType":"VariableDeclaration","scope":852,"src":"3334:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3333:27:6"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"3388:0:6"},"scope":885,"src":"3315:197:6","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":872,"nodeType":"Block","src":"3868:115:6","statements":[{"expression":{"arguments":[{"id":863,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3896:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":862,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"3878:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3878:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"3878:36:6"},{"expression":{"arguments":[{"id":867,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3946:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3965:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3971:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":866,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3924:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3924:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"3924:52:6"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"3518:238:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":873,"implemented":true,"kind":"function","modifiers":[{"id":860,"kind":"modifierInvocation","modifierName":{"id":859,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":803,"src":"3858:9:6"},"nodeType":"ModifierInvocation","src":"3858:9:6"}],"name":"upgradeToAndCall","nameLocation":"3770:16:6","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"newImplementation","nameLocation":"3795:17:6","nodeType":"VariableDeclaration","scope":873,"src":"3787:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"data","nameLocation":"3827:4:6","nodeType":"VariableDeclaration","scope":873,"src":"3814:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3814:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:46:6"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"3868:0:6"},"scope":885,"src":"3761:222:6","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"3989:397:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":879,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"newImplementation","nameLocation":"4426:17:6","nodeType":"VariableDeclaration","scope":879,"src":"4418:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4417:27:6"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"4461:0:6"},"scope":885,"src":"4391:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"4468:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":884,"mutability":"mutable","name":"__gap","nameLocation":"4747:5:6","nodeType":"VariableDeclaration","scope":885,"src":"4727:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"length":{"hexValue":"3530","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4735:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4727:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":886,"src":"928:3827:6","usedErrors":[]}],"src":"115:4641:6"},"id":6},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"Initializable":[749],"PausableUpgradeable":[1012]},"id":1013,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":887,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1013,"sourceUnit":2896,"src":"130:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1013,"sourceUnit":750,"src":"172:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":891,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"697:13:7"},"id":892,"nodeType":"InheritanceSpecifier","src":"697:13:7"},{"baseName":{"id":893,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"712:18:7"},"id":894,"nodeType":"InheritanceSpecifier","src":"712:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"216:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1012,"linearizedBaseContracts":[1012,2895,749],"name":"PausableUpgradeable","nameLocation":"674:19:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"737:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"id":899,"name":"Paused","nameLocation":"821:6:7","nodeType":"EventDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:7","nodeType":"VariableDeclaration","scope":899,"src":"828:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:7"},"src":"815:30:7"},{"anonymous":false,"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"851:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"id":904,"name":"Unpaused","nameLocation":"932:8:7","nodeType":"EventDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:7","nodeType":"VariableDeclaration","scope":904,"src":"941:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:7"},"src":"926:32:7"},{"constant":false,"id":906,"mutability":"mutable","name":"_paused","nameLocation":"977:7:7","nodeType":"VariableDeclaration","scope":1012,"src":"964:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":905,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":915,"nodeType":"Block","src":"1116:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"1126:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"1126:27:7"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"991:67:7","text":" @dev Initializes the contract in unpaused state."},"id":916,"implemented":true,"kind":"function","modifiers":[{"id":910,"kind":"modifierInvocation","modifierName":{"id":909,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1099:16:7"},"nodeType":"ModifierInvocation","src":"1099:16:7"}],"name":"__Pausable_init","nameLocation":"1072:15:7","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"1087:2:7"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"1116:0:7"},"scope":1012,"src":"1063:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"1229:32:7","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1239:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":924,"nodeType":"ExpressionStatement","src":"1239:15:7"}]},"id":926,"implemented":true,"kind":"function","modifiers":[{"id":919,"kind":"modifierInvocation","modifierName":{"id":918,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1212:16:7"},"nodeType":"ModifierInvocation","src":"1212:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:7","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"1200:2:7"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"1229:0:7"},"scope":1012,"src":"1166:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":933,"nodeType":"Block","src":"1472:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":929,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"1482:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"1482:19:7"},{"id":932,"nodeType":"PlaceholderStatement","src":"1511:1:7"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"1267:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":934,"name":"whenNotPaused","nameLocation":"1456:13:7","nodeType":"ModifierDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"1469:2:7"},"src":"1447:72:7","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"1719:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1729:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"1729:16:7"},{"id":940,"nodeType":"PlaceholderStatement","src":"1755:1:7"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1525:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":942,"name":"whenPaused","nameLocation":"1706:10:7","nodeType":"ModifierDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"1716:2:7"},"src":"1697:66:7","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"1911:31:7","statements":[{"expression":{"id":948,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1928:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":947,"id":949,"nodeType":"Return","src":"1921:14:7"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"1769:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":951,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:7","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"1873:2:7"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"1905:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":945,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:7"},"scope":1012,"src":"1858:84:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":962,"nodeType":"Block","src":"2061:55:7","statements":[{"expression":{"arguments":[{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":956,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2080:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"2071:38:7"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1948:57:7","text":" @dev Throws if the contract is paused."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:7","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"2036:2:7"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"2061:0:7"},"scope":1012,"src":"2010:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"2236:58:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":968,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2254:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"2246:41:7"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"2122:61:7","text":" @dev Throws if the contract is not paused."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"2211:2:7"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[],"src":"2236:0:7"},"scope":1012,"src":"2188:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"2478:66:7","statements":[{"expression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":980,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2488:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":983,"nodeType":"ExpressionStatement","src":"2488:14:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":985,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"2524:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":984,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"2517:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"EmitStatement","src":"2512:25:7"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"2300:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":990,"implemented":true,"kind":"function","modifiers":[{"id":978,"kind":"modifierInvocation","modifierName":{"id":977,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":934,"src":"2464:13:7"},"nodeType":"ModifierInvocation","src":"2464:13:7"}],"name":"_pause","nameLocation":"2438:6:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"2444:2:7"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"2478:0:7"},"scope":1012,"src":"2429:115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"2724:69:7","statements":[{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":996,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2734:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":999,"nodeType":"ExpressionStatement","src":"2734:15:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"2773:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2764:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"2759:27:7"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"2550:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1006,"implemented":true,"kind":"function","modifiers":[{"id":994,"kind":"modifierInvocation","modifierName":{"id":993,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2713:10:7"},"nodeType":"ModifierInvocation","src":"2713:10:7"}],"name":"_unpause","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"2693:2:7"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"2724:0:7"},"scope":1012,"src":"2676:117:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"2799:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1011,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1012,"src":"3058:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"length":{"hexValue":"3439","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1013,"src":"656:2430:7","usedErrors":[]}],"src":"105:2982:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"ERC20Upgradeable":[1623],"IERC20MetadataUpgradeable":[2383],"IERC20Upgradeable":[1701],"Initializable":[749]},"id":1624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1014,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":1015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1624,"sourceUnit":1702,"src":"130:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":1016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1624,"sourceUnit":2384,"src":"164:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1624,"sourceUnit":2896,"src":"217:44:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1624,"sourceUnit":750,"src":"262:45:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1020,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1511:13:8"},"id":1021,"nodeType":"InheritanceSpecifier","src":"1511:13:8"},{"baseName":{"id":1022,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"1526:18:8"},"id":1023,"nodeType":"InheritanceSpecifier","src":"1526:18:8"},{"baseName":{"id":1024,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1701,"src":"1546:17:8"},"id":1025,"nodeType":"InheritanceSpecifier","src":"1546:17:8"},{"baseName":{"id":1026,"name":"IERC20MetadataUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"1565:25:8"},"id":1027,"nodeType":"InheritanceSpecifier","src":"1565:25:8"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"309:1172:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1623,"linearizedBaseContracts":[1623,2383,1701,2895,749],"name":"ERC20Upgradeable","nameLocation":"1491:16:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1031,"mutability":"mutable","name":"_balances","nameLocation":"1633:9:8","nodeType":"VariableDeclaration","scope":1623,"src":"1597:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1030,"keyType":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1597:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1037,"mutability":"mutable","name":"_allowances","nameLocation":"1705:11:8","nodeType":"VariableDeclaration","scope":1623,"src":"1649:67:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1036,"keyType":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1649:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1035,"keyType":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1668:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1039,"mutability":"mutable","name":"_totalSupply","nameLocation":"1739:12:8","nodeType":"VariableDeclaration","scope":1623,"src":"1723:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1041,"mutability":"mutable","name":"_name","nameLocation":"1773:5:8","nodeType":"VariableDeclaration","scope":1623,"src":"1758:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"1758:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1043,"mutability":"mutable","name":"_symbol","nameLocation":"1799:7:8","nodeType":"VariableDeclaration","scope":1623,"src":"1784:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1042,"name":"string","nodeType":"ElementaryTypeName","src":"1784:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1058,"nodeType":"Block","src":"2208:55:8","statements":[{"expression":{"arguments":[{"id":1054,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2241:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1055,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2248:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1053,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2218:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2218:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"2218:38:8"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"1813:298:8","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1059,"implemented":true,"kind":"function","modifiers":[{"id":1051,"kind":"modifierInvocation","modifierName":{"id":1050,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2191:16:8"},"nodeType":"ModifierInvocation","src":"2191:16:8"}],"name":"__ERC20_init","nameLocation":"2125:12:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"name_","nameLocation":"2152:5:8","nodeType":"VariableDeclaration","scope":1059,"src":"2138:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1045,"name":"string","nodeType":"ElementaryTypeName","src":"2138:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"symbol_","nameLocation":"2173:7:8","nodeType":"VariableDeclaration","scope":1059,"src":"2159:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1047,"name":"string","nodeType":"ElementaryTypeName","src":"2159:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2137:44:8"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[],"src":"2208:0:8"},"scope":1623,"src":"2116:147:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"2371:57:8","statements":[{"expression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1068,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2381:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1069,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2389:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2381:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1071,"nodeType":"ExpressionStatement","src":"2381:13:8"},{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1072,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2404:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1073,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2414:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2404:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1075,"nodeType":"ExpressionStatement","src":"2404:17:8"}]},"id":1077,"implemented":true,"kind":"function","modifiers":[{"id":1066,"kind":"modifierInvocation","modifierName":{"id":1065,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2354:16:8"},"nodeType":"ModifierInvocation","src":"2354:16:8"}],"name":"__ERC20_init_unchained","nameLocation":"2278:22:8","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"name_","nameLocation":"2315:5:8","nodeType":"VariableDeclaration","scope":1077,"src":"2301:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1060,"name":"string","nodeType":"ElementaryTypeName","src":"2301:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"symbol_","nameLocation":"2336:7:8","nodeType":"VariableDeclaration","scope":1077,"src":"2322:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1062,"name":"string","nodeType":"ElementaryTypeName","src":"2322:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2300:44:8"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"2371:0:8"},"scope":1623,"src":"2269:159:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2370],"body":{"id":1086,"nodeType":"Block","src":"2562:29:8","statements":[{"expression":{"id":1084,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2579:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1083,"id":1085,"nodeType":"Return","src":"2572:12:8"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"2434:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2502:4:8","nodeType":"FunctionDefinition","overrides":{"id":1080,"nodeType":"OverrideSpecifier","overrides":[],"src":"2529:8:8"},"parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"2506:2:8"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"2547:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1081,"name":"string","nodeType":"ElementaryTypeName","src":"2547:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2546:15:8"},"scope":1623,"src":"2493:98:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2376],"body":{"id":1096,"nodeType":"Block","src":"2775:31:8","statements":[{"expression":{"id":1094,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2792:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1093,"id":1095,"nodeType":"Return","src":"2785:14:8"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"2597:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2713:6:8","nodeType":"FunctionDefinition","overrides":{"id":1090,"nodeType":"OverrideSpecifier","overrides":[],"src":"2742:8:8"},"parameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"2719:2:8"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"2760:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1091,"name":"string","nodeType":"ElementaryTypeName","src":"2760:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2759:15:8"},"scope":1623,"src":"2704:102:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2382],"body":{"id":1106,"nodeType":"Block","src":"3495:26:8","statements":[{"expression":{"hexValue":"3138","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3512:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1103,"id":1105,"nodeType":"Return","src":"3505:9:8"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"2812:613:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3439:8:8","nodeType":"FunctionDefinition","overrides":{"id":1100,"nodeType":"OverrideSpecifier","overrides":[],"src":"3470:8:8"},"parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"3447:2:8"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"3488:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1101,"name":"uint8","nodeType":"ElementaryTypeName","src":"3488:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3487:7:8"},"scope":1623,"src":"3430:91:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1650],"body":{"id":1116,"nodeType":"Block","src":"3651:36:8","statements":[{"expression":{"id":1114,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3668:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1113,"id":1115,"nodeType":"Return","src":"3661:19:8"}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"3527:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3590:11:8","nodeType":"FunctionDefinition","overrides":{"id":1110,"nodeType":"OverrideSpecifier","overrides":[],"src":"3624:8:8"},"parameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"3601:2:8"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3642:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3642:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3641:9:8"},"scope":1623,"src":"3581:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1658],"body":{"id":1130,"nodeType":"Block","src":"3828:42:8","statements":[{"expression":{"baseExpression":{"id":1126,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3845:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1128,"indexExpression":{"id":1127,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3855:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3845:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1125,"id":1129,"nodeType":"Return","src":"3838:25:8"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"3693:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3754:9:8","nodeType":"FunctionDefinition","overrides":{"id":1122,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:8"},"parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"account","nameLocation":"3772:7:8","nodeType":"VariableDeclaration","scope":1131,"src":"3764:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"3764:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3763:17:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"3819:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:9:8"},"scope":1623,"src":"3745:125:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1668],"body":{"id":1155,"nodeType":"Block","src":"4151:104:8","statements":[{"assignments":[1143],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"owner","nameLocation":"4169:5:8","nodeType":"VariableDeclaration","scope":1155,"src":"4161:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"4161:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1144,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4177:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4177:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4161:28:8"},{"expression":{"arguments":[{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4209:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4216:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"4220:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1147,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"4199:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4199:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"ExpressionStatement","src":"4199:28:8"},{"expression":{"hexValue":"74727565","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4244:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1141,"id":1154,"nodeType":"Return","src":"4237:11:8"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"3876:185:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4075:8:8","nodeType":"FunctionDefinition","overrides":{"id":1138,"nodeType":"OverrideSpecifier","overrides":[],"src":"4127:8:8"},"parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"to","nameLocation":"4092:2:8","nodeType":"VariableDeclaration","scope":1156,"src":"4084:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"amount","nameLocation":"4104:6:8","nodeType":"VariableDeclaration","scope":1156,"src":"4096:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4083:28:8"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"4145:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1139,"name":"bool","nodeType":"ElementaryTypeName","src":"4145:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4144:6:8"},"scope":1623,"src":"4066:189:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1173,"nodeType":"Block","src":"4411:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1167,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4428:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1169,"indexExpression":{"id":1168,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4440:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4428:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1171,"indexExpression":{"id":1170,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"4447:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4428:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1166,"id":1172,"nodeType":"Return","src":"4421:34:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"4261:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4322:9:8","nodeType":"FunctionDefinition","overrides":{"id":1163,"nodeType":"OverrideSpecifier","overrides":[],"src":"4384:8:8"},"parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"owner","nameLocation":"4340:5:8","nodeType":"VariableDeclaration","scope":1174,"src":"4332:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"4332:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"spender","nameLocation":"4355:7:8","nodeType":"VariableDeclaration","scope":1174,"src":"4347:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"4347:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4331:32:8"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"4402:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"4402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4401:9:8"},"scope":1623,"src":"4313:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1688],"body":{"id":1198,"nodeType":"Block","src":"4859:108:8","statements":[{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"owner","nameLocation":"4877:5:8","nodeType":"VariableDeclaration","scope":1198,"src":"4869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1189,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1187,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4885:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4885:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4869:28:8"},{"expression":{"arguments":[{"id":1191,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4916:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4923:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4932:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1190,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4907:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4907:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"4907:32:8"},{"expression":{"hexValue":"74727565","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4956:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1184,"id":1197,"nodeType":"Return","src":"4949:11:8"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"4468:297:8","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4779:7:8","nodeType":"FunctionDefinition","overrides":{"id":1181,"nodeType":"OverrideSpecifier","overrides":[],"src":"4835:8:8"},"parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"spender","nameLocation":"4795:7:8","nodeType":"VariableDeclaration","scope":1199,"src":"4787:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"4787:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"amount","nameLocation":"4812:6:8","nodeType":"VariableDeclaration","scope":1199,"src":"4804:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4804:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4786:33:8"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1199,"src":"4853:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"4853:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4852:6:8"},"scope":1623,"src":"4770:197:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1700],"body":{"id":1231,"nodeType":"Block","src":"5662:153:8","statements":[{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"spender","nameLocation":"5680:7:8","nodeType":"VariableDeclaration","scope":1231,"src":"5672:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"5672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1216,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5690:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5672:30:8"},{"expression":{"arguments":[{"id":1218,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5728:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5734:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5743:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1217,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5712:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5712:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"5712:38:8"},{"expression":{"arguments":[{"id":1224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5770:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5776:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5780:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5760:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5760:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"5760:27:8"},{"expression":{"hexValue":"74727565","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5804:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1211,"id":1230,"nodeType":"Return","src":"5797:11:8"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"4973:551:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5538:12:8","nodeType":"FunctionDefinition","overrides":{"id":1208,"nodeType":"OverrideSpecifier","overrides":[],"src":"5638:8:8"},"parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"from","nameLocation":"5568:4:8","nodeType":"VariableDeclaration","scope":1232,"src":"5560:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"5560:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"to","nameLocation":"5590:2:8","nodeType":"VariableDeclaration","scope":1232,"src":"5582:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"5582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"amount","nameLocation":"5610:6:8","nodeType":"VariableDeclaration","scope":1232,"src":"5602:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"5602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5550:72:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"5656:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1209,"name":"bool","nodeType":"ElementaryTypeName","src":"5656:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5655:6:8"},"scope":1623,"src":"5529:286:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1260,"nodeType":"Block","src":"6304:140:8","statements":[{"assignments":[1243],"declarations":[{"constant":false,"id":1243,"mutability":"mutable","name":"owner","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"6330:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6330:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6314:28:8"},{"expression":{"arguments":[{"id":1248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"6361:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1251,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"6387:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6394:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1250,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6377:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6377:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1254,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6405:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6377:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"6352:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6352:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"6352:64:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1241,"id":1259,"nodeType":"Return","src":"6426:11:8"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"5821:384:8","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6219:17:8","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"spender","nameLocation":"6245:7:8","nodeType":"VariableDeclaration","scope":1261,"src":"6237:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"addedValue","nameLocation":"6262:10:8","nodeType":"VariableDeclaration","scope":1261,"src":"6254:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"6254:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6236:37:8"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"6298:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6297:6:8"},"scope":1623,"src":"6210:234:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1301,"nodeType":"Block","src":"7030:328:8","statements":[{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"owner","nameLocation":"7048:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"7040:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1273,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"7056:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7056:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7040:28:8"},{"assignments":[1277],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"currentAllowance","nameLocation":"7086:16:8","nodeType":"VariableDeclaration","scope":1301,"src":"7078:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"7078:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1282,"initialValue":{"arguments":[{"id":1279,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7115:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"7122:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1278,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7105:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7105:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7078:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7148:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1285,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7168:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7148:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7185:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7140:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7140:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"7140:85:8"},{"id":1298,"nodeType":"UncheckedBlock","src":"7235:95:8","statements":[{"expression":{"arguments":[{"id":1291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7268:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"7275:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1293,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7284:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1294,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7303:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1290,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7259:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7259:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"7259:60:8"}]},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7347:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1270,"id":1300,"nodeType":"Return","src":"7340:11:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"6450:476:8","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6940:17:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"spender","nameLocation":"6966:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"6958:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"6958:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"subtractedValue","nameLocation":"6983:15:8","nodeType":"VariableDeclaration","scope":1302,"src":"6975:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6957:42:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"7024:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1268,"name":"bool","nodeType":"ElementaryTypeName","src":"7024:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7023:6:8"},"scope":1623,"src":"6931:427:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1378,"nodeType":"Block","src":"7920:543:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"7938:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7954:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7946:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"7946:7:8","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7946:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7938:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7958:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7930:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7930:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1321,"nodeType":"ExpressionStatement","src":"7930:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8016:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8030:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8022:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"8022:7:8","typeDescriptions":{}}},"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8022:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8016:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8034:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8008:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8008:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"8008:64:8"},{"expression":{"arguments":[{"id":1333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8104:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8110:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8114:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"8083:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8083:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"ExpressionStatement","src":"8083:38:8"},{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"fromBalance","nameLocation":"8140:11:8","nodeType":"VariableDeclaration","scope":1378,"src":"8132:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1343,"initialValue":{"baseExpression":{"id":1340,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8154:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1342,"indexExpression":{"id":1341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8164:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8154:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:37:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8187:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1346,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8202:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8187:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8210:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8179:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8179:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"8179:72:8"},{"id":1359,"nodeType":"UncheckedBlock","src":"8261:73:8","statements":[{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1351,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8285:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1353,"indexExpression":{"id":1352,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8295:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8285:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8303:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8317:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8303:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8285:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1358,"nodeType":"ExpressionStatement","src":"8285:38:8"}]},{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1360,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8343:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1362,"indexExpression":{"id":1361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8353:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8343:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1363,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8360:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8343:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"8343:23:8"},{"eventCall":{"arguments":[{"id":1367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8391:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8397:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8401:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1366,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8382:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8382:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"EmitStatement","src":"8377:31:8"},{"expression":{"arguments":[{"id":1373,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8439:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8445:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8449:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"8419:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8419:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"8419:37:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"7364:443:8","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7821:9:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"7848:4:8","nodeType":"VariableDeclaration","scope":1379,"src":"7840:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"7840:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"7870:2:8","nodeType":"VariableDeclaration","scope":1379,"src":"7862:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"7862:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"amount","nameLocation":"7890:6:8","nodeType":"VariableDeclaration","scope":1379,"src":"7882:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"7882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7830:72:8"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"7920:0:8"},"scope":1623,"src":"7812:651:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1434,"nodeType":"Block","src":"8804:324:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8822:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8841:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8833:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"8833:7:8","typeDescriptions":{}}},"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8833:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8822:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8845:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8814:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8814:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"ExpressionStatement","src":"8814:65:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8919:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8911:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"8911:7:8","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8911:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8923:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8932:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"8890:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8890:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"ExpressionStatement","src":"8890:49:8"},{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1406,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8950:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8966:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8950:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1409,"nodeType":"ExpressionStatement","src":"8950:22:8"},{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1410,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8982:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1412,"indexExpression":{"id":1411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8992:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8982:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1413,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9004:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8982:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1415,"nodeType":"ExpressionStatement","src":"8982:28:8"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9034:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"9034:7:8","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9034:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9046:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9055:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1416,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9025:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9025:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"EmitStatement","src":"9020:42:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9101:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9093:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"9093:7:8","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9093:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9105:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1431,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9114:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1425,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9073:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9073:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"9073:48:8"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"8469:265:8","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8748:5:8","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"account","nameLocation":"8762:7:8","nodeType":"VariableDeclaration","scope":1435,"src":"8754:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"8754:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"amount","nameLocation":"8779:6:8","nodeType":"VariableDeclaration","scope":1435,"src":"8771:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8771:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8753:33:8"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[],"src":"8804:0:8"},"scope":1623,"src":"8739:389:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1506,"nodeType":"Block","src":"9513:511:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9531:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9550:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9542:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"9542:7:8","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9542:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9531:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9554:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9523:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9523:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"9523:67:8"},{"expression":{"arguments":[{"id":1454,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9622:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9639:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9631:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"9631:7:8","typeDescriptions":{}}},"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9631:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9643:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1453,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"9601:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9601:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"ExpressionStatement","src":"9601:49:8"},{"assignments":[1463],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"accountBalance","nameLocation":"9669:14:8","nodeType":"VariableDeclaration","scope":1506,"src":"9661:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"9661:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"baseExpression":{"id":1464,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9686:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1466,"indexExpression":{"id":1465,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9696:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9686:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9661:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"9722:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1470,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9740:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9722:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9748:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9714:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9714:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"ExpressionStatement","src":"9714:71:8"},{"id":1483,"nodeType":"UncheckedBlock","src":"9795:79:8","statements":[{"expression":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1475,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9819:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1477,"indexExpression":{"id":1476,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9829:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9819:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"9840:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9857:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9819:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1482,"nodeType":"ExpressionStatement","src":"9819:44:8"}]},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"9883:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1485,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9899:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"9883:22:8"},{"eventCall":{"arguments":[{"id":1489,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9930:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9947:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9939:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"9939:7:8","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9939:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9951:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9921:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9921:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1496,"nodeType":"EmitStatement","src":"9916:42:8"},{"expression":{"arguments":[{"id":1498,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9989:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9998:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"9998:7:8","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9998:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"10010:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1497,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9969:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9969:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"ExpressionStatement","src":"9969:48:8"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"9134:309:8","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9457:5:8","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"account","nameLocation":"9471:7:8","nodeType":"VariableDeclaration","scope":1507,"src":"9463:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"9463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"amount","nameLocation":"9488:6:8","nodeType":"VariableDeclaration","scope":1507,"src":"9480:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"9480:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9462:33:8"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"9513:0:8"},"scope":1623,"src":"9448:576:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1551,"nodeType":"Block","src":"10560:257:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"10578:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10595:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10587:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"10587:7:8","typeDescriptions":{}}},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10587:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10578:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10599:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10570:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10570:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"10570:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"10656:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10675:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10667:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"10667:7:8","typeDescriptions":{}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10667:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10656:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10679:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10648:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10648:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"10648:68:8"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1537,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"10727:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1540,"indexExpression":{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"10739:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10727:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1541,"indexExpression":{"id":1539,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"10746:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"10757:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10727:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"10727:36:8"},{"eventCall":{"arguments":[{"id":1546,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"10787:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1547,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"10794:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"10803:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1545,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"10778:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10778:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"EmitStatement","src":"10773:37:8"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"10030:412:8","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10456:8:8","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"owner","nameLocation":"10482:5:8","nodeType":"VariableDeclaration","scope":1552,"src":"10474:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"spender","nameLocation":"10505:7:8","nodeType":"VariableDeclaration","scope":1552,"src":"10497:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"10497:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"amount","nameLocation":"10530:6:8","nodeType":"VariableDeclaration","scope":1552,"src":"10522:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"10522:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10464:78:8"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"10560:0:8"},"scope":1623,"src":"10447:370:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"11218:321:8","statements":[{"assignments":[1563],"declarations":[{"constant":false,"id":1563,"mutability":"mutable","name":"currentAllowance","nameLocation":"11236:16:8","nodeType":"VariableDeclaration","scope":1594,"src":"11228:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"11228:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1568,"initialValue":{"arguments":[{"id":1565,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11265:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1566,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11272:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1564,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11255:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11228:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11294:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11319:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11319:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11314:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11314:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11314:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11294:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1593,"nodeType":"IfStatement","src":"11290:243:8","trueBody":{"id":1592,"nodeType":"Block","src":"11333:200:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11355:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1578,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"11375:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11355:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11383:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11347:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11347:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"11347:68:8"},{"id":1591,"nodeType":"UncheckedBlock","src":"11429:94:8","statements":[{"expression":{"arguments":[{"id":1584,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11466:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11473:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11482:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"11501:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11482:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1583,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"11457:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11457:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"11457:51:8"}]}]}}]},"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"10823:270:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11107:15:8","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"owner","nameLocation":"11140:5:8","nodeType":"VariableDeclaration","scope":1595,"src":"11132:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"11132:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"spender","nameLocation":"11163:7:8","nodeType":"VariableDeclaration","scope":1595,"src":"11155:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"11155:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"amount","nameLocation":"11188:6:8","nodeType":"VariableDeclaration","scope":1595,"src":"11180:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11122:78:8"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"11218:0:8"},"scope":1623,"src":"11098:441:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"12242:2:8","statements":[]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"11545:573:8","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12132:20:8","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"from","nameLocation":"12170:4:8","nodeType":"VariableDeclaration","scope":1606,"src":"12162:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"12162:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"to","nameLocation":"12192:2:8","nodeType":"VariableDeclaration","scope":1606,"src":"12184:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"12184:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"amount","nameLocation":"12212:6:8","nodeType":"VariableDeclaration","scope":1606,"src":"12204:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12152:72:8"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"12242:0:8"},"scope":1623,"src":"12123:121:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1616,"nodeType":"Block","src":"12950:2:8","statements":[]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"12250:577:8","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12841:19:8","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"from","nameLocation":"12878:4:8","nodeType":"VariableDeclaration","scope":1617,"src":"12870:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"12870:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"to","nameLocation":"12900:2:8","nodeType":"VariableDeclaration","scope":1617,"src":"12892:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"12892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"amount","nameLocation":"12920:6:8","nodeType":"VariableDeclaration","scope":1617,"src":"12912:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"12912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12860:72:8"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"12950:0:8"},"scope":1623,"src":"12832:120:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"12958:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1622,"mutability":"mutable","name":"__gap","nameLocation":"13237:5:8","nodeType":"VariableDeclaration","scope":1623,"src":"13217:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"13217:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"length":{"hexValue":"3435","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13225:2:8","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13217:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1624,"src":"1482:11763:8","usedErrors":[]}],"src":"105:13141:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1701]},"id":1702,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1625,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"131:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1701,"linearizedBaseContracts":[1701],"name":"IERC20Upgradeable","nameLocation":"212:17:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"236:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1635,"name":"Transfer","nameLocation":"405:8:9","nodeType":"EventDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:9","nodeType":"VariableDeclaration","scope":1635,"src":"414:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:9","nodeType":"VariableDeclaration","scope":1635,"src":"436:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:9","nodeType":"VariableDeclaration","scope":1635,"src":"456:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:9"},"src":"399:72:9"},{"anonymous":false,"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"477:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1644,"name":"Approval","nameLocation":"636:8:9","nodeType":"EventDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:9","nodeType":"VariableDeclaration","scope":1644,"src":"645:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:9","nodeType":"VariableDeclaration","scope":1644,"src":"668:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:9","nodeType":"VariableDeclaration","scope":1644,"src":"693:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:9"},"src":"630:78:9"},{"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"714:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1650,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:9","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[],"src":"805:2:9"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1650,"src":"831:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:9"},"scope":1701,"src":"785:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"846:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1658,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:9","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"account","nameLocation":"950:7:9","nodeType":"VariableDeclaration","scope":1658,"src":"942:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:9"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"982:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:9"},"scope":1701,"src":"923:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"997:202:9","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1668,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:9","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"to","nameLocation":"1230:2:9","nodeType":"VariableDeclaration","scope":1668,"src":"1222:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"amount","nameLocation":"1242:6:9","nodeType":"VariableDeclaration","scope":1668,"src":"1234:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:9"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"1268:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1665,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:9"},"scope":1701,"src":"1204:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"1280:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"owner","nameLocation":"1576:5:9","nodeType":"VariableDeclaration","scope":1678,"src":"1568:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"spender","nameLocation":"1591:7:9","nodeType":"VariableDeclaration","scope":1678,"src":"1583:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"1623:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:9"},"scope":1701,"src":"1549:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"1638:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1688,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:9","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"spender","nameLocation":"2310:7:9","nodeType":"VariableDeclaration","scope":1688,"src":"2302:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"amount","nameLocation":"2327:6:9","nodeType":"VariableDeclaration","scope":1688,"src":"2319:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:9"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1688,"src":"2353:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1685,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:9"},"scope":1701,"src":"2285:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"2365:287:9","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1700,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:9","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"from","nameLocation":"2696:4:9","nodeType":"VariableDeclaration","scope":1700,"src":"2688:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"to","nameLocation":"2718:2:9","nodeType":"VariableDeclaration","scope":1700,"src":"2710:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"amount","nameLocation":"2738:6:9","nodeType":"VariableDeclaration","scope":1700,"src":"2730:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:9"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1700,"src":"2769:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1697,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:9"},"scope":1701,"src":"2657:118:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1702,"src":"202:2575:9","usedErrors":[]}],"src":"106:2672:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"CountersUpgradeable":[2969],"ECDSAUpgradeable":[3643],"EIP712Upgradeable":[3793],"ERC20PermitUpgradeable":[2574],"ERC20Upgradeable":[1623],"ERC20VotesUpgradeable":[2358],"IERC20MetadataUpgradeable":[2383],"IERC20PermitUpgradeable":[2610],"IERC20Upgradeable":[1701],"IVotesUpgradeable":[209],"Initializable":[749],"MathUpgradeable":[4297],"SafeCastUpgradeable":[6148],"StringsUpgradeable":[3255]},"id":2359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1703,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"./draft-ERC20PermitUpgradeable.sol","id":1704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":2575,"src":"146:44:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"../../../utils/math/MathUpgradeable.sol","id":1705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":4298,"src":"191:49:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"../../../governance/utils/IVotesUpgradeable.sol","id":1706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":210,"src":"241:57:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","file":"../../../utils/math/SafeCastUpgradeable.sol","id":1707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":6149,"src":"299:53:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":3644,"src":"353:58:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2359,"sourceUnit":750,"src":"412:48:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1711,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1400:13:10"},"id":1712,"nodeType":"InheritanceSpecifier","src":"1400:13:10"},{"baseName":{"id":1713,"name":"IVotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":209,"src":"1415:17:10"},"id":1714,"nodeType":"InheritanceSpecifier","src":"1415:17:10"},{"baseName":{"id":1715,"name":"ERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2574,"src":"1434:22:10"},"id":1716,"nodeType":"InheritanceSpecifier","src":"1434:22:10"}],"canonicalName":"ERC20VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"462:894:10","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2358,"linearizedBaseContracts":[2358,2574,3793,2610,1623,2383,1701,2895,209,749],"name":"ERC20VotesUpgradeable","nameLocation":"1375:21:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1721,"nodeType":"Block","src":"1518:7:10","statements":[]},"id":1722,"implemented":true,"kind":"function","modifiers":[{"id":1719,"kind":"modifierInvocation","modifierName":{"id":1718,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1501:16:10"},"nodeType":"ModifierInvocation","src":"1501:16:10"}],"name":"__ERC20Votes_init","nameLocation":"1472:17:10","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"1489:2:10"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"1518:0:10"},"scope":2358,"src":"1463:62:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1727,"nodeType":"Block","src":"1596:7:10","statements":[]},"id":1728,"implemented":true,"kind":"function","modifiers":[{"id":1725,"kind":"modifierInvocation","modifierName":{"id":1724,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"1579:16:10"},"nodeType":"ModifierInvocation","src":"1579:16:10"}],"name":"__ERC20Votes_init_unchained","nameLocation":"1540:27:10","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"1567:2:10"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"1596:0:10"},"scope":2358,"src":"1531:72:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"ERC20VotesUpgradeable.Checkpoint","id":1733,"members":[{"constant":false,"id":1730,"mutability":"mutable","name":"fromBlock","nameLocation":"1643:9:10","nodeType":"VariableDeclaration","scope":1733,"src":"1636:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1729,"name":"uint32","nodeType":"ElementaryTypeName","src":"1636:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"votes","nameLocation":"1670:5:10","nodeType":"VariableDeclaration","scope":1733,"src":"1662:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1731,"name":"uint224","nodeType":"ElementaryTypeName","src":"1662:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1615:10:10","nodeType":"StructDefinition","scope":2358,"src":"1608:74:10","visibility":"public"},{"constant":true,"id":1738,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1713:20:10","nodeType":"VariableDeclaration","scope":2358,"src":"1688:127:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1688:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1754:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1744:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1744:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1742,"mutability":"mutable","name":"_delegates","nameLocation":"1858:10:10","nodeType":"VariableDeclaration","scope":2358,"src":"1822:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1741,"keyType":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1822:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1748,"mutability":"mutable","name":"_checkpoints","nameLocation":"1915:12:10","nodeType":"VariableDeclaration","scope":2358,"src":"1874:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"typeName":{"id":1747,"keyType":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1874:32:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"valueType":{"baseType":{"id":1745,"nodeType":"UserDefinedTypeName","pathNode":{"id":1744,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"1893:10:10"},"referencedDeclaration":1733,"src":"1893:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1746,"nodeType":"ArrayTypeName","src":"1893:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1752,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1954:23:10","nodeType":"VariableDeclaration","scope":2358,"src":"1933:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":1750,"nodeType":"UserDefinedTypeName","pathNode":{"id":1749,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"1933:10:10"},"referencedDeclaration":1733,"src":"1933:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1751,"nodeType":"ArrayTypeName","src":"1933:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"private"},{"body":{"id":1769,"nodeType":"Block","src":"2153:50:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1763,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2170:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1765,"indexExpression":{"id":1764,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2183:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1767,"indexExpression":{"id":1766,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2192:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"functionReturnParameters":1762,"id":1768,"nodeType":"Return","src":"2163:33:10"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"1984:66:10","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2064:11:10","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"account","nameLocation":"2084:7:10","nodeType":"VariableDeclaration","scope":1770,"src":"2076:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"2076:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"pos","nameLocation":"2100:3:10","nodeType":"VariableDeclaration","scope":1770,"src":"2093:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1756,"name":"uint32","nodeType":"ElementaryTypeName","src":"2093:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2075:29:10"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1770,"src":"2134:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"2134:10:10"},"referencedDeclaration":1733,"src":"2134:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"2133:19:10"},"scope":2358,"src":"2055:148:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1786,"nodeType":"Block","src":"2356:82:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1780,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2402:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1782,"indexExpression":{"id":1781,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2415:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2402:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2402:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1778,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"2373:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6148_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5000,"src":"2373:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1777,"id":1785,"nodeType":"Return","src":"2366:65:10"}]},"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"2209:64:10","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2287:14:10","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"account","nameLocation":"2310:7:10","nodeType":"VariableDeclaration","scope":1787,"src":"2302:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2301:17:10"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"2348:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1775,"name":"uint32","nodeType":"ElementaryTypeName","src":"2348:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2347:8:10"},"scope":2358,"src":"2278:160:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[186],"body":{"id":1800,"nodeType":"Block","src":"2609:43:10","statements":[{"expression":{"baseExpression":{"id":1796,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2626:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1798,"indexExpression":{"id":1797,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2637:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2626:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1795,"id":1799,"nodeType":"Return","src":"2619:26:10"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"2444:77:10","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2535:9:10","nodeType":"FunctionDefinition","overrides":{"id":1792,"nodeType":"OverrideSpecifier","overrides":[],"src":"2582:8:10"},"parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"account","nameLocation":"2553:7:10","nodeType":"VariableDeclaration","scope":1801,"src":"2545:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2544:17:10"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"2600:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"2600:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2599:9:10"},"scope":2358,"src":"2526:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[160],"body":{"id":1831,"nodeType":"Block","src":"2813:127:10","statements":[{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"pos","nameLocation":"2831:3:10","nodeType":"VariableDeclaration","scope":1831,"src":"2823:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1816,"initialValue":{"expression":{"baseExpression":{"id":1812,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2837:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1814,"indexExpression":{"id":1813,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2850:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2837:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2837:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2823:42:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2882:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2889:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2882:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1821,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2897:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1823,"indexExpression":{"id":1822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2910:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1827,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2919:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2925:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2919:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:30:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"2897:36:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2882:51:10","trueExpression":{"hexValue":"30","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2893:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1809,"id":1830,"nodeType":"Return","src":"2875:58:10"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"2658:68:10","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2740:8:10","nodeType":"FunctionDefinition","overrides":{"id":1806,"nodeType":"OverrideSpecifier","overrides":[],"src":"2786:8:10"},"parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"account","nameLocation":"2757:7:10","nodeType":"VariableDeclaration","scope":1832,"src":"2749:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2749:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2748:17:10"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"2804:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:9:10"},"scope":2358,"src":"2731:209:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[170],"body":{"id":1858,"nodeType":"Block","src":"3240:158:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"3258:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1845,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3272:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3272:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3258:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3286:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3250:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"3250:70:10"},{"expression":{"arguments":[{"baseExpression":{"id":1852,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3356:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1854,"indexExpression":{"id":1853,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"3369:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3356:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":1855,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"3379:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1851,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3337:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1857,"nodeType":"Return","src":"3330:61:10"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"2946:182:10","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3142:12:10","nodeType":"FunctionDefinition","overrides":{"id":1839,"nodeType":"OverrideSpecifier","overrides":[],"src":"3213:8:10"},"parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"account","nameLocation":"3163:7:10","nodeType":"VariableDeclaration","scope":1859,"src":"3155:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"blockNumber","nameLocation":"3180:11:10","nodeType":"VariableDeclaration","scope":1859,"src":"3172:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3172:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:38:10"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"3231:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3230:9:10"},"scope":2358,"src":"3133:265:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[178],"body":{"id":1881,"nodeType":"Block","src":"3773:160:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3791:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1870,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3805:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3805:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3791:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3819:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3783:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3783:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"ExpressionStatement","src":"3783:70:10"},{"expression":{"arguments":[{"id":1877,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3889:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":1878,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3914:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3870:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3870:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1867,"id":1880,"nodeType":"Return","src":"3863:63:10"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"3404:268:10","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3686:18:10","nodeType":"FunctionDefinition","overrides":{"id":1864,"nodeType":"OverrideSpecifier","overrides":[],"src":"3746:8:10"},"parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"blockNumber","nameLocation":"3713:11:10","nodeType":"VariableDeclaration","scope":1882,"src":"3705:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3704:21:10"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1882,"src":"3764:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3763:9:10"},"scope":2358,"src":"3677:256:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1947,"nodeType":"Block","src":"4125:1361:10","statements":[{"assignments":[1895],"declarations":[{"constant":false,"id":1895,"mutability":"mutable","name":"high","nameLocation":"5131:4:10","nodeType":"VariableDeclaration","scope":1947,"src":"5123:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5123:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1898,"initialValue":{"expression":{"id":1896,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5138:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5138:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5123:27:10"},{"assignments":[1900],"declarations":[{"constant":false,"id":1900,"mutability":"mutable","name":"low","nameLocation":"5168:3:10","nodeType":"VariableDeclaration","scope":1947,"src":"5160:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1902,"initialValue":{"hexValue":"30","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5174:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5160:15:10"},{"body":{"id":1933,"nodeType":"Block","src":"5204:221:10","statements":[{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"mid","nameLocation":"5226:3:10","nodeType":"VariableDeclaration","scope":1933,"src":"5218:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5218:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"initialValue":{"arguments":[{"id":1910,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5256:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1911,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5261:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1908,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5232:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4297_$","typeString":"type(library MathUpgradeable)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3859,"src":"5232:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5232:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5218:48:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1914,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5284:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":1916,"indexExpression":{"id":1915,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5290:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5284:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"5284:20:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1918,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"5307:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5284:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1931,"nodeType":"Block","src":"5369:46:10","statements":[{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5387:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5393:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5399:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5393:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5387:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"5387:13:10"}]},"id":1932,"nodeType":"IfStatement","src":"5280:135:10","trueBody":{"id":1924,"nodeType":"Block","src":"5320:43:10","statements":[{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1920,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5338:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1921,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5345:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5338:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1923,"nodeType":"ExpressionStatement","src":"5338:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5192:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1904,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5198:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5192:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"WhileStatement","src":"5185:240:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5442:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5450:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5442:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":1939,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5458:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":1943,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5464:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5464:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5458:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"5458:21:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5442:37:10","trueExpression":{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5454:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1893,"id":1946,"nodeType":"Return","src":"5435:44:10"}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"3939:73:10","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4026:18:10","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"ckpts","nameLocation":"4066:5:10","nodeType":"VariableDeclaration","scope":1948,"src":"4045:26:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"4045:10:10"},"referencedDeclaration":1733,"src":"4045:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1886,"nodeType":"ArrayTypeName","src":"4045:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"blockNumber","nameLocation":"4081:11:10","nodeType":"VariableDeclaration","scope":1948,"src":"4073:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4044:49:10"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"4116:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:10"},"scope":2358,"src":"4017:1469:10","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[192],"body":{"id":1961,"nodeType":"Block","src":"5628:51:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1956,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5648:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"5662:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1955,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5638:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5638:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"5638:34:10"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"5492:70:10","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5576:8:10","nodeType":"FunctionDefinition","overrides":{"id":1953,"nodeType":"OverrideSpecifier","overrides":[],"src":"5619:8:10"},"parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"delegatee","nameLocation":"5593:9:10","nodeType":"VariableDeclaration","scope":1962,"src":"5585:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"5585:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5584:19:10"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"5628:0:10"},"scope":2358,"src":"5567:112:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[208],"body":{"id":2021,"nodeType":"Block","src":"5938:403:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1980,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5956:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5956:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1982,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"5975:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5956:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5983:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5948:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"5948:67:10"},{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"signer","nameLocation":"6033:6:10","nodeType":"VariableDeclaration","scope":2021,"src":"6025:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2006,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1995,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6118:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1996,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"6140:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1997,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"6151:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1998,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"6158:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1993,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6107:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6107:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6107:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1992,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6097:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6097:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1991,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"6080:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6080:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2002,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6181:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2003,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"6196:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2004,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6211:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1989,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"6042:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3643_$","typeString":"type(library ECDSAUpgradeable)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3583,"src":"6042:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6042:180:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6025:197:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"6240:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2010,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6259:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2009,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6249:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6249:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6240:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6268:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":2007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6232:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"ExpressionStatement","src":"6232:64:10"},{"expression":{"arguments":[{"id":2017,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6316:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"6324:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2016,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"6306:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"6306:28:10"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"5685:66:10","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5765:13:10","nodeType":"FunctionDefinition","overrides":{"id":1977,"nodeType":"OverrideSpecifier","overrides":[],"src":"5929:8:10"},"parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"delegatee","nameLocation":"5796:9:10","nodeType":"VariableDeclaration","scope":2022,"src":"5788:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"5788:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"nonce","nameLocation":"5823:5:10","nodeType":"VariableDeclaration","scope":2022,"src":"5815:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5815:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"expiry","nameLocation":"5846:6:10","nodeType":"VariableDeclaration","scope":2022,"src":"5838:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"v","nameLocation":"5868:1:10","nodeType":"VariableDeclaration","scope":2022,"src":"5862:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1970,"name":"uint8","nodeType":"ElementaryTypeName","src":"5862:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"r","nameLocation":"5887:1:10","nodeType":"VariableDeclaration","scope":2022,"src":"5879:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5879:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"s","nameLocation":"5906:1:10","nodeType":"VariableDeclaration","scope":2022,"src":"5898:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5898:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5778:135:10"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"5938:0:10"},"scope":2358,"src":"5756:585:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2034,"nodeType":"Block","src":"6505:41:10","statements":[{"expression":{"expression":{"arguments":[{"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6527:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2029,"name":"uint224","nodeType":"ElementaryTypeName","src":"6527:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6522:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6522:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6522:17:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2027,"id":2033,"nodeType":"Return","src":"6515:24:10"}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"6347:91:10","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6452:10:10","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[],"src":"6462:2:10"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"6496:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2025,"name":"uint224","nodeType":"ElementaryTypeName","src":"6496:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6495:9:10"},"scope":2358,"src":"6443:103:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1435],"body":{"id":2066,"nodeType":"Block","src":"6709:211:10","statements":[{"expression":{"arguments":[{"id":2047,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6731:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"6740:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2044,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6719:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2358_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"6719:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2050,"nodeType":"ExpressionStatement","src":"6719:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2052,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6765:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2054,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6782:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6782:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"6765:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6796:50:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":2051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6757:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6757:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"ExpressionStatement","src":"6757:90:10"},{"expression":{"arguments":[{"id":2061,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6875:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2062,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6900:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2063,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"6906:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6858:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6858:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2065,"nodeType":"ExpressionStatement","src":"6858:55:10"}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"6552:78:10","text":" @dev Snapshots the totalSupply after it has been increased."},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6644:5:10","nodeType":"FunctionDefinition","overrides":{"id":2042,"nodeType":"OverrideSpecifier","overrides":[],"src":"6700:8:10"},"parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"account","nameLocation":"6658:7:10","nodeType":"VariableDeclaration","scope":2067,"src":"6650:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"6650:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"amount","nameLocation":"6675:6:10","nodeType":"VariableDeclaration","scope":2067,"src":"6667:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"6667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6649:33:10"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"6709:0:10"},"scope":2358,"src":"6635:285:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1507],"body":{"id":2089,"nodeType":"Block","src":"7083:116:10","statements":[{"expression":{"arguments":[{"id":2079,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7105:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2080,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7114:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2076,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7093:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2358_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"7093:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7093:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"7093:28:10"},{"expression":{"arguments":[{"id":2084,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"7149:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2085,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"7174:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2086,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7185:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"7132:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7132:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2088,"nodeType":"ExpressionStatement","src":"7132:60:10"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"6926:78:10","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7018:5:10","nodeType":"FunctionDefinition","overrides":{"id":2074,"nodeType":"OverrideSpecifier","overrides":[],"src":"7074:8:10"},"parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"account","nameLocation":"7032:7:10","nodeType":"VariableDeclaration","scope":2090,"src":"7024:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"7024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"amount","nameLocation":"7049:6:10","nodeType":"VariableDeclaration","scope":2090,"src":"7041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"7041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7023:33:10"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[],"src":"7083:0:10"},"scope":2358,"src":"7009:190:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1617],"body":{"id":2119,"nodeType":"Block","src":"7459:127:10","statements":[{"expression":{"arguments":[{"id":2104,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7495:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"7501:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"7505:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2101,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7469:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2358_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1617,"src":"7469:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7469:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"ExpressionStatement","src":"7469:43:10"},{"expression":{"arguments":[{"arguments":[{"id":2111,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7550:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2110,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"7540:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7540:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"7567:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2113,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"7557:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7557:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2116,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"7572:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7523:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7523:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"ExpressionStatement","src":"7523:56:10"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"7205:122:10","text":" @dev Move voting power when tokens are transferred.\n Emits a {DelegateVotesChanged} event."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7341:19:10","nodeType":"FunctionDefinition","overrides":{"id":2099,"nodeType":"OverrideSpecifier","overrides":[],"src":"7450:8:10"},"parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"from","nameLocation":"7378:4:10","nodeType":"VariableDeclaration","scope":2120,"src":"7370:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"7370:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"to","nameLocation":"7400:2:10","nodeType":"VariableDeclaration","scope":2120,"src":"7392:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"7392:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"amount","nameLocation":"7420:6:10","nodeType":"VariableDeclaration","scope":2120,"src":"7412:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"7412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7360:72:10"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"7459:0:10"},"scope":2358,"src":"7332:254:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"7817:306:10","statements":[{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"currentDelegate","nameLocation":"7835:15:10","nodeType":"VariableDeclaration","scope":2158,"src":"7827:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"7827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2133,"initialValue":{"arguments":[{"id":2131,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"7863:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2130,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"7853:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7853:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7827:46:10"},{"assignments":[2135],"declarations":[{"constant":false,"id":2135,"mutability":"mutable","name":"delegatorBalance","nameLocation":"7891:16:10","nodeType":"VariableDeclaration","scope":2158,"src":"7883:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2139,"initialValue":{"arguments":[{"id":2137,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"7920:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2136,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"7910:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7910:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7883:47:10"},{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2140,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"7940:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2142,"indexExpression":{"id":2141,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"7951:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7940:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2143,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"7964:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7940:33:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2145,"nodeType":"ExpressionStatement","src":"7940:33:10"},{"eventCall":{"arguments":[{"id":2147,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8005:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2148,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8016:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2149,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"8033:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2146,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"7989:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7989:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"EmitStatement","src":"7984:59:10"},{"expression":{"arguments":[{"id":2153,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8071:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2154,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"8088:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"8099:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"8054:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"ExpressionStatement","src":"8054:62:10"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"7592:146:10","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {DelegateChanged} and {DelegateVotesChanged}."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7752:9:10","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"delegator","nameLocation":"7770:9:10","nodeType":"VariableDeclaration","scope":2159,"src":"7762:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"7762:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"delegatee","nameLocation":"7789:9:10","nodeType":"VariableDeclaration","scope":2159,"src":"7781:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"7781:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7761:38:10"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"7817:0:10"},"scope":2358,"src":"7743:380:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"8235:521:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"8249:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2169,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8256:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8249:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8263:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8263:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8249:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2228,"nodeType":"IfStatement","src":"8245:505:10","trueBody":{"id":2227,"nodeType":"Block","src":"8275:475:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"8293:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8308:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8300:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"8300:7:10","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8300:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8293:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"IfStatement","src":"8289:221:10","trueBody":{"id":2199,"nodeType":"Block","src":"8312:198:10","statements":[{"assignments":[2182,2184],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"oldWeight","nameLocation":"8339:9:10","nodeType":"VariableDeclaration","scope":2199,"src":"8331:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"8331:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"newWeight","nameLocation":"8358:9:10","nodeType":"VariableDeclaration","scope":2199,"src":"8350:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2192,"initialValue":{"arguments":[{"baseExpression":{"id":2186,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"8388:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2188,"indexExpression":{"id":2187,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"8401:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8388:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2189,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8407:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2190,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8418:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2185,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"8371:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8371:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8330:95:10"},{"eventCall":{"arguments":[{"id":2194,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"8469:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2195,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8474:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2196,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8485:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"8448:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8448:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2198,"nodeType":"EmitStatement","src":"8443:52:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8528:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8543:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8535:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:10","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8535:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8528:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"8524:216:10","trueBody":{"id":2225,"nodeType":"Block","src":"8547:193:10","statements":[{"assignments":[2208,2210],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"oldWeight","nameLocation":"8574:9:10","nodeType":"VariableDeclaration","scope":2225,"src":"8566:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"8566:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"newWeight","nameLocation":"8593:9:10","nodeType":"VariableDeclaration","scope":2225,"src":"8585:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"8585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2218,"initialValue":{"arguments":[{"baseExpression":{"id":2212,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"8623:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2214,"indexExpression":{"id":2213,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8636:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8623:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2215,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"8642:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2216,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8648:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"8606:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8606:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8565:90:10"},{"eventCall":{"arguments":[{"id":2220,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8699:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2221,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"8704:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2222,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"8715:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2219,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"8678:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8678:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"EmitStatement","src":"8673:52:10"}]}}]}}]},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8138:16:10","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"src","nameLocation":"8172:3:10","nodeType":"VariableDeclaration","scope":2230,"src":"8164:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"8164:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"dst","nameLocation":"8193:3:10","nodeType":"VariableDeclaration","scope":2230,"src":"8185:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"8185:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"amount","nameLocation":"8214:6:10","nodeType":"VariableDeclaration","scope":2230,"src":"8206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8206:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8154:72:10"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"8235:0:10"},"scope":2358,"src":"8129:627:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2323,"nodeType":"Block","src":"8970:456:10","statements":[{"assignments":[2254],"declarations":[{"constant":false,"id":2254,"mutability":"mutable","name":"pos","nameLocation":"8988:3:10","nodeType":"VariableDeclaration","scope":2323,"src":"8980:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"8980:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2257,"initialValue":{"expression":{"id":2255,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"8994:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8994:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8980:26:10"},{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2258,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9016:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9028:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9035:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9028:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":2263,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9043:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2267,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9049:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9049:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9043:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"9043:20:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9028:35:10","trueExpression":{"hexValue":"30","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9039:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9016:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ExpressionStatement","src":"9016:47:10"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9073:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2274,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9088:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2275,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"9099:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2273,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"9085:2:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9085:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9073:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"9073:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9120:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9126:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9120:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2282,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9131:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2286,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9137:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9143:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9137:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9131:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":2287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"9131:24:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2288,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9159:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9159:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9131:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9120:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2321,"nodeType":"Block","src":"9267:153:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2311,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9344:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9344:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2309,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"9315:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6148_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5000,"src":"9315:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9315:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2316,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9396:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2314,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"9366:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6148_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4400,"src":"9366:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9366:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2308,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"9292:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1733_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"9292:116:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1733_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}],"expression":{"id":2305,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9281:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9281:10:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1733_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,struct ERC20VotesUpgradeable.Checkpoint storage ref)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9281:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2320,"nodeType":"ExpressionStatement","src":"9281:128:10"}]},"id":2322,"nodeType":"IfStatement","src":"9116:304:10","trueBody":{"id":2304,"nodeType":"Block","src":"9173:88:10","statements":[{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2292,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9187:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2296,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9193:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9193:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9187:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":2297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"9187:20:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2300,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9240:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2298,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"9210:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6148_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4400,"src":"9210:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9210:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9187:63:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2303,"nodeType":"ExpressionStatement","src":"9187:63:10"}]}}]},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"8771:16:10","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"ckpts","nameLocation":"8818:5:10","nodeType":"VariableDeclaration","scope":2324,"src":"8797:26:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"8797:10:10"},"referencedDeclaration":1733,"src":"8797:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1733_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2233,"nodeType":"ArrayTypeName","src":"8797:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1733_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"op","nameLocation":"8883:2:10","nodeType":"VariableDeclaration","scope":2324,"src":"8833:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2243,"nodeType":"FunctionTypeName","parameterTypes":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"8842:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"8842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"8851:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8841:18:10"},"returnParameterTypes":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"8874:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"8874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8873:9:10"},"src":"8833:52:10","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"delta","nameLocation":"8903:5:10","nodeType":"VariableDeclaration","scope":2324,"src":"8895:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8787:127:10"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"oldWeight","nameLocation":"8940:9:10","nodeType":"VariableDeclaration","scope":2324,"src":"8932:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"8932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"newWeight","nameLocation":"8959:9:10","nodeType":"VariableDeclaration","scope":2324,"src":"8951:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"8951:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8931:38:10"},"scope":2358,"src":"8762:664:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2337,"nodeType":"Block","src":"9499:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9516:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"9520:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9516:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2332,"id":2336,"nodeType":"Return","src":"9509:12:10"}]},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9441:4:10","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"a","nameLocation":"9454:1:10","nodeType":"VariableDeclaration","scope":2338,"src":"9446:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"b","nameLocation":"9465:1:10","nodeType":"VariableDeclaration","scope":2338,"src":"9457:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"9457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:22:10"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"9490:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"9490:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9489:9:10"},"scope":2358,"src":"9432:96:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2351,"nodeType":"Block","src":"9606:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"9623:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2348,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"9627:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9623:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2346,"id":2350,"nodeType":"Return","src":"9616:12:10"}]},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9543:9:10","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"a","nameLocation":"9561:1:10","nodeType":"VariableDeclaration","scope":2352,"src":"9553:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"b","nameLocation":"9572:1:10","nodeType":"VariableDeclaration","scope":2352,"src":"9564:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9564:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9552:22:10"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"9597:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"9597:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9596:9:10"},"scope":2358,"src":"9534:101:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"9641:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2357,"mutability":"mutable","name":"__gap","nameLocation":"9920:5:10","nodeType":"VariableDeclaration","scope":2358,"src":"9900:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"9900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"length":{"hexValue":"3437","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9908:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"9900:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":2359,"src":"1357:8571:10","usedErrors":[]}],"src":"121:9808:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2383],"IERC20Upgradeable":[1701]},"id":2384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2360,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2384,"sourceUnit":1702,"src":"135:34:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2363,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1701,"src":"327:17:11"},"id":2364,"nodeType":"InheritanceSpecifier","src":"327:17:11"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"171:116:11","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2383,"linearizedBaseContracts":[2383,1701],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"351:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2370,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:11","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"423:2:11"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"449:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:11"},"scope":2383,"src":"410:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"470:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2376,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:11","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[],"src":"546:2:11"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2376,"src":"572:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2373,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:11"},"scope":2383,"src":"531:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"593:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2382,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:11","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"680:2:11"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2382,"src":"706:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2379,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:11"},"scope":2383,"src":"663:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2384,"src":"288:427:11","usedErrors":[]}],"src":"110:606:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"CountersUpgradeable":[2969],"ECDSAUpgradeable":[3643],"EIP712Upgradeable":[3793],"ERC20PermitUpgradeable":[2574],"ERC20Upgradeable":[1623],"IERC20MetadataUpgradeable":[2383],"IERC20PermitUpgradeable":[2610],"IERC20Upgradeable":[1701],"Initializable":[749],"StringsUpgradeable":[3255]},"id":2575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2385,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","file":"./draft-IERC20PermitUpgradeable.sol","id":2386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":2611,"src":"153:45:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":1624,"src":"199:33:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol","file":"../../../utils/cryptography/draft-EIP712Upgradeable.sol","id":2388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":3794,"src":"233:65:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":2389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":3644,"src":"299:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":2390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":2970,"src":"358:48:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2575,"sourceUnit":750,"src":"407:48:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2393,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1049:13:12"},"id":2394,"nodeType":"InheritanceSpecifier","src":"1049:13:12"},{"baseName":{"id":2395,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1623,"src":"1064:16:12"},"id":2396,"nodeType":"InheritanceSpecifier","src":"1064:16:12"},{"baseName":{"id":2397,"name":"IERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"1082:23:12"},"id":2398,"nodeType":"InheritanceSpecifier","src":"1082:23:12"},{"baseName":{"id":2399,"name":"EIP712Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":3793,"src":"1107:17:12"},"id":2400,"nodeType":"InheritanceSpecifier","src":"1107:17:12"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"457:547:12","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._\n @custom:storage-size 51"},"fullyImplemented":true,"id":2574,"linearizedBaseContracts":[2574,3793,2610,1623,2383,1701,2895,749],"name":"ERC20PermitUpgradeable","nameLocation":"1023:22:12","nodeType":"ContractDefinition","nodes":[{"id":2404,"libraryName":{"id":2401,"name":"CountersUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2969,"src":"1137:19:12"},"nodeType":"UsingForDirective","src":"1131:58:12","typeName":{"id":2403,"nodeType":"UserDefinedTypeName","pathNode":{"id":2402,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"1161:27:12"},"referencedDeclaration":2901,"src":"1161:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":2409,"mutability":"mutable","name":"_nonces","nameLocation":"1251:7:12","nodeType":"VariableDeclaration","scope":2574,"src":"1195:63:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2901_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"typeName":{"id":2408,"keyType":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1195:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2901_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"valueType":{"id":2407,"nodeType":"UserDefinedTypeName","pathNode":{"id":2406,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"1214:27:12"},"referencedDeclaration":2901,"src":"1214:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},"visibility":"private"},{"constant":true,"id":2414,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1342:16:12","nodeType":"VariableDeclaration","scope":2574,"src":"1317:147:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1317:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1379:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2411,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1369:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1369:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"1470:254:12","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":2417,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1797:32:12","nodeType":"VariableDeclaration","scope":2574,"src":"1781:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1781:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2430,"nodeType":"Block","src":"2135:51:12","statements":[{"expression":{"arguments":[{"id":2426,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"2169:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":2425,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"2145:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2429,"nodeType":"ExpressionStatement","src":"2145:34:12"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"1836:220:12","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":2431,"implemented":true,"kind":"function","modifiers":[{"id":2423,"kind":"modifierInvocation","modifierName":{"id":2422,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2118:16:12"},"nodeType":"ModifierInvocation","src":"2118:16:12"}],"name":"__ERC20Permit_init","nameLocation":"2070:18:12","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"name","nameLocation":"2103:4:12","nodeType":"VariableDeclaration","scope":2431,"src":"2089:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2419,"name":"string","nodeType":"ElementaryTypeName","src":"2089:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2088:20:12"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"2135:0:12"},"scope":2574,"src":"2061:125:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"2271:2:12","statements":[]},"id":2439,"implemented":true,"kind":"function","modifiers":[{"id":2436,"kind":"modifierInvocation","modifierName":{"id":2435,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2254:16:12"},"nodeType":"ModifierInvocation","src":"2254:16:12"}],"name":"__ERC20Permit_init_unchained","nameLocation":"2201:28:12","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"2230:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2432,"name":"string","nodeType":"ElementaryTypeName","src":"2230:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2229:15:12"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[],"src":"2271:0:12"},"scope":2574,"src":"2192:81:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2595],"body":{"id":2511,"nodeType":"Block","src":"2532:439:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2550:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2550:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2461,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2569:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2550:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2579:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":2458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2542:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2542:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"ExpressionStatement","src":"2542:69:12"},{"assignments":[2467],"declarations":[{"constant":false,"id":2467,"mutability":"mutable","name":"structHash","nameLocation":"2630:10:12","nodeType":"VariableDeclaration","scope":2511,"src":"2622:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2622:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2481,"initialValue":{"arguments":[{"arguments":[{"id":2471,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2664:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2472,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2682:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2473,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"2689:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2698:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2476,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2715:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2475,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2705:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2705:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2478,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2723:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2469,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2653:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2653:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2653:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2468,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2643:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2643:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2622:111:12"},{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"hash","nameLocation":"2752:4:12","nodeType":"VariableDeclaration","scope":2511,"src":"2744:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2744:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2485,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2776:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2484,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2759:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2759:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2744:43:12"},{"assignments":[2489],"declarations":[{"constant":false,"id":2489,"mutability":"mutable","name":"signer","nameLocation":"2806:6:12","nodeType":"VariableDeclaration","scope":2511,"src":"2798:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"2798:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2497,"initialValue":{"arguments":[{"id":2492,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2840:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2493,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2846:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2494,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2849:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2495,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2852:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2490,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"2815:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3643_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3583,"src":"2815:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2815:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2798:56:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2872:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2500,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2882:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2872:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2889:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":2498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2864:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2864:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"2864:58:12"},{"expression":{"arguments":[{"id":2506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2942:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"2949:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2958:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2505,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2933:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2933:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"ExpressionStatement","src":"2933:31:12"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"2279:50:12","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2343:6:12","nodeType":"FunctionDefinition","overrides":{"id":2456,"nodeType":"OverrideSpecifier","overrides":[],"src":"2523:8:12"},"parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"owner","nameLocation":"2367:5:12","nodeType":"VariableDeclaration","scope":2512,"src":"2359:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"2359:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"spender","nameLocation":"2390:7:12","nodeType":"VariableDeclaration","scope":2512,"src":"2382:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"value","nameLocation":"2415:5:12","nodeType":"VariableDeclaration","scope":2512,"src":"2407:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"deadline","nameLocation":"2438:8:12","nodeType":"VariableDeclaration","scope":2512,"src":"2430:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"v","nameLocation":"2462:1:12","nodeType":"VariableDeclaration","scope":2512,"src":"2456:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2449,"name":"uint8","nodeType":"ElementaryTypeName","src":"2456:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"r","nameLocation":"2481:1:12","nodeType":"VariableDeclaration","scope":2512,"src":"2473:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2473:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"s","nameLocation":"2500:1:12","nodeType":"VariableDeclaration","scope":2512,"src":"2492:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2492:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:158:12"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[],"src":"2532:0:12"},"scope":2574,"src":"2334:637:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2603],"body":{"id":2527,"nodeType":"Block","src":"3110:48:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2521,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3127:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2901_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2523,"indexExpression":{"id":2522,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3135:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3127:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"3127:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2901_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2901_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3127:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2520,"id":2526,"nodeType":"Return","src":"3120:31:12"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"2977:50:12","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3041:6:12","nodeType":"FunctionDefinition","overrides":{"id":2517,"nodeType":"OverrideSpecifier","overrides":[],"src":"3083:8:12"},"parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"owner","nameLocation":"3056:5:12","nodeType":"VariableDeclaration","scope":2528,"src":"3048:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3047:15:12"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"3101:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3100:9:12"},"scope":2574,"src":"3032:126:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2609],"body":{"id":2538,"nodeType":"Block","src":"3351:44:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2535,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"3368:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3368:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2534,"id":2537,"nodeType":"Return","src":"3361:27:12"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"3164:60:12","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":2539,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3291:16:12","nodeType":"FunctionDefinition","overrides":{"id":2531,"nodeType":"OverrideSpecifier","overrides":[],"src":"3324:8:12"},"parameters":{"id":2530,"nodeType":"ParameterList","parameters":[],"src":"3307:2:12"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2539,"src":"3342:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3342:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3341:9:12"},"scope":2574,"src":"3282:113:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2567,"nodeType":"Block","src":"3603:137:12","statements":[{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"nonce","nameLocation":"3649:5:12","nodeType":"VariableDeclaration","scope":2567,"src":"3613:41:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2550,"nodeType":"UserDefinedTypeName","pathNode":{"id":2549,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"3613:27:12"},"referencedDeclaration":2901,"src":"3613:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"id":2555,"initialValue":{"baseExpression":{"id":2552,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2901_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2554,"indexExpression":{"id":2553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"3665:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3613:58:12"},{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3681:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2557,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3691:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"3691:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2901_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2901_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3691:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3681:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"3681:25:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2562,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3716:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2927,"src":"3716:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2901_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2901_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3716:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"3716:17:12"}]},"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"3401:120:12","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3535:9:12","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"owner","nameLocation":"3553:5:12","nodeType":"VariableDeclaration","scope":2568,"src":"3545:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3544:15:12"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"current","nameLocation":"3594:7:12","nodeType":"VariableDeclaration","scope":2568,"src":"3586:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3586:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3585:17:12"},"scope":2574,"src":"3526:214:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"3746:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2573,"mutability":"mutable","name":"__gap","nameLocation":"4025:5:12","nodeType":"VariableDeclaration","scope":2574,"src":"4005:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4005:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"length":{"hexValue":"3439","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"4005:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":2575,"src":"1005:3028:12","usedErrors":[]}],"src":"128:3906:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[2610]},"id":2611,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2576,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"139:480:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2610,"linearizedBaseContracts":[2610],"name":"IERC20PermitUpgradeable","nameLocation":"630:23:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"660:792:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2595,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1466:6:13","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"owner","nameLocation":"1490:5:13","nodeType":"VariableDeclaration","scope":2595,"src":"1482:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"spender","nameLocation":"1513:7:13","nodeType":"VariableDeclaration","scope":2595,"src":"1505:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"value","nameLocation":"1538:5:13","nodeType":"VariableDeclaration","scope":2595,"src":"1530:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"deadline","nameLocation":"1561:8:13","nodeType":"VariableDeclaration","scope":2595,"src":"1553:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"v","nameLocation":"1585:1:13","nodeType":"VariableDeclaration","scope":2595,"src":"1579:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2587,"name":"uint8","nodeType":"ElementaryTypeName","src":"1579:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"r","nameLocation":"1604:1:13","nodeType":"VariableDeclaration","scope":2595,"src":"1596:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1596:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"s","nameLocation":"1623:1:13","nodeType":"VariableDeclaration","scope":2595,"src":"1615:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1615:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1472:158:13"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"1639:0:13"},"scope":2610,"src":"1457:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"1646:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2603,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1954:6:13","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"owner","nameLocation":"1969:5:13","nodeType":"VariableDeclaration","scope":2603,"src":"1961:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"1961:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1960:15:13"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"1999:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1998:9:13"},"scope":2610,"src":"1945:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"2014:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2609,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2209:16:13","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"2225:2:13"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"2251:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2251:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2250:9:13"},"scope":2610,"src":"2200:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2611,"src":"620:1642:13","usedErrors":[]}],"src":"114:2149:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853]},"id":2854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2612,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2853,"linearizedBaseContracts":[2853],"name":"AddressUpgradeable","nameLocation":"202:18:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2627,"nodeType":"Block","src":"1252:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2621,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"1476:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2620,"id":2626,"nodeType":"Return","src":"1469:30:14"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"227:954:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:14","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"account","nameLocation":"1214:7:14","nodeType":"VariableDeclaration","scope":2628,"src":"1206:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:14"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"1246:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2618,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:14"},"scope":2853,"src":"1186:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2661,"nodeType":"Block","src":"2494:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2639,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2853","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2853","typeString":"library AddressUpgradeable"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:14","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2537:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2646,"nodeType":"ExpressionStatement","src":"2504:73:14"},{"assignments":[2648,null],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"success","nameLocation":"2594:7:14","nodeType":"VariableDeclaration","scope":2661,"src":"2589:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2647,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2655,"initialValue":{"arguments":[{"hexValue":"","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2649,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"2607:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2629:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:14"},{"expression":{"arguments":[{"id":2657,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"2658:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"ExpressionStatement","src":"2650:78:14"}]},"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"1512:906:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:14","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:14","nodeType":"VariableDeclaration","scope":2662,"src":"2442:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"amount","nameLocation":"2477:6:14","nodeType":"VariableDeclaration","scope":2662,"src":"2469:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:14"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"2494:0:14"},"scope":2853,"src":"2423:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"3566:84:14","statements":[{"expression":{"arguments":[{"id":2673,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"3596:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2674,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3604:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2672,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2679,2699],"referencedDeclaration":2699,"src":"3583:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2671,"id":2677,"nodeType":"Return","src":"3576:67:14"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"2741:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:14","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"target","nameLocation":"3507:6:14","nodeType":"VariableDeclaration","scope":2679,"src":"3499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"data","nameLocation":"3528:4:14","nodeType":"VariableDeclaration","scope":2679,"src":"3515:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2666,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:14"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2679,"src":"3552:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:14"},"scope":2853,"src":"3477:173:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"4019:76:14","statements":[{"expression":{"arguments":[{"id":2692,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4058:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2693,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4066:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2695,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4075:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2691,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2719,2769],"referencedDeclaration":2769,"src":"4036:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2690,"id":2697,"nodeType":"Return","src":"4029:59:14"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"3656:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:14","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"target","nameLocation":"3911:6:14","nodeType":"VariableDeclaration","scope":2699,"src":"3903:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"data","nameLocation":"3940:4:14","nodeType":"VariableDeclaration","scope":2699,"src":"3927:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:14","nodeType":"VariableDeclaration","scope":2699,"src":"3954:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2685,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:14"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"4005:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:14"},"scope":2853,"src":"3872:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"4600:111:14","statements":[{"expression":{"arguments":[{"id":2712,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4639:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4647:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"4653:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2711,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2719,2769],"referencedDeclaration":2769,"src":"4617:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2710,"id":2717,"nodeType":"Return","src":"4610:94:14"}]},"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"4101:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:14","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"target","nameLocation":"4505:6:14","nodeType":"VariableDeclaration","scope":2719,"src":"4497:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"data","nameLocation":"4534:4:14","nodeType":"VariableDeclaration","scope":2719,"src":"4521:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2703,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"value","nameLocation":"4556:5:14","nodeType":"VariableDeclaration","scope":2719,"src":"4548:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:14"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"4586:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:14"},"scope":2853,"src":"4457:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"5138:320:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2736,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2853","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2853","typeString":"library AddressUpgradeable"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:14","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5181:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2743,"nodeType":"ExpressionStatement","src":"5148:81:14"},{"expression":{"arguments":[{"arguments":[{"id":2746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5258:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2745,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5247:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"5239:60:14"},{"assignments":[2752,2754],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"success","nameLocation":"5316:7:14","nodeType":"VariableDeclaration","scope":2768,"src":"5311:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2751,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:14","nodeType":"VariableDeclaration","scope":2768,"src":"5325:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2753,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2761,"initialValue":{"arguments":[{"id":2759,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5378:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2755,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5352:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5371:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:14"},{"expression":{"arguments":[{"id":2763,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"5417:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2764,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"5426:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2765,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5438:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2762,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"5400:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2732,"id":2767,"nodeType":"Return","src":"5393:58:14"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"4717:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:14","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"target","nameLocation":"5007:6:14","nodeType":"VariableDeclaration","scope":2769,"src":"4999:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"data","nameLocation":"5036:4:14","nodeType":"VariableDeclaration","scope":2769,"src":"5023:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2723,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"value","nameLocation":"5058:5:14","nodeType":"VariableDeclaration","scope":2769,"src":"5050:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:14","nodeType":"VariableDeclaration","scope":2769,"src":"5073:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2727,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:14"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"5124:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:14"},"scope":2853,"src":"4959:499:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"5735:97:14","statements":[{"expression":{"arguments":[{"id":2780,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"5771:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2781,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"5779:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2779,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2786,2821],"referencedDeclaration":2821,"src":"5752:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2778,"id":2784,"nodeType":"Return","src":"5745:80:14"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"5464:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:14","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"target","nameLocation":"5671:6:14","nodeType":"VariableDeclaration","scope":2786,"src":"5663:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"data","nameLocation":"5692:4:14","nodeType":"VariableDeclaration","scope":2786,"src":"5679:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:14"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"5721:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2776,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:14"},"scope":2853,"src":"5635:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"6174:228:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2800,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6203:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2799,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"6192:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"6184:67:14"},{"assignments":[2806,2808],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"success","nameLocation":"6268:7:14","nodeType":"VariableDeclaration","scope":2820,"src":"6263:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2805,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:14","nodeType":"VariableDeclaration","scope":2820,"src":"6277:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2807,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2813,"initialValue":{"arguments":[{"id":2811,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"6322:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2809,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6304:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:14"},{"expression":{"arguments":[{"id":2815,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"6361:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2816,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6370:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2817,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"6382:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2814,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"6344:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2797,"id":2819,"nodeType":"Return","src":"6337:58:14"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"5838:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:14","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"target","nameLocation":"6061:6:14","nodeType":"VariableDeclaration","scope":2821,"src":"6053:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"data","nameLocation":"6090:4:14","nodeType":"VariableDeclaration","scope":2821,"src":"6077:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2790,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:14","nodeType":"VariableDeclaration","scope":2821,"src":"6104:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2792,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:14"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"6160:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2795,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:14"},"scope":2853,"src":"6016:386:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"6782:582:14","statements":[{"condition":{"id":2833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"6796:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2849,"nodeType":"Block","src":"6853:505:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2837,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6937:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2847,"nodeType":"Block","src":"7295:53:14","statements":[{"expression":{"arguments":[{"id":2844,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7320:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2843,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"ExpressionStatement","src":"7313:20:14"}]},"id":2848,"nodeType":"IfStatement","src":"6933:415:14","trueBody":{"id":2842,"nodeType":"Block","src":"6960:329:14","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:14"},"nodeType":"YulFunctionCall","src":"7175:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:14"},"nodeType":"YulFunctionCall","src":"7220:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:14"},"nodeType":"YulFunctionCall","src":"7213:44:14"},"nodeType":"YulExpressionStatement","src":"7213:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2826,"isOffset":false,"isSlot":false,"src":"7181:10:14","valueSize":1},{"declaration":2826,"isOffset":false,"isSlot":false,"src":"7228:10:14","valueSize":1}],"id":2841,"nodeType":"InlineAssembly","src":"7121:154:14"}]}}]},"id":2850,"nodeType":"IfStatement","src":"6792:566:14","trueBody":{"id":2836,"nodeType":"Block","src":"6805:42:14","statements":[{"expression":{"id":2834,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6826:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2832,"id":2835,"nodeType":"Return","src":"6819:17:14"}]}}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"6408:209:14","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:14","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"success","nameLocation":"6662:7:14","nodeType":"VariableDeclaration","scope":2852,"src":"6657:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2823,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:14","nodeType":"VariableDeclaration","scope":2852,"src":"6679:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2825,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:14","nodeType":"VariableDeclaration","scope":2852,"src":"6712:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2827,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:14"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"6768:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2830,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:14"},"scope":2853,"src":"6622:742:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2854,"src":"194:7172:14","usedErrors":[]}],"src":"101:7266:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"Initializable":[749]},"id":2896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2855,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2896,"sourceUnit":750,"src":"110:42:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2858,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"691:13:15"},"id":2859,"nodeType":"InheritanceSpecifier","src":"691:13:15"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"154:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2895,"linearizedBaseContracts":[2895,749],"name":"ContextUpgradeable","nameLocation":"669:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2864,"nodeType":"Block","src":"763:7:15","statements":[]},"id":2865,"implemented":true,"kind":"function","modifiers":[{"id":2862,"kind":"modifierInvocation","modifierName":{"id":2861,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"746:16:15"},"nodeType":"ModifierInvocation","src":"746:16:15"}],"name":"__Context_init","nameLocation":"720:14:15","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[],"src":"734:2:15"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[],"src":"763:0:15"},"scope":2895,"src":"711:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"838:7:15","statements":[]},"id":2871,"implemented":true,"kind":"function","modifiers":[{"id":2868,"kind":"modifierInvocation","modifierName":{"id":2867,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"821:16:15"},"nodeType":"ModifierInvocation","src":"821:16:15"}],"name":"__Context_init_unchained","nameLocation":"785:24:15","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[],"src":"809:2:15"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[],"src":"838:0:15"},"scope":2895,"src":"776:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"912:34:15","statements":[{"expression":{"expression":{"id":2876,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2875,"id":2878,"nodeType":"Return","src":"922:17:15"}]},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:15","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"869:2:15"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:15"},"scope":2895,"src":"850:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2888,"nodeType":"Block","src":"1019:32:15","statements":[{"expression":{"expression":{"id":2885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2884,"id":2887,"nodeType":"Return","src":"1029:15:15"}]},"id":2889,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:15","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"969:2:15"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2889,"src":"1003:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2882,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:15"},"scope":2895,"src":"952:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2890,"nodeType":"StructuredDocumentation","src":"1057:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2894,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:15","nodeType":"VariableDeclaration","scope":2895,"src":"1316:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"length":{"hexValue":"3530","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2896,"src":"651:693:15","usedErrors":[]}],"src":"86:1259:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[2969]},"id":2970,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2897,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"112:311:16","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2969,"linearizedBaseContracts":[2969],"name":"CountersUpgradeable","nameLocation":"432:19:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":2901,"members":[{"constant":false,"id":2900,"mutability":"mutable","name":"_value","nameLocation":"805:6:16","nodeType":"VariableDeclaration","scope":2901,"src":"797:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:16","nodeType":"StructDefinition","scope":2969,"src":"458:374:16","visibility":"public"},{"body":{"id":2912,"nodeType":"Block","src":"912:38:16","statements":[{"expression":{"expression":{"id":2909,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"929:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2900,"src":"929:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2908,"id":2911,"nodeType":"Return","src":"922:21:16"}]},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:16","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"counter","nameLocation":"871:7:16","nodeType":"VariableDeclaration","scope":2913,"src":"855:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2903,"nodeType":"UserDefinedTypeName","pathNode":{"id":2902,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"855:7:16"},"referencedDeclaration":2901,"src":"855:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:16"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:16"},"scope":2969,"src":"838:112:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"1009:70:16","statements":[{"id":2925,"nodeType":"UncheckedBlock","src":"1019:54:16","statements":[{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2919,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1043:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2900,"src":"1043:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2924,"nodeType":"ExpressionStatement","src":"1043:19:16"}]}]},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:16","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"counter","nameLocation":"991:7:16","nodeType":"VariableDeclaration","scope":2927,"src":"975:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2915,"nodeType":"UserDefinedTypeName","pathNode":{"id":2914,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"975:7:16"},"referencedDeclaration":2901,"src":"975:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:16"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[],"src":"1009:0:16"},"scope":2969,"src":"956:123:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"1138:176:16","statements":[{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"value","nameLocation":"1156:5:16","nodeType":"VariableDeclaration","scope":2954,"src":"1148:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2937,"initialValue":{"expression":{"id":2935,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"1164:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2900,"src":"1164:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1196:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1188:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2944,"nodeType":"ExpressionStatement","src":"1188:49:16"},{"id":2953,"nodeType":"UncheckedBlock","src":"1247:61:16","statements":[{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2945,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2900,"src":"1271:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1288:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"1271:26:16"}]}]},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:16","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"counter","nameLocation":"1120:7:16","nodeType":"VariableDeclaration","scope":2955,"src":"1104:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"1104:7:16"},"referencedDeclaration":2901,"src":"1104:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:16"},"returnParameters":{"id":2932,"nodeType":"ParameterList","parameters":[],"src":"1138:0:16"},"scope":2969,"src":"1085:229:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2967,"nodeType":"Block","src":"1369:35:16","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2961,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"1379:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2900,"src":"1379:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2966,"nodeType":"ExpressionStatement","src":"1379:18:16"}]},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:16","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"counter","nameLocation":"1351:7:16","nodeType":"VariableDeclaration","scope":2968,"src":"1335:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2957,"nodeType":"UserDefinedTypeName","pathNode":{"id":2956,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2901,"src":"1335:7:16"},"referencedDeclaration":2901,"src":"1335:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2901_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:16"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"1369:0:16"},"scope":2969,"src":"1320:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2970,"src":"424:982:16","usedErrors":[]}],"src":"87:1320:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[3029]},"id":3030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2971,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"130:1148:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":3029,"linearizedBaseContracts":[3029],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2975,"members":[{"constant":false,"id":2974,"mutability":"mutable","name":"value","nameLocation":"1353:5:17","nodeType":"VariableDeclaration","scope":2975,"src":"1345:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:17","nodeType":"StructDefinition","scope":3029,"src":"1316:49:17","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2978,"members":[{"constant":false,"id":2977,"mutability":"mutable","name":"value","nameLocation":"1405:5:17","nodeType":"VariableDeclaration","scope":2978,"src":"1400:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2976,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:17","nodeType":"StructDefinition","scope":3029,"src":"1371:46:17","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2981,"members":[{"constant":false,"id":2980,"mutability":"mutable","name":"value","nameLocation":"1460:5:17","nodeType":"VariableDeclaration","scope":2981,"src":"1452:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:17","nodeType":"StructDefinition","scope":3029,"src":"1423:49:17","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2984,"members":[{"constant":false,"id":2983,"mutability":"mutable","name":"value","nameLocation":"1515:5:17","nodeType":"VariableDeclaration","scope":2984,"src":"1507:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:17","nodeType":"StructDefinition","scope":3029,"src":"1478:49:17","visibility":"public"},{"body":{"id":2994,"nodeType":"Block","src":"1709:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:17","statements":[{"nodeType":"YulAssignment","src":"1785:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2991,"isOffset":false,"isSlot":true,"src":"1785:6:17","suffix":"slot","valueSize":1},{"declaration":2987,"isOffset":false,"isSlot":false,"src":"1795:4:17","valueSize":1}],"id":2993,"nodeType":"InlineAssembly","src":"1762:47:17"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"1533:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:17","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"slot","nameLocation":"1657:4:17","nodeType":"VariableDeclaration","scope":2995,"src":"1649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:17"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"r","nameLocation":"1706:1:17","nodeType":"VariableDeclaration","scope":2995,"src":"1686:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2990,"nodeType":"UserDefinedTypeName","pathNode":{"id":2989,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"1686:11:17"},"referencedDeclaration":2975,"src":"1686:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2975_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:17"},"scope":3029,"src":"1625:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"1997:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:17","statements":[{"nodeType":"YulAssignment","src":"2073:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3002,"isOffset":false,"isSlot":true,"src":"2073:6:17","suffix":"slot","valueSize":1},{"declaration":2998,"isOffset":false,"isSlot":false,"src":"2083:4:17","valueSize":1}],"id":3004,"nodeType":"InlineAssembly","src":"2050:47:17"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"1821:87:17","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:17","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"slot","nameLocation":"1945:4:17","nodeType":"VariableDeclaration","scope":3006,"src":"1937:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:17"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"r","nameLocation":"1994:1:17","nodeType":"VariableDeclaration","scope":3006,"src":"1974:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2978_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":3001,"nodeType":"UserDefinedTypeName","pathNode":{"id":3000,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"1974:11:17"},"referencedDeclaration":2978,"src":"1974:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2978_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:17"},"scope":3029,"src":"1913:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"2285:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:17","statements":[{"nodeType":"YulAssignment","src":"2361:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3013,"isOffset":false,"isSlot":true,"src":"2361:6:17","suffix":"slot","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"2371:4:17","valueSize":1}],"id":3015,"nodeType":"InlineAssembly","src":"2338:47:17"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"2109:87:17","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:17","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"slot","nameLocation":"2233:4:17","nodeType":"VariableDeclaration","scope":3017,"src":"2225:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:17"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"r","nameLocation":"2282:1:17","nodeType":"VariableDeclaration","scope":3017,"src":"2262:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2981_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"2262:11:17"},"referencedDeclaration":2981,"src":"2262:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2981_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:17"},"scope":3029,"src":"2201:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"2573:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:17","statements":[{"nodeType":"YulAssignment","src":"2649:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3024,"isOffset":false,"isSlot":true,"src":"2649:6:17","suffix":"slot","valueSize":1},{"declaration":3020,"isOffset":false,"isSlot":false,"src":"2659:4:17","valueSize":1}],"id":3026,"nodeType":"InlineAssembly","src":"2626:47:17"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"2397:87:17","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:17","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"slot","nameLocation":"2521:4:17","nodeType":"VariableDeclaration","scope":3028,"src":"2513:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:17"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"r","nameLocation":"2570:1:17","nodeType":"VariableDeclaration","scope":3028,"src":"2550:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2984_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":3023,"nodeType":"UserDefinedTypeName","pathNode":{"id":3022,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":2984,"src":"2550:11:17"},"referencedDeclaration":2984,"src":"2550:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2984_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:17"},"scope":3029,"src":"2489:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3030,"src":"1279:1402:17","usedErrors":[]}],"src":"105:2577:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"StringsUpgradeable":[3255]},"id":3256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3031,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"126:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":3255,"linearizedBaseContracts":[3255],"name":"StringsUpgradeable","nameLocation":"169:18:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3035,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"219:12:18","nodeType":"VariableDeclaration","scope":3255,"src":"194:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3033,"name":"bytes16","nodeType":"ElementaryTypeName","src":"194:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"234:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3038,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"281:15:18","nodeType":"VariableDeclaration","scope":3255,"src":"258:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3036,"name":"uint8","nodeType":"ElementaryTypeName","src":"258:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"299:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3116,"nodeType":"Block","src":"474:632:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"676:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"685:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"676:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3052,"nodeType":"IfStatement","src":"672:51:18","trueBody":{"id":3051,"nodeType":"Block","src":"688:35:18","statements":[{"expression":{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"709:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":3045,"id":3050,"nodeType":"Return","src":"702:10:18"}]}},{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"temp","nameLocation":"740:4:18","nodeType":"VariableDeclaration","scope":3116,"src":"732:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3056,"initialValue":{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"747:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"732:20:18"},{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"digits","nameLocation":"770:6:18","nodeType":"VariableDeclaration","scope":3116,"src":"762:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3059,"nodeType":"VariableDeclarationStatement","src":"762:14:18"},{"body":{"id":3070,"nodeType":"Block","src":"804:57:18","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"818:8:18","subExpression":{"id":3063,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"818:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"818:8:18"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"840:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"848:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"840:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"840:10:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"793:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"801:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"793:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"WhileStatement","src":"786:75:18"},{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"buffer","nameLocation":"883:6:18","nodeType":"VariableDeclaration","scope":3116,"src":"870:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"870:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[{"id":3076,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"892:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3074,"name":"bytes","nodeType":"ElementaryTypeName","src":"896:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"870:39:18"},{"body":{"id":3109,"nodeType":"Block","src":"938:131:18","statements":[{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3082,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"952:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"962:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"952:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"nodeType":"ExpressionStatement","src":"952:11:18"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3086,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"977:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"indexExpression":{"id":3087,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"984:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"977:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1020:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1028:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1020:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1012:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:18","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1007:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3091,"name":"uint8","nodeType":"ElementaryTypeName","src":"1001:5:18","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"994:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3089,"name":"bytes1","nodeType":"ElementaryTypeName","src":"994:6:18","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"994:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"977:56:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3104,"nodeType":"ExpressionStatement","src":"977:56:18"},{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1047:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1056:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1047:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"1047:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"926:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"935:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"926:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"nodeType":"WhileStatement","src":"919:150:18"},{"expression":{"arguments":[{"id":3113,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"1092:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1085:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3111,"name":"string","nodeType":"ElementaryTypeName","src":"1085:6:18","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1085:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3045,"id":3115,"nodeType":"Return","src":"1078:21:18"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"308:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"412:8:18","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"value","nameLocation":"429:5:18","nodeType":"VariableDeclaration","scope":3117,"src":"421:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"420:15:18"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"459:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3043,"name":"string","nodeType":"ElementaryTypeName","src":"459:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"458:15:18"},"scope":3255,"src":"403:703:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3157,"nodeType":"Block","src":"1285:255:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1299:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1308:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1299:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"1295:54:18","trueBody":{"id":3130,"nodeType":"Block","src":"1311:38:18","statements":[{"expression":{"hexValue":"30783030","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1332:6:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":3124,"id":3129,"nodeType":"Return","src":"1325:13:18"}]}},{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"temp","nameLocation":"1366:4:18","nodeType":"VariableDeclaration","scope":3157,"src":"1358:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1358:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3135,"initialValue":{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1373:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1358:20:18"},{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"length","nameLocation":"1396:6:18","nodeType":"VariableDeclaration","scope":3157,"src":"1388:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3139,"initialValue":{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1405:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1388:18:18"},{"body":{"id":3150,"nodeType":"Block","src":"1434:57:18","statements":[{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1448:8:18","subExpression":{"id":3143,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"1448:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"1448:8:18"},{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"1470:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1479:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1470:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"1470:10:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"1423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1423:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"WhileStatement","src":"1416:75:18"},{"expression":{"arguments":[{"id":3153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1519:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3154,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"1526:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3158,3234,3254],"referencedDeclaration":3234,"src":"1507:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1507:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3124,"id":3156,"nodeType":"Return","src":"1500:33:18"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"1112:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3158,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1220:11:18","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"value","nameLocation":"1240:5:18","nodeType":"VariableDeclaration","scope":3158,"src":"1232:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1231:15:18"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3158,"src":"1270:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3122,"name":"string","nodeType":"ElementaryTypeName","src":"1270:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1269:15:18"},"scope":3255,"src":"1211:329:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"1753:351:18","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"buffer","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":3233,"src":"1763:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3168,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3178,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1795:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3173,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"1799:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1795:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1795:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1785:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1789:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1785:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1763:47:18"},{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3179,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"1820:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3181,"indexExpression":{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1827:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1820:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1832:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1820:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3184,"nodeType":"ExpressionStatement","src":"1820:15:18"},{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3185,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"1845:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3187,"indexExpression":{"hexValue":"31","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1845:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1857:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1845:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3190,"nodeType":"ExpressionStatement","src":"1845:15:18"},{"body":{"id":3219,"nodeType":"Block","src":"1915:87:18","statements":[{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3205,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"1929:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3207,"indexExpression":{"id":3206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1936:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1929:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3208,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1941:12:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3212,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1954:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1962:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1954:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1941:25:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1929:37:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3214,"nodeType":"ExpressionStatement","src":"1929:37:18"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1980:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1980:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"1980:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1903:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1903:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"initializationExpression":{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"i","nameLocation":"1883:1:18","nodeType":"VariableDeclaration","scope":3220,"src":"1875:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1875:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3194,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"1891:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1887:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1887:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1875:26:18"},"loopExpression":{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1910:3:18","subExpression":{"id":3202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1912:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"1910:3:18"},"nodeType":"ForStatement","src":"1870:132:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"2019:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2019:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2031:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2011:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3227,"nodeType":"ExpressionStatement","src":"2011:55:18"},{"expression":{"arguments":[{"id":3230,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"2090:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3228,"name":"string","nodeType":"ElementaryTypeName","src":"2083:6:18","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2083:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3167,"id":3232,"nodeType":"Return","src":"2076:21:18"}]},"documentation":{"id":3159,"nodeType":"StructuredDocumentation","src":"1546:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1672:11:18","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"value","nameLocation":"1692:5:18","nodeType":"VariableDeclaration","scope":3234,"src":"1684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"length","nameLocation":"1707:6:18","nodeType":"VariableDeclaration","scope":3234,"src":"1699:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:31:18"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"1738:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3165,"name":"string","nodeType":"ElementaryTypeName","src":"1738:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1737:15:18"},"scope":3255,"src":"1663:441:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"2329:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3247,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"2374:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2366:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3245,"name":"uint160","nodeType":"ElementaryTypeName","src":"2366:7:18","typeDescriptions":{}}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2366:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2358:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2358:7:18","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2358:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3250,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"2382:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3242,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3158,3234,3254],"referencedDeclaration":3234,"src":"2346:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2346:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3241,"id":3252,"nodeType":"Return","src":"2339:59:18"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"2110:141:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2265:11:18","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"addr","nameLocation":"2285:4:18","nodeType":"VariableDeclaration","scope":3254,"src":"2277:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2276:14:18"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3254,"src":"2314:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3239,"name":"string","nodeType":"ElementaryTypeName","src":"2314:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2313:15:18"},"scope":3255,"src":"2256:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3256,"src":"161:2246:18","usedErrors":[]}],"src":"101:2307:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[3643],"StringsUpgradeable":[3255]},"id":3644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3257,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":3258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3644,"sourceUnit":3256,"src":"137:35:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"174:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3643,"linearizedBaseContracts":[3643],"name":"ECDSAUpgradeable","nameLocation":"388:16:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":3265,"members":[{"id":3260,"name":"NoError","nameLocation":"439:7:19","nodeType":"EnumValue","src":"439:7:19"},{"id":3261,"name":"InvalidSignature","nameLocation":"456:16:19","nodeType":"EnumValue","src":"456:16:19"},{"id":3262,"name":"InvalidSignatureLength","nameLocation":"482:22:19","nodeType":"EnumValue","src":"482:22:19"},{"id":3263,"name":"InvalidSignatureS","nameLocation":"514:17:19","nodeType":"EnumValue","src":"514:17:19"},{"id":3264,"name":"InvalidSignatureV","nameLocation":"541:17:19","nodeType":"EnumValue","src":"541:17:19"}],"name":"RecoverError","nameLocation":"416:12:19","nodeType":"EnumDefinition","src":"411:153:19"},{"body":{"id":3318,"nodeType":"Block","src":"624:577:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"638:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3272,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"647:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"647:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"638:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"734:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3278,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"743:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3261,"src":"743:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"734:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"843:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3287,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"852:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"852:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"843:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"965:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3296,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"974:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"974:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"965:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"1085:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3305,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"1094:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":3264,"src":"1094:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"1085:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"IfStatement","src":"1081:114:19","trueBody":{"id":3312,"nodeType":"Block","src":"1126:69:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1147:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":3308,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1140:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1140:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3311,"nodeType":"ExpressionStatement","src":"1140:44:19"}]}},"id":3314,"nodeType":"IfStatement","src":"961:234:19","trueBody":{"id":3303,"nodeType":"Block","src":"1006:69:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3299,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"ExpressionStatement","src":"1020:44:19"}]}},"id":3315,"nodeType":"IfStatement","src":"839:356:19","trueBody":{"id":3294,"nodeType":"Block","src":"889:66:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3290,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"903:41:19"}]}},"id":3316,"nodeType":"IfStatement","src":"730:465:19","trueBody":{"id":3285,"nodeType":"Block","src":"774:59:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3281,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"ExpressionStatement","src":"788:34:19"}]}},"id":3317,"nodeType":"IfStatement","src":"634:561:19","trueBody":{"id":3276,"nodeType":"Block","src":"669:55:19","statements":[{"functionReturnParameters":3270,"id":3275,"nodeType":"Return","src":"683:7:19"}]}}]},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:19","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"error","nameLocation":"604:5:19","nodeType":"VariableDeclaration","scope":3319,"src":"591:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3267,"nodeType":"UserDefinedTypeName","pathNode":{"id":3266,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"591:12:19"},"referencedDeclaration":3265,"src":"591:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"590:20:19"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"624:0:19"},"scope":3643,"src":"570:631:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3364,"nodeType":"Block","src":"2369:626:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3332,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2383:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2383:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2403:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2383:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3362,"nodeType":"Block","src":"2908:81:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2938:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2930:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"2930:7:19","typeDescriptions":{}}},"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2930:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3358,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2942:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3262,"src":"2942:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2929:49:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3331,"id":3361,"nodeType":"Return","src":"2922:56:19"}]},"id":3363,"nodeType":"IfStatement","src":"2379:610:19","trueBody":{"id":3353,"nodeType":"Block","src":"2407:495:19","statements":[{"assignments":[3337],"declarations":[{"constant":false,"id":3337,"mutability":"mutable","name":"r","nameLocation":"2429:1:19","nodeType":"VariableDeclaration","scope":3353,"src":"2421:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3338,"nodeType":"VariableDeclarationStatement","src":"2421:9:19"},{"assignments":[3340],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"s","nameLocation":"2452:1:19","nodeType":"VariableDeclaration","scope":3353,"src":"2444:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2444:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3341,"nodeType":"VariableDeclarationStatement","src":"2444:9:19"},{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"v","nameLocation":"2473:1:19","nodeType":"VariableDeclaration","scope":3353,"src":"2467:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3342,"name":"uint8","nodeType":"ElementaryTypeName","src":"2467:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3344,"nodeType":"VariableDeclarationStatement","src":"2467:7:19"},{"AST":{"nodeType":"YulBlock","src":"2675:171:19","statements":[{"nodeType":"YulAssignment","src":"2693:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2708:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2719:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2704:3:19"},"nodeType":"YulFunctionCall","src":"2704:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2698:5:19"},"nodeType":"YulFunctionCall","src":"2698:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2693:1:19"}]},{"nodeType":"YulAssignment","src":"2742:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2757:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2768:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:19"},"nodeType":"YulFunctionCall","src":"2753:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2747:5:19"},"nodeType":"YulFunctionCall","src":"2747:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2742:1:19"}]},{"nodeType":"YulAssignment","src":"2791:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2801:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2814:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2825:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:19"},"nodeType":"YulFunctionCall","src":"2810:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2804:5:19"},"nodeType":"YulFunctionCall","src":"2804:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2796:4:19"},"nodeType":"YulFunctionCall","src":"2796:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2791:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3337,"isOffset":false,"isSlot":false,"src":"2693:1:19","valueSize":1},{"declaration":3340,"isOffset":false,"isSlot":false,"src":"2742:1:19","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"2708:9:19","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"2757:9:19","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"2814:9:19","valueSize":1},{"declaration":3343,"isOffset":false,"isSlot":false,"src":"2791:1:19","valueSize":1}],"id":3345,"nodeType":"InlineAssembly","src":"2666:180:19"},{"expression":{"arguments":[{"id":3347,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2877:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3348,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"2883:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2886:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3350,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2889:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3346,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3365,3439,3550],"referencedDeclaration":3550,"src":"2866:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2866:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3331,"id":3352,"nodeType":"Return","src":"2859:32:19"}]}}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"1207:1053:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3365,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2274:10:19","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"hash","nameLocation":"2293:4:19","nodeType":"VariableDeclaration","scope":3365,"src":"2285:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"signature","nameLocation":"2312:9:19","nodeType":"VariableDeclaration","scope":3365,"src":"2299:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3323,"name":"bytes","nodeType":"ElementaryTypeName","src":"2299:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:38:19"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3365,"src":"2346:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3365,"src":"2355:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3329,"nodeType":"UserDefinedTypeName","pathNode":{"id":3328,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"2355:12:19"},"referencedDeclaration":3265,"src":"2355:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2345:23:19"},"scope":3643,"src":"2265:730:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"3868:140:19","statements":[{"assignments":[3376,3379],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"recovered","nameLocation":"3887:9:19","nodeType":"VariableDeclaration","scope":3391,"src":"3879:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3375,"name":"address","nodeType":"ElementaryTypeName","src":"3879:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"error","nameLocation":"3911:5:19","nodeType":"VariableDeclaration","scope":3391,"src":"3898:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"3898:12:19"},"referencedDeclaration":3265,"src":"3898:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3384,"initialValue":{"arguments":[{"id":3381,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"3931:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3382,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3937:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3380,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3365,3439,3550],"referencedDeclaration":3365,"src":"3920:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3920:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3878:69:19"},{"expression":{"arguments":[{"id":3386,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"3969:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3385,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"3957:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3265_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3957:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"3957:18:19"},{"expression":{"id":3389,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3992:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3374,"id":3390,"nodeType":"Return","src":"3985:16:19"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"3001:775:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3790:7:19","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"hash","nameLocation":"3806:4:19","nodeType":"VariableDeclaration","scope":3392,"src":"3798:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3798:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"signature","nameLocation":"3825:9:19","nodeType":"VariableDeclaration","scope":3392,"src":"3812:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3369,"name":"bytes","nodeType":"ElementaryTypeName","src":"3812:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3797:38:19"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3392,"src":"3859:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"3859:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3858:9:19"},"scope":3643,"src":"3781:227:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"4395:203:19","statements":[{"assignments":[3408],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"s","nameLocation":"4413:1:19","nodeType":"VariableDeclaration","scope":3438,"src":"4405:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4405:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3415,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4417:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4422:7:19","typeDescriptions":{}}},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4422:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4417:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4405:92:19"},{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"v","nameLocation":"4513:1:19","nodeType":"VariableDeclaration","scope":3438,"src":"4507:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3416,"name":"uint8","nodeType":"ElementaryTypeName","src":"4507:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3430,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3422,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4532:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4524:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4524:7:19","typeDescriptions":{}}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4524:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4539:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4524:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4523:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4546:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4523:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4517:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3418,"name":"uint8","nodeType":"ElementaryTypeName","src":"4517:5:19","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4517:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4507:42:19"},{"expression":{"arguments":[{"id":3432,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"4577:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3433,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"4583:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3434,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4586:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3435,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"4589:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3431,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3365,3439,3550],"referencedDeclaration":3550,"src":"4566:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4566:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3406,"id":3437,"nodeType":"Return","src":"4559:32:19"}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"4014:243:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4271:10:19","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"hash","nameLocation":"4299:4:19","nodeType":"VariableDeclaration","scope":3439,"src":"4291:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"r","nameLocation":"4321:1:19","nodeType":"VariableDeclaration","scope":3439,"src":"4313:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4313:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"vs","nameLocation":"4340:2:19","nodeType":"VariableDeclaration","scope":3439,"src":"4332:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4281:67:19"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"4372:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"4372:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"4381:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3404,"nodeType":"UserDefinedTypeName","pathNode":{"id":3403,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"4381:12:19"},"referencedDeclaration":3265,"src":"4381:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4371:23:19"},"scope":3643,"src":"4262:336:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3468,"nodeType":"Block","src":"4879:136:19","statements":[{"assignments":[3452,3455],"declarations":[{"constant":false,"id":3452,"mutability":"mutable","name":"recovered","nameLocation":"4898:9:19","nodeType":"VariableDeclaration","scope":3468,"src":"4890:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"4890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"error","nameLocation":"4922:5:19","nodeType":"VariableDeclaration","scope":3468,"src":"4909:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3454,"nodeType":"UserDefinedTypeName","pathNode":{"id":3453,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"4909:12:19"},"referencedDeclaration":3265,"src":"4909:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3461,"initialValue":{"arguments":[{"id":3457,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4942:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3458,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"4948:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3459,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"4951:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3456,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3365,3439,3550],"referencedDeclaration":3439,"src":"4931:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4931:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4889:65:19"},{"expression":{"arguments":[{"id":3463,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"4976:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3462,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"4964:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3265_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4964:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3465,"nodeType":"ExpressionStatement","src":"4964:18:19"},{"expression":{"id":3466,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4999:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3450,"id":3467,"nodeType":"Return","src":"4992:16:19"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"4604:154:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4772:7:19","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"hash","nameLocation":"4797:4:19","nodeType":"VariableDeclaration","scope":3469,"src":"4789:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"r","nameLocation":"4819:1:19","nodeType":"VariableDeclaration","scope":3469,"src":"4811:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4811:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"vs","nameLocation":"4838:2:19","nodeType":"VariableDeclaration","scope":3469,"src":"4830:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4830:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4779:67:19"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"4870:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3448,"name":"address","nodeType":"ElementaryTypeName","src":"4870:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4869:9:19"},"scope":3643,"src":"4763:252:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"5338:1454:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3488,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6234:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6226:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6226:7:19","typeDescriptions":{}}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6226:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6239:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6226:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"IfStatement","src":"6222:161:19","trueBody":{"id":3500,"nodeType":"Block","src":"6307:76:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6337:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6329:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3492,"name":"address","nodeType":"ElementaryTypeName","src":"6329:7:19","typeDescriptions":{}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6329:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3496,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6341:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"6341:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6328:44:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3485,"id":3499,"nodeType":"Return","src":"6321:51:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"6396:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6401:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6396:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"6407:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6412:2:19","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6396:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"IfStatement","src":"6392:100:19","trueBody":{"id":3517,"nodeType":"Block","src":"6416:76:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6446:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6438:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"6438:7:19","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3513,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6450:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":3264,"src":"6450:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6437:44:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3485,"id":3516,"nodeType":"Return","src":"6430:51:19"}]}},{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"mutability":"mutable","name":"signer","nameLocation":"6594:6:19","nodeType":"VariableDeclaration","scope":3549,"src":"6586:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"6586:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3527,"initialValue":{"arguments":[{"id":3522,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"6613:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3523,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"6619:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3524,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6622:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3525,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6625:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3521,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6603:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6603:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6586:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6641:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6659:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6651:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"6651:7:19","typeDescriptions":{}}},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6651:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6641:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"6637:101:19","trueBody":{"id":3542,"nodeType":"Block","src":"6663:75:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6693:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6685:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3534,"name":"address","nodeType":"ElementaryTypeName","src":"6685:7:19","typeDescriptions":{}}},"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6685:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3538,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6697:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3261,"src":"6697:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6684:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3485,"id":3541,"nodeType":"Return","src":"6677:50:19"}]}},{"expression":{"components":[{"id":3544,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6756:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3545,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6764:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3265_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"6764:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6755:30:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3485,"id":3548,"nodeType":"Return","src":"6748:37:19"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"5021:163:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5198:10:19","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"hash","nameLocation":"5226:4:19","nodeType":"VariableDeclaration","scope":3550,"src":"5218:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"v","nameLocation":"5246:1:19","nodeType":"VariableDeclaration","scope":3550,"src":"5240:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3473,"name":"uint8","nodeType":"ElementaryTypeName","src":"5240:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"r","nameLocation":"5265:1:19","nodeType":"VariableDeclaration","scope":3550,"src":"5257:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5257:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"s","nameLocation":"5284:1:19","nodeType":"VariableDeclaration","scope":3550,"src":"5276:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5276:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5208:83:19"},"returnParameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"5315:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"5315:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"5324:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3483,"nodeType":"UserDefinedTypeName","pathNode":{"id":3482,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"5324:12:19"},"referencedDeclaration":3265,"src":"5324:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5314:23:19"},"scope":3643,"src":"5189:1603:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"7057:138:19","statements":[{"assignments":[3565,3568],"declarations":[{"constant":false,"id":3565,"mutability":"mutable","name":"recovered","nameLocation":"7076:9:19","nodeType":"VariableDeclaration","scope":3582,"src":"7068:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"7068:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"error","nameLocation":"7100:5:19","nodeType":"VariableDeclaration","scope":3582,"src":"7087:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"7087:12:19"},"referencedDeclaration":3265,"src":"7087:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3575,"initialValue":{"arguments":[{"id":3570,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"7120:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3571,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"7126:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"7129:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"7132:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3569,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3365,3439,3550],"referencedDeclaration":3550,"src":"7109:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7109:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3265_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7067:67:19"},{"expression":{"arguments":[{"id":3577,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7156:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3265","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3576,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"7144:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3265_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7144:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"ExpressionStatement","src":"7144:18:19"},{"expression":{"id":3580,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"7179:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3563,"id":3581,"nodeType":"Return","src":"7172:16:19"}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"6798:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6934:7:19","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"hash","nameLocation":"6959:4:19","nodeType":"VariableDeclaration","scope":3583,"src":"6951:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6951:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"v","nameLocation":"6979:1:19","nodeType":"VariableDeclaration","scope":3583,"src":"6973:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3554,"name":"uint8","nodeType":"ElementaryTypeName","src":"6973:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"r","nameLocation":"6998:1:19","nodeType":"VariableDeclaration","scope":3583,"src":"6990:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6990:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"s","nameLocation":"7017:1:19","nodeType":"VariableDeclaration","scope":3583,"src":"7009:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7009:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6941:83:19"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"7048:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"7048:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7047:9:19"},"scope":3643,"src":"6925:270:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"7563:187:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7701:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":3595,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"7737:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3592,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7684:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7684:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7684:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3591,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7674:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7674:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3590,"id":3598,"nodeType":"Return","src":"7667:76:19"}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"7201:279:19","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7494:22:19","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"hash","nameLocation":"7525:4:19","nodeType":"VariableDeclaration","scope":3600,"src":"7517:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7516:14:19"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3600,"src":"7554:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7554:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7553:9:19"},"scope":3643,"src":"7485:265:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3621,"nodeType":"Block","src":"8115:127:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8159:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3614,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8221:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8221:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3612,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"8193:18:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3255_$","typeString":"type(library StringsUpgradeable)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"8193:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8193:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3617,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8232:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8142:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8142:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8142:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3608,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8132:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:103:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3607,"id":3620,"nodeType":"Return","src":"8125:110:19"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"7756:274:19","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8044:22:19","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"s","nameLocation":"8080:1:19","nodeType":"VariableDeclaration","scope":3622,"src":"8067:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3602,"name":"bytes","nodeType":"ElementaryTypeName","src":"8067:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8066:16:19"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"8106:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8106:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8105:9:19"},"scope":3643,"src":"8035:207:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"8683:92:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8727:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":3636,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"8739:15:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3637,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"8756:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8710:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8710:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8710:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8700:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8700:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3631,"id":3640,"nodeType":"Return","src":"8693:75:19"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"8248:328:19","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8590:15:19","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"domainSeparator","nameLocation":"8614:15:19","nodeType":"VariableDeclaration","scope":3642,"src":"8606:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8606:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"structHash","nameLocation":"8639:10:19","nodeType":"VariableDeclaration","scope":3642,"src":"8631:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8631:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8605:45:19"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"8674:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8674:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8673:9:19"},"scope":3643,"src":"8581:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3644,"src":"380:8397:19","usedErrors":[]}],"src":"112:8666:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ECDSAUpgradeable":[3643],"EIP712Upgradeable":[3793],"Initializable":[749],"StringsUpgradeable":[3255]},"id":3794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3645,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":3646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3794,"sourceUnit":3644,"src":"129:32:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3794,"sourceUnit":750,"src":"162:45:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3649,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1421:13:20"},"id":3650,"nodeType":"InheritanceSpecifier","src":"1421:13:20"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"209:1172:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":3793,"linearizedBaseContracts":[3793,749],"name":"EIP712Upgradeable","nameLocation":"1400:17:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3652,"mutability":"mutable","name":"_HASHED_NAME","nameLocation":"1502:12:20","nodeType":"VariableDeclaration","scope":3793,"src":"1486:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1486:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3654,"mutability":"mutable","name":"_HASHED_VERSION","nameLocation":"1536:15:20","nodeType":"VariableDeclaration","scope":3793,"src":"1520:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1520:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":3659,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1582:10:20","nodeType":"VariableDeclaration","scope":3793,"src":"1557:133:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1557:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1605:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3656,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1595:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":3674,"nodeType":"Block","src":"2398:55:20","statements":[{"expression":{"arguments":[{"id":3670,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"2432:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3671,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"2438:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3669,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"2408:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3673,"nodeType":"ExpressionStatement","src":"2408:38:20"}]},"documentation":{"id":3660,"nodeType":"StructuredDocumentation","src":"1742:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3675,"implemented":true,"kind":"function","modifiers":[{"id":3667,"kind":"modifierInvocation","modifierName":{"id":3666,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2381:16:20"},"nodeType":"ModifierInvocation","src":"2381:16:20"}],"name":"__EIP712_init","nameLocation":"2315:13:20","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"name","nameLocation":"2343:4:20","nodeType":"VariableDeclaration","scope":3675,"src":"2329:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3661,"name":"string","nodeType":"ElementaryTypeName","src":"2329:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"version","nameLocation":"2363:7:20","nodeType":"VariableDeclaration","scope":3675,"src":"2349:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3663,"name":"string","nodeType":"ElementaryTypeName","src":"2349:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2328:43:20"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[],"src":"2398:0:20"},"scope":3793,"src":"2306:147:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3710,"nodeType":"Block","src":"2561:195:20","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"hashedName","nameLocation":"2579:10:20","nodeType":"VariableDeclaration","scope":3710,"src":"2571:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2571:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3692,"initialValue":{"arguments":[{"arguments":[{"id":3689,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"2608:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2602:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3687,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:20","typeDescriptions":{}}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3686,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2592:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2592:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2571:43:20"},{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"hashedVersion","nameLocation":"2632:13:20","nodeType":"VariableDeclaration","scope":3710,"src":"2624:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2624:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3701,"initialValue":{"arguments":[{"arguments":[{"id":3698,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"2664:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3696,"name":"bytes","nodeType":"ElementaryTypeName","src":"2658:5:20","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2658:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3695,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2648:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2624:49:20"},{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"2683:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3703,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"2698:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2683:25:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3705,"nodeType":"ExpressionStatement","src":"2683:25:20"},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3706,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2718:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3707,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"2736:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2718:31:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3709,"nodeType":"ExpressionStatement","src":"2718:31:20"}]},"id":3711,"implemented":true,"kind":"function","modifiers":[{"id":3682,"kind":"modifierInvocation","modifierName":{"id":3681,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":712,"src":"2544:16:20"},"nodeType":"ModifierInvocation","src":"2544:16:20"}],"name":"__EIP712_init_unchained","nameLocation":"2468:23:20","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"name","nameLocation":"2506:4:20","nodeType":"VariableDeclaration","scope":3711,"src":"2492:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3676,"name":"string","nodeType":"ElementaryTypeName","src":"2492:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"version","nameLocation":"2526:7:20","nodeType":"VariableDeclaration","scope":3711,"src":"2512:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3678,"name":"string","nodeType":"ElementaryTypeName","src":"2512:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2491:43:20"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[],"src":"2561:0:20"},"scope":3793,"src":"2459:297:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"2904:98:20","statements":[{"expression":{"arguments":[{"id":3718,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2943:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3719,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"2955:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2955:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3721,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"2974:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3717,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2921:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2921:74:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3716,"id":3724,"nodeType":"Return","src":"2914:81:20"}]},"documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"2762:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"2851:18:20","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[],"src":"2869:2:20"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"2895:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2895:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2894:9:20"},"scope":3793,"src":"2842:160:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3752,"nodeType":"Block","src":"3157:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3740,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"3195:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3741,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"3205:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3742,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3215:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3743,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3228:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3228:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3747,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3251:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3793","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3793","typeString":"contract EIP712Upgradeable"}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3243:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3745,"name":"address","nodeType":"ElementaryTypeName","src":"3243:7:20","typeDescriptions":{}}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3738,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3184:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3184:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3184:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3737,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3174:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3174:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3736,"id":3751,"nodeType":"Return","src":"3167:91:20"}]},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3017:21:20","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"typeHash","nameLocation":"3056:8:20","nodeType":"VariableDeclaration","scope":3753,"src":"3048:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3048:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"nameHash","nameLocation":"3082:8:20","nodeType":"VariableDeclaration","scope":3753,"src":"3074:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3074:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"versionHash","nameLocation":"3108:11:20","nodeType":"VariableDeclaration","scope":3753,"src":"3100:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3100:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3038:87:20"},"returnParameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3753,"src":"3148:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3148:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3147:9:20"},"scope":3793,"src":"3008:257:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3768,"nodeType":"Block","src":"3976:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3763,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"4026:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4026:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3765,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4048:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3761,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3993:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3643_$","typeString":"type(library ECDSAUpgradeable)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3642,"src":"3993:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3993:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3760,"id":3767,"nodeType":"Return","src":"3986:73:20"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"3271:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"3899:16:20","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"structHash","nameLocation":"3924:10:20","nodeType":"VariableDeclaration","scope":3769,"src":"3916:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3916:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3915:20:20"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"3967:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:9:20"},"scope":3793,"src":"3890:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"4369:36:20","statements":[{"expression":{"id":3775,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4386:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3774,"id":3776,"nodeType":"Return","src":"4379:19:20"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"4072:225:20","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"4311:15:20","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[],"src":"4326:2:20"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3778,"src":"4360:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4359:9:20"},"scope":3793,"src":"4302:103:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"4714:39:20","statements":[{"expression":{"id":3784,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4731:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3783,"id":3785,"nodeType":"Return","src":"4724:22:20"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"4411:228:20","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"4653:18:20","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[],"src":"4671:2:20"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3787,"src":"4705:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4705:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4704:9:20"},"scope":3793,"src":"4644:109:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"4759:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3792,"mutability":"mutable","name":"__gap","nameLocation":"5038:5:20","nodeType":"VariableDeclaration","scope":3793,"src":"5018:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"length":{"hexValue":"3530","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"5018:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3794,"src":"1382:3664:20","usedErrors":[]}],"src":"104:4943:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4297]},"id":4298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3795,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"128:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4297,"linearizedBaseContracts":[4297],"name":"MathUpgradeable","nameLocation":"210:15:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":3800,"members":[{"id":3797,"name":"Down","nameLocation":"256:4:21","nodeType":"EnumValue","src":"256:4:21"},{"id":3798,"name":"Up","nameLocation":"298:2:21","nodeType":"EnumValue","src":"298:2:21"},{"id":3799,"name":"Zero","nameLocation":"329:4:21","nodeType":"EnumValue","src":"329:4:21"}],"name":"Rounding","nameLocation":"237:8:21","nodeType":"EnumDefinition","src":"232:122:21"},{"body":{"id":3817,"nodeType":"Block","src":"491:38:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"508:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"513:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"521:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:14:21","trueExpression":{"id":3813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"517:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3809,"id":3816,"nodeType":"Return","src":"501:21:21"}]},"documentation":{"id":3801,"nodeType":"StructuredDocumentation","src":"360:59:21","text":" @dev Returns the largest of two numbers."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:21","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"a","nameLocation":"445:1:21","nodeType":"VariableDeclaration","scope":3818,"src":"437:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"b","nameLocation":"456:1:21","nodeType":"VariableDeclaration","scope":3818,"src":"448:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:21"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"482:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:21"},"scope":4297,"src":"424:105:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"667:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"684:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"688:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"684:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3832,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"696:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"684:13:21","trueExpression":{"id":3831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"692:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3827,"id":3834,"nodeType":"Return","src":"677:20:21"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"535:60:21","text":" @dev Returns the smallest of two numbers."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"609:3:21","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"a","nameLocation":"621:1:21","nodeType":"VariableDeclaration","scope":3836,"src":"613:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"b","nameLocation":"632:1:21","nodeType":"VariableDeclaration","scope":3836,"src":"624:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:22:21"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3836,"src":"658:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"657:9:21"},"scope":4297,"src":"600:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3858,"nodeType":"Block","src":"888:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"943:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"947:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"943:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"942:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"953:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"957:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"953:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"952:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"962:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"952:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3845,"id":3857,"nodeType":"Return","src":"935:28:21"}]},"documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"710:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"826:7:21","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"a","nameLocation":"842:1:21","nodeType":"VariableDeclaration","scope":3859,"src":"834:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"b","nameLocation":"853:1:21","nodeType":"VariableDeclaration","scope":3859,"src":"845:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"833:22:21"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3859,"src":"879:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:9:21"},"scope":4297,"src":"817:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"1240:123:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1328:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1333:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1328:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1342:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1346:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1342:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1341:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3877,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"1351:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1341:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1355:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1328:28:21","trueExpression":{"hexValue":"30","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3868,"id":3882,"nodeType":"Return","src":"1321:35:21"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"976:188:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1178:7:21","nodeType":"FunctionDefinition","parameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"a","nameLocation":"1194:1:21","nodeType":"VariableDeclaration","scope":3884,"src":"1186:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"b","nameLocation":"1205:1:21","nodeType":"VariableDeclaration","scope":3884,"src":"1197:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:22:21"},"returnParameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1230:9:21"},"scope":4297,"src":"1169:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4005,"nodeType":"Block","src":"1807:3797:21","statements":[{"id":4004,"nodeType":"UncheckedBlock","src":"1817:3781:21","statements":[{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"prod0","nameLocation":"2146:5:21","nodeType":"VariableDeclaration","scope":4004,"src":"2138:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"nodeType":"VariableDeclarationStatement","src":"2138:13:21"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"prod1","nameLocation":"2218:5:21","nodeType":"VariableDeclaration","scope":4004,"src":"2210:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"nodeType":"VariableDeclarationStatement","src":"2210:13:21"},{"AST":{"nodeType":"YulBlock","src":"2290:157:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2308:30:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2325:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2328:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2335:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:6:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2318:6:21"},"nodeType":"YulFunctionCall","src":"2318:20:21"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2312:2:21","type":""}]},{"nodeType":"YulAssignment","src":"2355:18:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2368:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2371:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2364:3:21"},"nodeType":"YulFunctionCall","src":"2364:9:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2355:5:21"}]},{"nodeType":"YulAssignment","src":"2390:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2407:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"2411:5:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2403:3:21"},"nodeType":"YulFunctionCall","src":"2403:14:21"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2422:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"2426:5:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2419:2:21"},"nodeType":"YulFunctionCall","src":"2419:13:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2399:3:21"},"nodeType":"YulFunctionCall","src":"2399:34:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2390:5:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3897,"isOffset":false,"isSlot":false,"src":"2355:5:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"2411:5:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"2426:5:21","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"2390:5:21","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"2325:1:21","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"2368:1:21","valueSize":1},{"declaration":3889,"isOffset":false,"isSlot":false,"src":"2328:1:21","valueSize":1},{"declaration":3889,"isOffset":false,"isSlot":false,"src":"2371:1:21","valueSize":1}],"id":3902,"nodeType":"InlineAssembly","src":"2281:166:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"2528:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2528:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3911,"nodeType":"IfStatement","src":"2524:75:21","trueBody":{"id":3910,"nodeType":"Block","src":"2540:59:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2565:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3907,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2573:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3895,"id":3909,"nodeType":"Return","src":"2558:26:21"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2709:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3914,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"2723:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2709:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2701:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3917,"nodeType":"ExpressionStatement","src":"2701:28:21"},{"assignments":[3919],"declarations":[{"constant":false,"id":3919,"mutability":"mutable","name":"remainder","nameLocation":"2993:9:21","nodeType":"VariableDeclaration","scope":4004,"src":"2985:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3920,"nodeType":"VariableDeclarationStatement","src":"2985:17:21"},{"AST":{"nodeType":"YulBlock","src":"3025:291:21","statements":[{"nodeType":"YulAssignment","src":"3094:38:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3114:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"3117:1:21"},{"name":"denominator","nodeType":"YulIdentifier","src":"3120:11:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3107:6:21"},"nodeType":"YulFunctionCall","src":"3107:25:21"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3094:9:21"}]},{"nodeType":"YulAssignment","src":"3214:41:21","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3227:5:21"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3237:9:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"3248:5:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3234:2:21"},"nodeType":"YulFunctionCall","src":"3234:20:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3223:3:21"},"nodeType":"YulFunctionCall","src":"3223:32:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3214:5:21"}]},{"nodeType":"YulAssignment","src":"3272:30:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3285:5:21"},{"name":"remainder","nodeType":"YulIdentifier","src":"3292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3281:3:21"},"nodeType":"YulFunctionCall","src":"3281:21:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3272:5:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3891,"isOffset":false,"isSlot":false,"src":"3120:11:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3248:5:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3272:5:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3285:5:21","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"3214:5:21","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"3227:5:21","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"3094:9:21","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"3237:9:21","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"3292:9:21","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"3114:1:21","valueSize":1},{"declaration":3889,"isOffset":false,"isSlot":false,"src":"3117:1:21","valueSize":1}],"id":3921,"nodeType":"InlineAssembly","src":"3016:300:21"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"twos","nameLocation":"3631:4:21","nodeType":"VariableDeclaration","scope":4004,"src":"3623:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"3638:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3653:12:21","subExpression":{"id":3925,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"3654:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3668:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3653:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3652:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3638:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3623:47:21"},{"AST":{"nodeType":"YulBlock","src":"3693:362:21","statements":[{"nodeType":"YulAssignment","src":"3758:37:21","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3777:11:21"},{"name":"twos","nodeType":"YulIdentifier","src":"3790:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3773:3:21"},"nodeType":"YulFunctionCall","src":"3773:22:21"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3758:11:21"}]},{"nodeType":"YulAssignment","src":"3862:25:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3875:5:21"},{"name":"twos","nodeType":"YulIdentifier","src":"3882:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3871:3:21"},"nodeType":"YulFunctionCall","src":"3871:16:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3862:5:21"}]},{"nodeType":"YulAssignment","src":"4002:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4022:1:21","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4025:4:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4018:3:21"},"nodeType":"YulFunctionCall","src":"4018:12:21"},{"name":"twos","nodeType":"YulIdentifier","src":"4032:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4014:3:21"},"nodeType":"YulFunctionCall","src":"4014:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4039:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:21"},"nodeType":"YulFunctionCall","src":"4010:31:21"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4002:4:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3891,"isOffset":false,"isSlot":false,"src":"3758:11:21","valueSize":1},{"declaration":3891,"isOffset":false,"isSlot":false,"src":"3777:11:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3862:5:21","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3875:5:21","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"3790:4:21","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"3882:4:21","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"4002:4:21","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"4025:4:21","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"4032:4:21","valueSize":1}],"id":3932,"nodeType":"InlineAssembly","src":"3684:371:21"},{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3933,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4121:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"4130:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3935,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"4138:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4130:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4121:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"4121:21:21"},{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"inverse","nameLocation":"4468:7:21","nodeType":"VariableDeclaration","scope":4004,"src":"4460:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4479:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4483:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4479:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4478:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4498:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4478:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4460:39:21"},{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4716:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4727:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4731:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3951,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4745:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4731:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4727:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3955,"nodeType":"ExpressionStatement","src":"4716:36:21"},{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4785:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4796:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4800:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3959,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4800:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4796:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3963,"nodeType":"ExpressionStatement","src":"4785:36:21"},{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3964,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4855:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4870:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3967,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4870:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4866:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3971,"nodeType":"ExpressionStatement","src":"4855:36:21"},{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3972,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4940:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3975,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4940:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4936:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"4925:36:21"},{"expression":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4995:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5006:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5010:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3983,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5024:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5010:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5006:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3987,"nodeType":"ExpressionStatement","src":"4995:36:21"},{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5066:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5081:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3991,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5077:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5066:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"5066:36:21"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5536:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3997,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"5545:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3998,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5553:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5545:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5536:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"5536:24:21"},{"expression":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5581:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3895,"id":4003,"nodeType":"Return","src":"5574:13:21"}]}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"1369:305:21","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4006,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1688:6:21","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"x","nameLocation":"1712:1:21","nodeType":"VariableDeclaration","scope":4006,"src":"1704:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"y","nameLocation":"1731:1:21","nodeType":"VariableDeclaration","scope":4006,"src":"1723:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"denominator","nameLocation":"1750:11:21","nodeType":"VariableDeclaration","scope":4006,"src":"1742:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1694:73:21"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"result","nameLocation":"1799:6:21","nodeType":"VariableDeclaration","scope":4006,"src":"1791:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:16:21"},"scope":4297,"src":"1679:3925:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4049,"nodeType":"Block","src":"5884:189:21","statements":[{"assignments":[4022],"declarations":[{"constant":false,"id":4022,"mutability":"mutable","name":"result","nameLocation":"5902:6:21","nodeType":"VariableDeclaration","scope":4049,"src":"5894:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"5894:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4028,"initialValue":{"arguments":[{"id":4024,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5918:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4025,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"5921:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4026,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"5924:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4023,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4006,4050],"referencedDeclaration":4006,"src":"5911:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5894:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"5950:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4030,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"5962:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3800_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3798,"src":"5962:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"src":"5950:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4034,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5984:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4035,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"5987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"5990:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4033,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5977:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5977:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6005:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5977:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5950:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4046,"nodeType":"IfStatement","src":"5946:98:21","trueBody":{"id":4045,"nodeType":"Block","src":"6008:36:21","statements":[{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6022:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6032:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6022:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"6022:11:21"}]}},{"expression":{"id":4047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6060:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4020,"id":4048,"nodeType":"Return","src":"6053:13:21"}]},"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"5610:121:21","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4050,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5745:6:21","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"x","nameLocation":"5769:1:21","nodeType":"VariableDeclaration","scope":4050,"src":"5761:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5761:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"y","nameLocation":"5788:1:21","nodeType":"VariableDeclaration","scope":4050,"src":"5780:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5780:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"denominator","nameLocation":"5807:11:21","nodeType":"VariableDeclaration","scope":4050,"src":"5799:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5799:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"rounding","nameLocation":"5837:8:21","nodeType":"VariableDeclaration","scope":4050,"src":"5828:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4015,"nodeType":"UserDefinedTypeName","pathNode":{"id":4014,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3800,"src":"5828:8:21"},"referencedDeclaration":3800,"src":"5828:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"5751:100:21"},"returnParameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4050,"src":"5875:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5874:9:21"},"scope":4297,"src":"5736:337:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"6349:2149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6363:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6368:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6363:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4064,"nodeType":"IfStatement","src":"6359:45:21","trueBody":{"id":4063,"nodeType":"Block","src":"6371:33:21","statements":[{"expression":{"hexValue":"30","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6392:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4057,"id":4062,"nodeType":"Return","src":"6385:8:21"}]}},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"result","nameLocation":"7077:6:21","nodeType":"VariableDeclaration","scope":4259,"src":"7069:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7069:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4068,"initialValue":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7086:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7069:18:21"},{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"x","nameLocation":"7105:1:21","nodeType":"VariableDeclaration","scope":4259,"src":"7097:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"id":4071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"7109:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7097:13:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7124:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7129:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7124:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7135:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7124:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4087,"nodeType":"IfStatement","src":"7120:79:21","trueBody":{"id":4086,"nodeType":"Block","src":"7138:61:21","statements":[{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7152:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7158:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7152:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"7152:9:21"},{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7175:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7186:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7175:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"7175:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7212:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7217:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7212:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7222:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7212:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"IfStatement","src":"7208:77:21","trueBody":{"id":4101,"nodeType":"Block","src":"7225:60:21","statements":[{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4093,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7239:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7245:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7239:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"7239:8:21"},{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7261:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7272:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7261:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"7261:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7298:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7303:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7298:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7308:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7298:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"7294:77:21","trueBody":{"id":4116,"nodeType":"Block","src":"7311:60:21","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7325:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7331:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7325:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"7325:8:21"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7347:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7358:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7347:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"7347:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7384:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7389:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7384:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7394:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7384:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"7380:76:21","trueBody":{"id":4131,"nodeType":"Block","src":"7397:59:21","statements":[{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7411:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7417:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7411:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"7411:8:21"},{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7433:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7444:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7433:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"7433:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7469:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7474:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7469:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7478:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7469:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4147,"nodeType":"IfStatement","src":"7465:74:21","trueBody":{"id":4146,"nodeType":"Block","src":"7481:58:21","statements":[{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7495:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7501:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7495:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ExpressionStatement","src":"7495:7:21"},{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7516:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7527:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7516:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4145,"nodeType":"ExpressionStatement","src":"7516:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7552:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7552:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7561:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7552:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4162,"nodeType":"IfStatement","src":"7548:74:21","trueBody":{"id":4161,"nodeType":"Block","src":"7564:58:21","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4153,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7578:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7584:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7578:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"7578:7:21"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7599:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7610:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7599:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"7599:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7635:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7635:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7635:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4173,"nodeType":"IfStatement","src":"7631:53:21","trueBody":{"id":4172,"nodeType":"Block","src":"7647:37:21","statements":[{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7661:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7672:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7661:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"7661:12:21"}]}},{"id":4258,"nodeType":"UncheckedBlock","src":"8084:408:21","statements":[{"expression":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8108:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8118:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8127:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8131:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8127:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8118:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8117:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8142:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8117:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8108:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4184,"nodeType":"ExpressionStatement","src":"8108:35:21"},{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8157:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8167:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8176:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8180:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8176:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8167:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8166:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8191:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8166:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8157:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ExpressionStatement","src":"8157:35:21"},{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8206:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8216:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8225:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8229:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8225:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8216:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8215:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8215:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8206:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"8206:35:21"},{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8255:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8265:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8274:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8278:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8274:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8265:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8264:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8289:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8264:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8255:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"8255:35:21"},{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8304:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8314:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8323:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8327:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8314:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8313:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8338:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8313:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8304:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"8304:35:21"},{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8353:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8363:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8372:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8376:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8372:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8363:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8362:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8387:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8353:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"8353:35:21"},{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8402:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8412:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8421:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8425:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8421:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8412:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8411:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8411:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8402:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"8402:35:21"},{"expression":{"arguments":[{"id":4252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8462:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"8470:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"8474:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8470:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4251,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8458:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8458:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4057,"id":4257,"nodeType":"Return","src":"8451:30:21"}]}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"6079:208:21","text":" @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6301:4:21","nodeType":"FunctionDefinition","parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"a","nameLocation":"6314:1:21","nodeType":"VariableDeclaration","scope":4260,"src":"6306:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6306:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6305:11:21"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"6340:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"6340:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6339:9:21"},"scope":4297,"src":"6292:2206:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"8674:161:21","statements":[{"assignments":[4272],"declarations":[{"constant":false,"id":4272,"mutability":"mutable","name":"result","nameLocation":"8692:6:21","nodeType":"VariableDeclaration","scope":4295,"src":"8684:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"8684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4276,"initialValue":{"arguments":[{"id":4274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"8706:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4273,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4260,4296],"referencedDeclaration":4260,"src":"8701:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8701:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8684:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4277,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"8722:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4278,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"8734:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3800_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3798,"src":"8734:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"src":"8722:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8749:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8758:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"8767:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8722:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"8718:88:21","trueBody":{"id":4291,"nodeType":"Block","src":"8770:36:21","statements":[{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8784:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8784:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"8784:11:21"}]}},{"expression":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8822:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4270,"id":4294,"nodeType":"Return","src":"8815:13:21"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"8504:89:21","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8607:4:21","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"a","nameLocation":"8620:1:21","nodeType":"VariableDeclaration","scope":4296,"src":"8612:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"8612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4266,"mutability":"mutable","name":"rounding","nameLocation":"8632:8:21","nodeType":"VariableDeclaration","scope":4296,"src":"8623:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4265,"nodeType":"UserDefinedTypeName","pathNode":{"id":4264,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3800,"src":"8623:8:21"},"referencedDeclaration":3800,"src":"8623:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3800","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8611:30:21"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4296,"src":"8665:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8665:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8664:9:21"},"scope":4297,"src":"8598:237:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4298,"src":"202:8635:21","usedErrors":[]}],"src":"103:8735:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","exportedSymbols":{"SafeCastUpgradeable":[6148]},"id":6149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4299,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCastUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"132:709:22","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":6148,"linearizedBaseContracts":[6148],"name":"SafeCastUpgradeable","nameLocation":"850:19:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4324,"nodeType":"Block","src":"1265:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"1283:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1297:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4311,"name":"uint248","nodeType":"ElementaryTypeName","src":"1297:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1292:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1292:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1292:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1283:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1311:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1275:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"ExpressionStatement","src":"1275:78:22"},{"expression":{"arguments":[{"id":4321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"1378:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1370:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4319,"name":"uint248","nodeType":"ElementaryTypeName","src":"1370:7:22","typeDescriptions":{}}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1370:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4307,"id":4323,"nodeType":"Return","src":"1363:21:22"}]},"documentation":{"id":4301,"nodeType":"StructuredDocumentation","src":"876:318:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4325,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1208:9:22","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"value","nameLocation":"1226:5:22","nodeType":"VariableDeclaration","scope":4325,"src":"1218:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1217:15:22"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4325,"src":"1256:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4305,"name":"uint248","nodeType":"ElementaryTypeName","src":"1256:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1255:9:22"},"scope":6148,"src":"1199:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4349,"nodeType":"Block","src":"1786:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"1804:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1818:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4336,"name":"uint240","nodeType":"ElementaryTypeName","src":"1818:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1813:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1813:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1813:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1804:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1832:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1796:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1796:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4343,"nodeType":"ExpressionStatement","src":"1796:78:22"},{"expression":{"arguments":[{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"1899:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1891:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4344,"name":"uint240","nodeType":"ElementaryTypeName","src":"1891:7:22","typeDescriptions":{}}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1891:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4332,"id":4348,"nodeType":"Return","src":"1884:21:22"}]},"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"1397:318:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4350,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1729:9:22","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"value","nameLocation":"1747:5:22","nodeType":"VariableDeclaration","scope":4350,"src":"1739:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1738:15:22"},"returnParameters":{"id":4332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4350,"src":"1777:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4330,"name":"uint240","nodeType":"ElementaryTypeName","src":"1777:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1776:9:22"},"scope":6148,"src":"1720:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4374,"nodeType":"Block","src":"2307:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2325:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4361,"name":"uint232","nodeType":"ElementaryTypeName","src":"2339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2334:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2325:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4368,"nodeType":"ExpressionStatement","src":"2317:78:22"},{"expression":{"arguments":[{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2420:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2412:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4369,"name":"uint232","nodeType":"ElementaryTypeName","src":"2412:7:22","typeDescriptions":{}}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2412:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4357,"id":4373,"nodeType":"Return","src":"2405:21:22"}]},"documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"1918:318:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2250:9:22","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"value","nameLocation":"2268:5:22","nodeType":"VariableDeclaration","scope":4375,"src":"2260:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2259:15:22"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4375,"src":"2298:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4355,"name":"uint232","nodeType":"ElementaryTypeName","src":"2298:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2297:9:22"},"scope":6148,"src":"2241:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"2828:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"2846:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2860:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4386,"name":"uint224","nodeType":"ElementaryTypeName","src":"2860:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2855:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2846:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2874:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2838:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2838:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4393,"nodeType":"ExpressionStatement","src":"2838:78:22"},{"expression":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"2941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2933:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4394,"name":"uint224","nodeType":"ElementaryTypeName","src":"2933:7:22","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2933:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4382,"id":4398,"nodeType":"Return","src":"2926:21:22"}]},"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"2439:318:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2771:9:22","nodeType":"FunctionDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"value","nameLocation":"2789:5:22","nodeType":"VariableDeclaration","scope":4400,"src":"2781:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2781:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2780:15:22"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4400,"src":"2819:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4380,"name":"uint224","nodeType":"ElementaryTypeName","src":"2819:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2818:9:22"},"scope":6148,"src":"2762:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4424,"nodeType":"Block","src":"3349:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"3367:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3381:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4411,"name":"uint216","nodeType":"ElementaryTypeName","src":"3381:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3376:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3376:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3376:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3367:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3395:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3359:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3359:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4418,"nodeType":"ExpressionStatement","src":"3359:78:22"},{"expression":{"arguments":[{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"3462:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3454:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4419,"name":"uint216","nodeType":"ElementaryTypeName","src":"3454:7:22","typeDescriptions":{}}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3454:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4407,"id":4423,"nodeType":"Return","src":"3447:21:22"}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"2960:318:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3292:9:22","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"3310:5:22","nodeType":"VariableDeclaration","scope":4425,"src":"3302:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3301:15:22"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"3340:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4405,"name":"uint216","nodeType":"ElementaryTypeName","src":"3340:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3339:9:22"},"scope":6148,"src":"3283:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4449,"nodeType":"Block","src":"3870:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"3888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3902:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4436,"name":"uint208","nodeType":"ElementaryTypeName","src":"3902:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3897:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3897:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3897:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3888:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3916:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3880:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3880:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"ExpressionStatement","src":"3880:78:22"},{"expression":{"arguments":[{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"3983:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3975:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4444,"name":"uint208","nodeType":"ElementaryTypeName","src":"3975:7:22","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3975:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4432,"id":4448,"nodeType":"Return","src":"3968:21:22"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"3481:318:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4450,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3813:9:22","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"value","nameLocation":"3831:5:22","nodeType":"VariableDeclaration","scope":4450,"src":"3823:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3823:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3822:15:22"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4450,"src":"3861:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4430,"name":"uint208","nodeType":"ElementaryTypeName","src":"3861:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3860:9:22"},"scope":6148,"src":"3804:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"4391:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"4409:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4423:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4461,"name":"uint200","nodeType":"ElementaryTypeName","src":"4423:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4418:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4418:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4418:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4409:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4437:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4401:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4468,"nodeType":"ExpressionStatement","src":"4401:78:22"},{"expression":{"arguments":[{"id":4471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"4504:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4496:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4469,"name":"uint200","nodeType":"ElementaryTypeName","src":"4496:7:22","typeDescriptions":{}}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4496:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4457,"id":4473,"nodeType":"Return","src":"4489:21:22"}]},"documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"4002:318:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4334:9:22","nodeType":"FunctionDefinition","parameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"value","nameLocation":"4352:5:22","nodeType":"VariableDeclaration","scope":4475,"src":"4344:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4343:15:22"},"returnParameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4475,"src":"4382:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4455,"name":"uint200","nodeType":"ElementaryTypeName","src":"4382:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4381:9:22"},"scope":6148,"src":"4325:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"4912:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"4930:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4944:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4486,"name":"uint192","nodeType":"ElementaryTypeName","src":"4944:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4485,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4939:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4939:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4939:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4930:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4958:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4922:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4922:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4493,"nodeType":"ExpressionStatement","src":"4922:78:22"},{"expression":{"arguments":[{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"5025:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5017:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4494,"name":"uint192","nodeType":"ElementaryTypeName","src":"5017:7:22","typeDescriptions":{}}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5017:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4482,"id":4498,"nodeType":"Return","src":"5010:21:22"}]},"documentation":{"id":4476,"nodeType":"StructuredDocumentation","src":"4523:318:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4855:9:22","nodeType":"FunctionDefinition","parameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"value","nameLocation":"4873:5:22","nodeType":"VariableDeclaration","scope":4500,"src":"4865:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4864:15:22"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"4903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4480,"name":"uint192","nodeType":"ElementaryTypeName","src":"4903:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4902:9:22"},"scope":6148,"src":"4846:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"5433:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"5451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4511,"name":"uint184","nodeType":"ElementaryTypeName","src":"5465:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5460:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5460:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5460:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5451:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5443:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5443:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4518,"nodeType":"ExpressionStatement","src":"5443:78:22"},{"expression":{"arguments":[{"id":4521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"5546:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5538:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4519,"name":"uint184","nodeType":"ElementaryTypeName","src":"5538:7:22","typeDescriptions":{}}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5538:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4507,"id":4523,"nodeType":"Return","src":"5531:21:22"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"5044:318:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5376:9:22","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"value","nameLocation":"5394:5:22","nodeType":"VariableDeclaration","scope":4525,"src":"5386:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5386:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5385:15:22"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"5424:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4505,"name":"uint184","nodeType":"ElementaryTypeName","src":"5424:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5423:9:22"},"scope":6148,"src":"5367:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"5954:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"5972:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5986:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4536,"name":"uint176","nodeType":"ElementaryTypeName","src":"5986:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5981:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5981:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5981:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5972:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6000:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5964:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5964:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4543,"nodeType":"ExpressionStatement","src":"5964:78:22"},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"6067:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6059:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4544,"name":"uint176","nodeType":"ElementaryTypeName","src":"6059:7:22","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6059:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4532,"id":4548,"nodeType":"Return","src":"6052:21:22"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"5565:318:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5897:9:22","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"value","nameLocation":"5915:5:22","nodeType":"VariableDeclaration","scope":4550,"src":"5907:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5907:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5906:15:22"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"5945:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4530,"name":"uint176","nodeType":"ElementaryTypeName","src":"5945:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5944:9:22"},"scope":6148,"src":"5888:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"6475:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"6493:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6507:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4561,"name":"uint168","nodeType":"ElementaryTypeName","src":"6507:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6502:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6502:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6502:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6493:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6521:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6485:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6485:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4568,"nodeType":"ExpressionStatement","src":"6485:78:22"},{"expression":{"arguments":[{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"6588:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6580:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4569,"name":"uint168","nodeType":"ElementaryTypeName","src":"6580:7:22","typeDescriptions":{}}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6580:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4557,"id":4573,"nodeType":"Return","src":"6573:21:22"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"6086:318:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6418:9:22","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"6436:5:22","nodeType":"VariableDeclaration","scope":4575,"src":"6428:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6427:15:22"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4575,"src":"6466:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4555,"name":"uint168","nodeType":"ElementaryTypeName","src":"6466:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6465:9:22"},"scope":6148,"src":"6409:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"6996:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"7014:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7028:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4586,"name":"uint160","nodeType":"ElementaryTypeName","src":"7028:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7023:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7023:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7023:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7014:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7042:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7006:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7006:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4593,"nodeType":"ExpressionStatement","src":"7006:78:22"},{"expression":{"arguments":[{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"7109:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7101:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4594,"name":"uint160","nodeType":"ElementaryTypeName","src":"7101:7:22","typeDescriptions":{}}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7101:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4582,"id":4598,"nodeType":"Return","src":"7094:21:22"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"6607:318:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6939:9:22","nodeType":"FunctionDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"value","nameLocation":"6957:5:22","nodeType":"VariableDeclaration","scope":4600,"src":"6949:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6949:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6948:15:22"},"returnParameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"6987:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4580,"name":"uint160","nodeType":"ElementaryTypeName","src":"6987:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6986:9:22"},"scope":6148,"src":"6930:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4624,"nodeType":"Block","src":"7517:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"7535:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7549:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4611,"name":"uint152","nodeType":"ElementaryTypeName","src":"7549:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7544:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7544:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7535:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7563:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7527:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7527:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"7527:78:22"},{"expression":{"arguments":[{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"7630:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7622:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4619,"name":"uint152","nodeType":"ElementaryTypeName","src":"7622:7:22","typeDescriptions":{}}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4607,"id":4623,"nodeType":"Return","src":"7615:21:22"}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"7128:318:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7460:9:22","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"value","nameLocation":"7478:5:22","nodeType":"VariableDeclaration","scope":4625,"src":"7470:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7469:15:22"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4625,"src":"7508:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4605,"name":"uint152","nodeType":"ElementaryTypeName","src":"7508:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7507:9:22"},"scope":6148,"src":"7451:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4649,"nodeType":"Block","src":"8038:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8056:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8070:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4636,"name":"uint144","nodeType":"ElementaryTypeName","src":"8070:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8065:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8065:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8065:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8056:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8084:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8048:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8048:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"ExpressionStatement","src":"8048:78:22"},{"expression":{"arguments":[{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8151:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8143:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4644,"name":"uint144","nodeType":"ElementaryTypeName","src":"8143:7:22","typeDescriptions":{}}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8143:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4632,"id":4648,"nodeType":"Return","src":"8136:21:22"}]},"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"7649:318:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7981:9:22","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"value","nameLocation":"7999:5:22","nodeType":"VariableDeclaration","scope":4650,"src":"7991:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"7991:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7990:15:22"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4650,"src":"8029:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4630,"name":"uint144","nodeType":"ElementaryTypeName","src":"8029:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8028:9:22"},"scope":6148,"src":"7972:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4674,"nodeType":"Block","src":"8559:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"8577:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8591:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4661,"name":"uint136","nodeType":"ElementaryTypeName","src":"8591:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8586:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8586:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8586:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8577:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8605:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8569:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8569:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"ExpressionStatement","src":"8569:78:22"},{"expression":{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"8672:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8664:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4669,"name":"uint136","nodeType":"ElementaryTypeName","src":"8664:7:22","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8664:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4657,"id":4673,"nodeType":"Return","src":"8657:21:22"}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"8170:318:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8502:9:22","nodeType":"FunctionDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"value","nameLocation":"8520:5:22","nodeType":"VariableDeclaration","scope":4675,"src":"8512:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8511:15:22"},"returnParameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4675,"src":"8550:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4655,"name":"uint136","nodeType":"ElementaryTypeName","src":"8550:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8549:9:22"},"scope":6148,"src":"8493:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4699,"nodeType":"Block","src":"9080:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"9098:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9112:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4686,"name":"uint128","nodeType":"ElementaryTypeName","src":"9112:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9107:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9107:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9107:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9098:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9126:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9090:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9090:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4693,"nodeType":"ExpressionStatement","src":"9090:78:22"},{"expression":{"arguments":[{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"9193:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9185:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4694,"name":"uint128","nodeType":"ElementaryTypeName","src":"9185:7:22","typeDescriptions":{}}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9185:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4682,"id":4698,"nodeType":"Return","src":"9178:21:22"}]},"documentation":{"id":4676,"nodeType":"StructuredDocumentation","src":"8691:318:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9023:9:22","nodeType":"FunctionDefinition","parameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"value","nameLocation":"9041:5:22","nodeType":"VariableDeclaration","scope":4700,"src":"9033:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"9033:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9032:15:22"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"9071:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4680,"name":"uint128","nodeType":"ElementaryTypeName","src":"9071:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9070:9:22"},"scope":6148,"src":"9014:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"9601:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"9619:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9633:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4711,"name":"uint120","nodeType":"ElementaryTypeName","src":"9633:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9628:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9628:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9628:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9619:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9647:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9611:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9611:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4718,"nodeType":"ExpressionStatement","src":"9611:78:22"},{"expression":{"arguments":[{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"9714:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9706:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4719,"name":"uint120","nodeType":"ElementaryTypeName","src":"9706:7:22","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9706:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4707,"id":4723,"nodeType":"Return","src":"9699:21:22"}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"9212:318:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9544:9:22","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"value","nameLocation":"9562:5:22","nodeType":"VariableDeclaration","scope":4725,"src":"9554:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9553:15:22"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"9592:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4705,"name":"uint120","nodeType":"ElementaryTypeName","src":"9592:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9591:9:22"},"scope":6148,"src":"9535:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"10122:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"10140:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10154:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4736,"name":"uint112","nodeType":"ElementaryTypeName","src":"10154:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10149:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10149:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10149:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10140:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10168:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10132:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10132:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4743,"nodeType":"ExpressionStatement","src":"10132:78:22"},{"expression":{"arguments":[{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"10235:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10227:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4744,"name":"uint112","nodeType":"ElementaryTypeName","src":"10227:7:22","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10227:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4732,"id":4748,"nodeType":"Return","src":"10220:21:22"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"9733:318:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10065:9:22","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"10083:5:22","nodeType":"VariableDeclaration","scope":4750,"src":"10075:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"10075:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10074:15:22"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"10113:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4730,"name":"uint112","nodeType":"ElementaryTypeName","src":"10113:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10112:9:22"},"scope":6148,"src":"10056:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4774,"nodeType":"Block","src":"10643:126:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"10661:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10675:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4761,"name":"uint104","nodeType":"ElementaryTypeName","src":"10675:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10670:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10670:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10670:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10661:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10689:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10653:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10653:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4768,"nodeType":"ExpressionStatement","src":"10653:78:22"},{"expression":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"10756:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4769,"name":"uint104","nodeType":"ElementaryTypeName","src":"10748:7:22","typeDescriptions":{}}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10748:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4757,"id":4773,"nodeType":"Return","src":"10741:21:22"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"10254:318:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10586:9:22","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"value","nameLocation":"10604:5:22","nodeType":"VariableDeclaration","scope":4775,"src":"10596:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"10596:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10595:15:22"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"10634:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4755,"name":"uint104","nodeType":"ElementaryTypeName","src":"10634:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10633:9:22"},"scope":6148,"src":"10577:192:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"11158:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"11176:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11190:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4786,"name":"uint96","nodeType":"ElementaryTypeName","src":"11190:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4785,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11185:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11185:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11185:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11176:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11203:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11168:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11168:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"ExpressionStatement","src":"11168:76:22"},{"expression":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"11268:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11261:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4794,"name":"uint96","nodeType":"ElementaryTypeName","src":"11261:6:22","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11261:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4782,"id":4798,"nodeType":"Return","src":"11254:20:22"}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"10775:314:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11103:8:22","nodeType":"FunctionDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"value","nameLocation":"11120:5:22","nodeType":"VariableDeclaration","scope":4800,"src":"11112:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"11112:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11111:15:22"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4800,"src":"11150:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4780,"name":"uint96","nodeType":"ElementaryTypeName","src":"11150:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11149:8:22"},"scope":6148,"src":"11094:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"11670:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"11688:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11702:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4811,"name":"uint88","nodeType":"ElementaryTypeName","src":"11702:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11697:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11697:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11697:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11688:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11715:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11680:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11680:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4818,"nodeType":"ExpressionStatement","src":"11680:76:22"},{"expression":{"arguments":[{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"11780:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11773:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4819,"name":"uint88","nodeType":"ElementaryTypeName","src":"11773:6:22","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11773:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4807,"id":4823,"nodeType":"Return","src":"11766:20:22"}]},"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"11287:314:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11615:8:22","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"value","nameLocation":"11632:5:22","nodeType":"VariableDeclaration","scope":4825,"src":"11624:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"11624:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11623:15:22"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"11662:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4805,"name":"uint88","nodeType":"ElementaryTypeName","src":"11662:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11661:8:22"},"scope":6148,"src":"11606:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4849,"nodeType":"Block","src":"12182:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"12200:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12214:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4836,"name":"uint80","nodeType":"ElementaryTypeName","src":"12214:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12209:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12209:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12209:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12200:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12227:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12192:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12192:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"ExpressionStatement","src":"12192:76:22"},{"expression":{"arguments":[{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"12292:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12285:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4844,"name":"uint80","nodeType":"ElementaryTypeName","src":"12285:6:22","typeDescriptions":{}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12285:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4832,"id":4848,"nodeType":"Return","src":"12278:20:22"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"11799:314:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12127:8:22","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"12144:5:22","nodeType":"VariableDeclaration","scope":4850,"src":"12136:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12135:15:22"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4850,"src":"12174:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4830,"name":"uint80","nodeType":"ElementaryTypeName","src":"12174:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12173:8:22"},"scope":6148,"src":"12118:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"12694:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"12712:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12726:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4861,"name":"uint72","nodeType":"ElementaryTypeName","src":"12726:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12721:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12721:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12721:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12712:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12739:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12704:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12704:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4868,"nodeType":"ExpressionStatement","src":"12704:76:22"},{"expression":{"arguments":[{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"12804:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12797:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4869,"name":"uint72","nodeType":"ElementaryTypeName","src":"12797:6:22","typeDescriptions":{}}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12797:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4857,"id":4873,"nodeType":"Return","src":"12790:20:22"}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"12311:314:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12639:8:22","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"value","nameLocation":"12656:5:22","nodeType":"VariableDeclaration","scope":4875,"src":"12648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"12648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12647:15:22"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"12686:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4855,"name":"uint72","nodeType":"ElementaryTypeName","src":"12686:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12685:8:22"},"scope":6148,"src":"12630:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"13206:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"13224:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13238:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4886,"name":"uint64","nodeType":"ElementaryTypeName","src":"13238:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13233:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13233:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13233:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13224:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13251:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13216:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13216:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"13216:76:22"},{"expression":{"arguments":[{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"13316:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13309:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4894,"name":"uint64","nodeType":"ElementaryTypeName","src":"13309:6:22","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13309:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4882,"id":4898,"nodeType":"Return","src":"13302:20:22"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"12823:314:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13151:8:22","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"value","nameLocation":"13168:5:22","nodeType":"VariableDeclaration","scope":4900,"src":"13160:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"13160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13159:15:22"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4900,"src":"13198:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4880,"name":"uint64","nodeType":"ElementaryTypeName","src":"13198:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13197:8:22"},"scope":6148,"src":"13142:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4924,"nodeType":"Block","src":"13718:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"13736:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13750:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4911,"name":"uint56","nodeType":"ElementaryTypeName","src":"13750:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13745:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13745:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13745:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13736:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13763:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13728:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13728:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4918,"nodeType":"ExpressionStatement","src":"13728:76:22"},{"expression":{"arguments":[{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"13828:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13821:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4919,"name":"uint56","nodeType":"ElementaryTypeName","src":"13821:6:22","typeDescriptions":{}}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13821:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4907,"id":4923,"nodeType":"Return","src":"13814:20:22"}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"13335:314:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13663:8:22","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"13680:5:22","nodeType":"VariableDeclaration","scope":4925,"src":"13672:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"13672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13671:15:22"},"returnParameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4925,"src":"13710:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4905,"name":"uint56","nodeType":"ElementaryTypeName","src":"13710:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13709:8:22"},"scope":6148,"src":"13654:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"14230:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"14248:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14262:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4936,"name":"uint48","nodeType":"ElementaryTypeName","src":"14262:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14257:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14257:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14257:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14248:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14275:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14240:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14240:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4943,"nodeType":"ExpressionStatement","src":"14240:76:22"},{"expression":{"arguments":[{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"14340:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14333:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4944,"name":"uint48","nodeType":"ElementaryTypeName","src":"14333:6:22","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14333:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4932,"id":4948,"nodeType":"Return","src":"14326:20:22"}]},"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"13847:314:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14175:8:22","nodeType":"FunctionDefinition","parameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"value","nameLocation":"14192:5:22","nodeType":"VariableDeclaration","scope":4950,"src":"14184:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"14184:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14183:15:22"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"14222:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4930,"name":"uint48","nodeType":"ElementaryTypeName","src":"14222:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14221:8:22"},"scope":6148,"src":"14166:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4974,"nodeType":"Block","src":"14742:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"14760:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14774:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4961,"name":"uint40","nodeType":"ElementaryTypeName","src":"14774:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4960,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14769:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14769:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14769:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14760:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14787:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14752:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14752:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"ExpressionStatement","src":"14752:76:22"},{"expression":{"arguments":[{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"14852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14845:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4969,"name":"uint40","nodeType":"ElementaryTypeName","src":"14845:6:22","typeDescriptions":{}}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14845:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4957,"id":4973,"nodeType":"Return","src":"14838:20:22"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"14359:314:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14687:8:22","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"value","nameLocation":"14704:5:22","nodeType":"VariableDeclaration","scope":4975,"src":"14696:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14696:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14695:15:22"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"14734:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4955,"name":"uint40","nodeType":"ElementaryTypeName","src":"14734:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14733:8:22"},"scope":6148,"src":"14678:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4999,"nodeType":"Block","src":"15254:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"15272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15286:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4986,"name":"uint32","nodeType":"ElementaryTypeName","src":"15286:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15281:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15281:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15281:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15299:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15264:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15264:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4993,"nodeType":"ExpressionStatement","src":"15264:76:22"},{"expression":{"arguments":[{"id":4996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"15364:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15357:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4994,"name":"uint32","nodeType":"ElementaryTypeName","src":"15357:6:22","typeDescriptions":{}}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15357:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4982,"id":4998,"nodeType":"Return","src":"15350:20:22"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"14871:314:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5000,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15199:8:22","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"value","nameLocation":"15216:5:22","nodeType":"VariableDeclaration","scope":5000,"src":"15208:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"15208:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15207:15:22"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5000,"src":"15246:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4980,"name":"uint32","nodeType":"ElementaryTypeName","src":"15246:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15245:8:22"},"scope":6148,"src":"15190:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5024,"nodeType":"Block","src":"15766:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"15784:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15798:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5011,"name":"uint24","nodeType":"ElementaryTypeName","src":"15798:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5010,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15793:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15793:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15793:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15784:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15811:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15776:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15776:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"15776:76:22"},{"expression":{"arguments":[{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"15876:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15869:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5019,"name":"uint24","nodeType":"ElementaryTypeName","src":"15869:6:22","typeDescriptions":{}}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15869:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5007,"id":5023,"nodeType":"Return","src":"15862:20:22"}]},"documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"15383:314:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15711:8:22","nodeType":"FunctionDefinition","parameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"value","nameLocation":"15728:5:22","nodeType":"VariableDeclaration","scope":5025,"src":"15720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"15720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15719:15:22"},"returnParameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5025,"src":"15758:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5005,"name":"uint24","nodeType":"ElementaryTypeName","src":"15758:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15757:8:22"},"scope":6148,"src":"15702:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"16278:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"16296:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16310:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5036,"name":"uint16","nodeType":"ElementaryTypeName","src":"16310:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16305:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16305:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16305:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16296:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16323:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16288:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16288:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5043,"nodeType":"ExpressionStatement","src":"16288:76:22"},{"expression":{"arguments":[{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"16388:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16381:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5044,"name":"uint16","nodeType":"ElementaryTypeName","src":"16381:6:22","typeDescriptions":{}}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16381:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5032,"id":5048,"nodeType":"Return","src":"16374:20:22"}]},"documentation":{"id":5026,"nodeType":"StructuredDocumentation","src":"15895:314:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16223:8:22","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"value","nameLocation":"16240:5:22","nodeType":"VariableDeclaration","scope":5050,"src":"16232:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"16232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16231:15:22"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5050,"src":"16270:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5030,"name":"uint16","nodeType":"ElementaryTypeName","src":"16270:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16269:8:22"},"scope":6148,"src":"16214:187:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"16784:120:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"16802:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16816:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5061,"name":"uint8","nodeType":"ElementaryTypeName","src":"16816:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16811:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16811:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16811:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16802:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16828:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16794:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16794:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"ExpressionStatement","src":"16794:74:22"},{"expression":{"arguments":[{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"16891:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16885:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5069,"name":"uint8","nodeType":"ElementaryTypeName","src":"16885:5:22","typeDescriptions":{}}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5057,"id":5073,"nodeType":"Return","src":"16878:19:22"}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"16407:310:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16731:7:22","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"value","nameLocation":"16747:5:22","nodeType":"VariableDeclaration","scope":5075,"src":"16739:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"16739:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16738:15:22"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"16777:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5055,"name":"uint8","nodeType":"ElementaryTypeName","src":"16777:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16776:7:22"},"scope":6148,"src":"16722:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5095,"nodeType":"Block","src":"17178:103:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"17196:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17205:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17196:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17208:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17188:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17188:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5089,"nodeType":"ExpressionStatement","src":"17188:55:22"},{"expression":{"arguments":[{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"17268:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17260:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"17260:7:22","typeDescriptions":{}}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17260:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5082,"id":5094,"nodeType":"Return","src":"17253:21:22"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"16910:198:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17122:9:22","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"17139:5:22","nodeType":"VariableDeclaration","scope":5096,"src":"17132:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5077,"name":"int256","nodeType":"ElementaryTypeName","src":"17132:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17131:14:22"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5096,"src":"17169:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"17169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17168:9:22"},"scope":6148,"src":"17113:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5128,"nodeType":"Block","src":"17705:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"17723:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17737:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5107,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":5106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17732:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17732:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"17732:16:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17723:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"17752:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17766:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5114,"name":"int248","nodeType":"ElementaryTypeName","src":"17766:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":5113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17761:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17761:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"17761:16:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17752:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17723:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17779:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17715:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17715:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5122,"nodeType":"ExpressionStatement","src":"17715:106:22"},{"expression":{"arguments":[{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"17845:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17838:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5123,"name":"int248","nodeType":"ElementaryTypeName","src":"17838:6:22","typeDescriptions":{}}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17838:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":5103,"id":5127,"nodeType":"Return","src":"17831:20:22"}]},"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"17287:350:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17651:8:22","nodeType":"FunctionDefinition","parameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"value","nameLocation":"17667:5:22","nodeType":"VariableDeclaration","scope":5129,"src":"17660:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5098,"name":"int256","nodeType":"ElementaryTypeName","src":"17660:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17659:14:22"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5129,"src":"17697:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5101,"name":"int248","nodeType":"ElementaryTypeName","src":"17697:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17696:8:22"},"scope":6148,"src":"17642:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5161,"nodeType":"Block","src":"18282:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"18300:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18314:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5140,"name":"int240","nodeType":"ElementaryTypeName","src":"18314:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":5139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18309:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18309:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18309:16:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18300:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"18329:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18343:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5147,"name":"int240","nodeType":"ElementaryTypeName","src":"18343:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":5146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18338:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18338:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18338:16:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18329:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18300:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18356:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18292:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18292:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5155,"nodeType":"ExpressionStatement","src":"18292:106:22"},{"expression":{"arguments":[{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"18422:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18415:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5156,"name":"int240","nodeType":"ElementaryTypeName","src":"18415:6:22","typeDescriptions":{}}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18415:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":5136,"id":5160,"nodeType":"Return","src":"18408:20:22"}]},"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"17864:350:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18228:8:22","nodeType":"FunctionDefinition","parameters":{"id":5133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"value","nameLocation":"18244:5:22","nodeType":"VariableDeclaration","scope":5162,"src":"18237:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5131,"name":"int256","nodeType":"ElementaryTypeName","src":"18237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18236:14:22"},"returnParameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5162,"src":"18274:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5134,"name":"int240","nodeType":"ElementaryTypeName","src":"18274:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18273:8:22"},"scope":6148,"src":"18219:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5194,"nodeType":"Block","src":"18859:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"18877:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18891:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5173,"name":"int232","nodeType":"ElementaryTypeName","src":"18891:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18886:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18886:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18886:16:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18877:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"18906:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18920:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5180,"name":"int232","nodeType":"ElementaryTypeName","src":"18920:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":5179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18915:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18915:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18915:16:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18906:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18877:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18933:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18869:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18869:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5188,"nodeType":"ExpressionStatement","src":"18869:106:22"},{"expression":{"arguments":[{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"18999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18992:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5189,"name":"int232","nodeType":"ElementaryTypeName","src":"18992:6:22","typeDescriptions":{}}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18992:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":5169,"id":5193,"nodeType":"Return","src":"18985:20:22"}]},"documentation":{"id":5163,"nodeType":"StructuredDocumentation","src":"18441:350:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"value","nameLocation":"18821:5:22","nodeType":"VariableDeclaration","scope":5195,"src":"18814:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5164,"name":"int256","nodeType":"ElementaryTypeName","src":"18814:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18813:14:22"},"returnParameters":{"id":5169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5195,"src":"18851:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5167,"name":"int232","nodeType":"ElementaryTypeName","src":"18851:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18850:8:22"},"scope":6148,"src":"18796:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"19436:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"19454:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19468:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5206,"name":"int224","nodeType":"ElementaryTypeName","src":"19468:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":5205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19463:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19463:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"19463:16:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19454:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"19483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19497:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5213,"name":"int224","nodeType":"ElementaryTypeName","src":"19497:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":5212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19492:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19492:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"19492:16:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19483:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19454:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19510:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19446:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19446:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5221,"nodeType":"ExpressionStatement","src":"19446:106:22"},{"expression":{"arguments":[{"id":5224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"19576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19569:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5222,"name":"int224","nodeType":"ElementaryTypeName","src":"19569:6:22","typeDescriptions":{}}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19569:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":5202,"id":5226,"nodeType":"Return","src":"19562:20:22"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"19018:350:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19382:8:22","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"value","nameLocation":"19398:5:22","nodeType":"VariableDeclaration","scope":5228,"src":"19391:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5197,"name":"int256","nodeType":"ElementaryTypeName","src":"19391:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19390:14:22"},"returnParameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"19428:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5200,"name":"int224","nodeType":"ElementaryTypeName","src":"19428:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19427:8:22"},"scope":6148,"src":"19373:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5260,"nodeType":"Block","src":"20013:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"20031:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20045:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5239,"name":"int216","nodeType":"ElementaryTypeName","src":"20045:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":5238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20040:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20040:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20040:16:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20031:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"20060:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20074:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5246,"name":"int216","nodeType":"ElementaryTypeName","src":"20074:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":5245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20069:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20069:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20069:16:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20060:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20031:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20087:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20023:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20023:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5254,"nodeType":"ExpressionStatement","src":"20023:106:22"},{"expression":{"arguments":[{"id":5257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"20153:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20146:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5255,"name":"int216","nodeType":"ElementaryTypeName","src":"20146:6:22","typeDescriptions":{}}},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20146:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":5235,"id":5259,"nodeType":"Return","src":"20139:20:22"}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"19595:350:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5261,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19959:8:22","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"19975:5:22","nodeType":"VariableDeclaration","scope":5261,"src":"19968:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"19968:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19967:14:22"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5261,"src":"20005:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5233,"name":"int216","nodeType":"ElementaryTypeName","src":"20005:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20004:8:22"},"scope":6148,"src":"19950:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5293,"nodeType":"Block","src":"20590:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"20608:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20622:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5272,"name":"int208","nodeType":"ElementaryTypeName","src":"20622:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":5271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20617:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20617:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20617:16:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20608:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"20637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20651:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5279,"name":"int208","nodeType":"ElementaryTypeName","src":"20651:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":5278,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20646:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20646:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20646:16:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20637:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20608:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20664:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20600:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20600:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5287,"nodeType":"ExpressionStatement","src":"20600:106:22"},{"expression":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"20730:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20723:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5288,"name":"int208","nodeType":"ElementaryTypeName","src":"20723:6:22","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20723:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":5268,"id":5292,"nodeType":"Return","src":"20716:20:22"}]},"documentation":{"id":5262,"nodeType":"StructuredDocumentation","src":"20172:350:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20536:8:22","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"value","nameLocation":"20552:5:22","nodeType":"VariableDeclaration","scope":5294,"src":"20545:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5263,"name":"int256","nodeType":"ElementaryTypeName","src":"20545:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20544:14:22"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5294,"src":"20582:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5266,"name":"int208","nodeType":"ElementaryTypeName","src":"20582:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20581:8:22"},"scope":6148,"src":"20527:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"21167:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"21185:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21199:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5305,"name":"int200","nodeType":"ElementaryTypeName","src":"21199:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":5304,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21194:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21194:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21194:16:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21185:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"21214:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21228:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5312,"name":"int200","nodeType":"ElementaryTypeName","src":"21228:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":5311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21223:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21223:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21223:16:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21214:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21185:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21241:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21177:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21177:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5320,"nodeType":"ExpressionStatement","src":"21177:106:22"},{"expression":{"arguments":[{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"21307:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21300:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5321,"name":"int200","nodeType":"ElementaryTypeName","src":"21300:6:22","typeDescriptions":{}}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21300:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":5301,"id":5325,"nodeType":"Return","src":"21293:20:22"}]},"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"20749:350:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21113:8:22","nodeType":"FunctionDefinition","parameters":{"id":5298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"value","nameLocation":"21129:5:22","nodeType":"VariableDeclaration","scope":5327,"src":"21122:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5296,"name":"int256","nodeType":"ElementaryTypeName","src":"21122:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21121:14:22"},"returnParameters":{"id":5301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5327,"src":"21159:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5299,"name":"int200","nodeType":"ElementaryTypeName","src":"21159:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21158:8:22"},"scope":6148,"src":"21104:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5359,"nodeType":"Block","src":"21744:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"21762:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21776:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5338,"name":"int192","nodeType":"ElementaryTypeName","src":"21776:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":5337,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21771:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21771:16:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21762:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"21791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21805:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5345,"name":"int192","nodeType":"ElementaryTypeName","src":"21805:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":5344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21800:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21800:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21800:16:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21791:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21762:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21818:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21754:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21754:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"ExpressionStatement","src":"21754:106:22"},{"expression":{"arguments":[{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"21884:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21877:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5354,"name":"int192","nodeType":"ElementaryTypeName","src":"21877:6:22","typeDescriptions":{}}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21877:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":5334,"id":5358,"nodeType":"Return","src":"21870:20:22"}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"21326:350:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21690:8:22","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"21706:5:22","nodeType":"VariableDeclaration","scope":5360,"src":"21699:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5329,"name":"int256","nodeType":"ElementaryTypeName","src":"21699:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21698:14:22"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5360,"src":"21736:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5332,"name":"int192","nodeType":"ElementaryTypeName","src":"21736:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21735:8:22"},"scope":6148,"src":"21681:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5392,"nodeType":"Block","src":"22321:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"22339:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22353:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5371,"name":"int184","nodeType":"ElementaryTypeName","src":"22353:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":5370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22348:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22348:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22348:16:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22339:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"22368:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22382:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5378,"name":"int184","nodeType":"ElementaryTypeName","src":"22382:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":5377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22377:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22377:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22377:16:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22368:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22339:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22395:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22331:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22331:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"ExpressionStatement","src":"22331:106:22"},{"expression":{"arguments":[{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"22461:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22454:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5387,"name":"int184","nodeType":"ElementaryTypeName","src":"22454:6:22","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22454:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":5367,"id":5391,"nodeType":"Return","src":"22447:20:22"}]},"documentation":{"id":5361,"nodeType":"StructuredDocumentation","src":"21903:350:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5393,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22267:8:22","nodeType":"FunctionDefinition","parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"value","nameLocation":"22283:5:22","nodeType":"VariableDeclaration","scope":5393,"src":"22276:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5362,"name":"int256","nodeType":"ElementaryTypeName","src":"22276:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22275:14:22"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"22313:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5365,"name":"int184","nodeType":"ElementaryTypeName","src":"22313:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22312:8:22"},"scope":6148,"src":"22258:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"22898:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"22916:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22930:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5404,"name":"int176","nodeType":"ElementaryTypeName","src":"22930:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":5403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22925:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22925:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22925:16:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22916:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"22945:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22959:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5411,"name":"int176","nodeType":"ElementaryTypeName","src":"22959:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":5410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22954:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22954:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22954:16:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22945:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22916:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22972:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22908:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22908:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5419,"nodeType":"ExpressionStatement","src":"22908:106:22"},{"expression":{"arguments":[{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"23038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23031:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5420,"name":"int176","nodeType":"ElementaryTypeName","src":"23031:6:22","typeDescriptions":{}}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23031:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":5400,"id":5424,"nodeType":"Return","src":"23024:20:22"}]},"documentation":{"id":5394,"nodeType":"StructuredDocumentation","src":"22480:350:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22844:8:22","nodeType":"FunctionDefinition","parameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"value","nameLocation":"22860:5:22","nodeType":"VariableDeclaration","scope":5426,"src":"22853:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5395,"name":"int256","nodeType":"ElementaryTypeName","src":"22853:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22852:14:22"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"22890:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5398,"name":"int176","nodeType":"ElementaryTypeName","src":"22890:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22889:8:22"},"scope":6148,"src":"22835:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5458,"nodeType":"Block","src":"23475:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"23493:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23507:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5437,"name":"int168","nodeType":"ElementaryTypeName","src":"23507:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":5436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23502:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23502:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"23502:16:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23493:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"23522:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5444,"name":"int168","nodeType":"ElementaryTypeName","src":"23536:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":5443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23531:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23531:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"23531:16:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23522:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23493:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23549:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23485:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23485:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"ExpressionStatement","src":"23485:106:22"},{"expression":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"23615:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23608:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5453,"name":"int168","nodeType":"ElementaryTypeName","src":"23608:6:22","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23608:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":5433,"id":5457,"nodeType":"Return","src":"23601:20:22"}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"23057:350:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23421:8:22","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"23437:5:22","nodeType":"VariableDeclaration","scope":5459,"src":"23430:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5428,"name":"int256","nodeType":"ElementaryTypeName","src":"23430:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23429:14:22"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5459,"src":"23467:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5431,"name":"int168","nodeType":"ElementaryTypeName","src":"23467:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23466:8:22"},"scope":6148,"src":"23412:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5491,"nodeType":"Block","src":"24052:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"24070:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24084:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5470,"name":"int160","nodeType":"ElementaryTypeName","src":"24084:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":5469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24079:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24079:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24079:16:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24070:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"24099:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24113:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5477,"name":"int160","nodeType":"ElementaryTypeName","src":"24113:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":5476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24108:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24108:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24108:16:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24099:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24070:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24126:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24062:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24062:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5485,"nodeType":"ExpressionStatement","src":"24062:106:22"},{"expression":{"arguments":[{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"24192:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24185:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5486,"name":"int160","nodeType":"ElementaryTypeName","src":"24185:6:22","typeDescriptions":{}}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24185:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":5466,"id":5490,"nodeType":"Return","src":"24178:20:22"}]},"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"23634:350:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5492,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23998:8:22","nodeType":"FunctionDefinition","parameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"value","nameLocation":"24014:5:22","nodeType":"VariableDeclaration","scope":5492,"src":"24007:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5461,"name":"int256","nodeType":"ElementaryTypeName","src":"24007:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24006:14:22"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5492,"src":"24044:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5464,"name":"int160","nodeType":"ElementaryTypeName","src":"24044:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24043:8:22"},"scope":6148,"src":"23989:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5524,"nodeType":"Block","src":"24629:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"24647:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24661:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5503,"name":"int152","nodeType":"ElementaryTypeName","src":"24661:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":5502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24656:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24656:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24656:16:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24647:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"24676:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24690:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5510,"name":"int152","nodeType":"ElementaryTypeName","src":"24690:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":5509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24685:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24685:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24685:16:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24676:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24647:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24703:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24639:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24639:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"ExpressionStatement","src":"24639:106:22"},{"expression":{"arguments":[{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"24769:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24762:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5519,"name":"int152","nodeType":"ElementaryTypeName","src":"24762:6:22","typeDescriptions":{}}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24762:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":5499,"id":5523,"nodeType":"Return","src":"24755:20:22"}]},"documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"24211:350:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5525,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24575:8:22","nodeType":"FunctionDefinition","parameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"value","nameLocation":"24591:5:22","nodeType":"VariableDeclaration","scope":5525,"src":"24584:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5494,"name":"int256","nodeType":"ElementaryTypeName","src":"24584:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24583:14:22"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5525,"src":"24621:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5497,"name":"int152","nodeType":"ElementaryTypeName","src":"24621:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24620:8:22"},"scope":6148,"src":"24566:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5557,"nodeType":"Block","src":"25206:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"25224:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25238:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5536,"name":"int144","nodeType":"ElementaryTypeName","src":"25238:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":5535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25233:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25233:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25233:16:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25224:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"25253:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25267:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5543,"name":"int144","nodeType":"ElementaryTypeName","src":"25267:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":5542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25262:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25262:16:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25253:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25224:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25280:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25216:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25216:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5551,"nodeType":"ExpressionStatement","src":"25216:106:22"},{"expression":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"25346:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25339:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5552,"name":"int144","nodeType":"ElementaryTypeName","src":"25339:6:22","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25339:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":5532,"id":5556,"nodeType":"Return","src":"25332:20:22"}]},"documentation":{"id":5526,"nodeType":"StructuredDocumentation","src":"24788:350:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25152:8:22","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"value","nameLocation":"25168:5:22","nodeType":"VariableDeclaration","scope":5558,"src":"25161:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5527,"name":"int256","nodeType":"ElementaryTypeName","src":"25161:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25160:14:22"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5558,"src":"25198:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5530,"name":"int144","nodeType":"ElementaryTypeName","src":"25198:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25197:8:22"},"scope":6148,"src":"25143:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"25783:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"25801:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25815:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5569,"name":"int136","nodeType":"ElementaryTypeName","src":"25815:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":5568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25810:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25810:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25810:16:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25801:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"25830:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25844:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5576,"name":"int136","nodeType":"ElementaryTypeName","src":"25844:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":5575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25839:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25839:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25839:16:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25830:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25801:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25857:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25793:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25793:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5584,"nodeType":"ExpressionStatement","src":"25793:106:22"},{"expression":{"arguments":[{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"25923:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25916:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5585,"name":"int136","nodeType":"ElementaryTypeName","src":"25916:6:22","typeDescriptions":{}}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25916:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":5565,"id":5589,"nodeType":"Return","src":"25909:20:22"}]},"documentation":{"id":5559,"nodeType":"StructuredDocumentation","src":"25365:350:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25729:8:22","nodeType":"FunctionDefinition","parameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"value","nameLocation":"25745:5:22","nodeType":"VariableDeclaration","scope":5591,"src":"25738:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5560,"name":"int256","nodeType":"ElementaryTypeName","src":"25738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25737:14:22"},"returnParameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5591,"src":"25775:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5563,"name":"int136","nodeType":"ElementaryTypeName","src":"25775:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25774:8:22"},"scope":6148,"src":"25720:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"26360:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"26378:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26392:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5602,"name":"int128","nodeType":"ElementaryTypeName","src":"26392:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":5601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26387:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26387:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26387:16:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26378:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"26407:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26421:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5609,"name":"int128","nodeType":"ElementaryTypeName","src":"26421:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":5608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26416:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26416:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26416:16:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26407:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26378:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26434:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26370:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26370:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5617,"nodeType":"ExpressionStatement","src":"26370:106:22"},{"expression":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"26500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26493:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5618,"name":"int128","nodeType":"ElementaryTypeName","src":"26493:6:22","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26493:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":5598,"id":5622,"nodeType":"Return","src":"26486:20:22"}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"25942:350:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26306:8:22","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"26322:5:22","nodeType":"VariableDeclaration","scope":5624,"src":"26315:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"26315:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26314:14:22"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"26352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5596,"name":"int128","nodeType":"ElementaryTypeName","src":"26352:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26351:8:22"},"scope":6148,"src":"26297:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5656,"nodeType":"Block","src":"26937:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"26955:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26969:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5635,"name":"int120","nodeType":"ElementaryTypeName","src":"26969:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":5634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26964:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26964:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26964:16:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26955:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"26984:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26998:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5642,"name":"int120","nodeType":"ElementaryTypeName","src":"26998:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":5641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26993:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26993:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26993:16:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26984:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26955:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27011:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26947:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26947:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5650,"nodeType":"ExpressionStatement","src":"26947:106:22"},{"expression":{"arguments":[{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"27077:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27070:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5651,"name":"int120","nodeType":"ElementaryTypeName","src":"27070:6:22","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27070:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":5631,"id":5655,"nodeType":"Return","src":"27063:20:22"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"26519:350:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26883:8:22","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"26899:5:22","nodeType":"VariableDeclaration","scope":5657,"src":"26892:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5626,"name":"int256","nodeType":"ElementaryTypeName","src":"26892:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26891:14:22"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"26929:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5629,"name":"int120","nodeType":"ElementaryTypeName","src":"26929:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26928:8:22"},"scope":6148,"src":"26874:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5689,"nodeType":"Block","src":"27514:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"27532:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27546:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5668,"name":"int112","nodeType":"ElementaryTypeName","src":"27546:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":5667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27541:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27541:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"27541:16:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27532:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"27561:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27575:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5675,"name":"int112","nodeType":"ElementaryTypeName","src":"27575:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":5674,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27570:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27570:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"27570:16:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27561:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27532:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27588:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27524:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27524:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5683,"nodeType":"ExpressionStatement","src":"27524:106:22"},{"expression":{"arguments":[{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"27654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27647:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5684,"name":"int112","nodeType":"ElementaryTypeName","src":"27647:6:22","typeDescriptions":{}}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27647:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":5664,"id":5688,"nodeType":"Return","src":"27640:20:22"}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"27096:350:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5690,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27460:8:22","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"27476:5:22","nodeType":"VariableDeclaration","scope":5690,"src":"27469:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5659,"name":"int256","nodeType":"ElementaryTypeName","src":"27469:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27468:14:22"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5690,"src":"27506:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5662,"name":"int112","nodeType":"ElementaryTypeName","src":"27506:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27505:8:22"},"scope":6148,"src":"27451:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"28091:153:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"28109:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28123:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5701,"name":"int104","nodeType":"ElementaryTypeName","src":"28123:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":5700,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28118:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28118:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28118:16:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28109:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"28138:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28152:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5708,"name":"int104","nodeType":"ElementaryTypeName","src":"28152:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":5707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28147:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28147:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28147:16:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28138:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28109:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28165:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28101:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28101:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5716,"nodeType":"ExpressionStatement","src":"28101:106:22"},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"28231:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28224:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5717,"name":"int104","nodeType":"ElementaryTypeName","src":"28224:6:22","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28224:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":5697,"id":5721,"nodeType":"Return","src":"28217:20:22"}]},"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"27673:350:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28037:8:22","nodeType":"FunctionDefinition","parameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"value","nameLocation":"28053:5:22","nodeType":"VariableDeclaration","scope":5723,"src":"28046:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5692,"name":"int256","nodeType":"ElementaryTypeName","src":"28046:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28045:14:22"},"returnParameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"28083:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5695,"name":"int104","nodeType":"ElementaryTypeName","src":"28083:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28082:8:22"},"scope":6148,"src":"28028:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"28661:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"28679:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28693:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5734,"name":"int96","nodeType":"ElementaryTypeName","src":"28693:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":5733,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28688:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28688:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28688:15:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28679:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"28707:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28721:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5741,"name":"int96","nodeType":"ElementaryTypeName","src":"28721:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":5740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28716:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28716:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28716:15:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28707:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28679:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28733:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28671:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28671:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5749,"nodeType":"ExpressionStatement","src":"28671:103:22"},{"expression":{"arguments":[{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"28797:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28791:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5750,"name":"int96","nodeType":"ElementaryTypeName","src":"28791:5:22","typeDescriptions":{}}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28791:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":5730,"id":5754,"nodeType":"Return","src":"28784:19:22"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"28250:345:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28609:7:22","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"28624:5:22","nodeType":"VariableDeclaration","scope":5756,"src":"28617:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5725,"name":"int256","nodeType":"ElementaryTypeName","src":"28617:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28616:14:22"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5756,"src":"28654:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5728,"name":"int96","nodeType":"ElementaryTypeName","src":"28654:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28653:7:22"},"scope":6148,"src":"28600:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5788,"nodeType":"Block","src":"29227:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"29245:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29259:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5767,"name":"int88","nodeType":"ElementaryTypeName","src":"29259:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5766,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29254:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29254:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29254:15:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29245:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"29273:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29287:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5774,"name":"int88","nodeType":"ElementaryTypeName","src":"29287:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29282:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29282:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29282:15:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29273:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29245:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29299:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29237:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29237:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5782,"nodeType":"ExpressionStatement","src":"29237:103:22"},{"expression":{"arguments":[{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"29363:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29357:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5783,"name":"int88","nodeType":"ElementaryTypeName","src":"29357:5:22","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29357:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":5763,"id":5787,"nodeType":"Return","src":"29350:19:22"}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"28816:345:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5789,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29175:7:22","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"value","nameLocation":"29190:5:22","nodeType":"VariableDeclaration","scope":5789,"src":"29183:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5758,"name":"int256","nodeType":"ElementaryTypeName","src":"29183:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29182:14:22"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5789,"src":"29220:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5761,"name":"int88","nodeType":"ElementaryTypeName","src":"29220:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29219:7:22"},"scope":6148,"src":"29166:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5821,"nodeType":"Block","src":"29793:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"29811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29825:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5800,"name":"int80","nodeType":"ElementaryTypeName","src":"29825:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29820:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29820:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29820:15:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29811:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"29839:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29853:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5807,"name":"int80","nodeType":"ElementaryTypeName","src":"29853:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29848:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29848:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29848:15:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29839:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29811:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29865:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29803:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29803:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5815,"nodeType":"ExpressionStatement","src":"29803:103:22"},{"expression":{"arguments":[{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"29929:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29923:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5816,"name":"int80","nodeType":"ElementaryTypeName","src":"29923:5:22","typeDescriptions":{}}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29923:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":5796,"id":5820,"nodeType":"Return","src":"29916:19:22"}]},"documentation":{"id":5790,"nodeType":"StructuredDocumentation","src":"29382:345:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5822,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29741:7:22","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"value","nameLocation":"29756:5:22","nodeType":"VariableDeclaration","scope":5822,"src":"29749:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5791,"name":"int256","nodeType":"ElementaryTypeName","src":"29749:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29748:14:22"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5822,"src":"29786:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5794,"name":"int80","nodeType":"ElementaryTypeName","src":"29786:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29785:7:22"},"scope":6148,"src":"29732:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"30359:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"30377:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30391:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5833,"name":"int72","nodeType":"ElementaryTypeName","src":"30391:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30386:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30386:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30386:15:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30377:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"30405:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30419:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5840,"name":"int72","nodeType":"ElementaryTypeName","src":"30419:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30414:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30414:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30414:15:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30405:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30377:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30431:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30369:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30369:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5848,"nodeType":"ExpressionStatement","src":"30369:103:22"},{"expression":{"arguments":[{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"30495:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30489:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5849,"name":"int72","nodeType":"ElementaryTypeName","src":"30489:5:22","typeDescriptions":{}}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30489:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":5829,"id":5853,"nodeType":"Return","src":"30482:19:22"}]},"documentation":{"id":5823,"nodeType":"StructuredDocumentation","src":"29948:345:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30307:7:22","nodeType":"FunctionDefinition","parameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"value","nameLocation":"30322:5:22","nodeType":"VariableDeclaration","scope":5855,"src":"30315:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5824,"name":"int256","nodeType":"ElementaryTypeName","src":"30315:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30314:14:22"},"returnParameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5855,"src":"30352:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5827,"name":"int72","nodeType":"ElementaryTypeName","src":"30352:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30351:7:22"},"scope":6148,"src":"30298:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"30925:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"30943:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30957:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5866,"name":"int64","nodeType":"ElementaryTypeName","src":"30957:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5865,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30952:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30952:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30952:15:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30943:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"30971:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30985:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5873,"name":"int64","nodeType":"ElementaryTypeName","src":"30985:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30980:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30980:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30980:15:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30971:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30943:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30997:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30935:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30935:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5881,"nodeType":"ExpressionStatement","src":"30935:103:22"},{"expression":{"arguments":[{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"31061:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31055:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5882,"name":"int64","nodeType":"ElementaryTypeName","src":"31055:5:22","typeDescriptions":{}}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31055:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":5862,"id":5886,"nodeType":"Return","src":"31048:19:22"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"30514:345:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30873:7:22","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"30888:5:22","nodeType":"VariableDeclaration","scope":5888,"src":"30881:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5857,"name":"int256","nodeType":"ElementaryTypeName","src":"30881:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30880:14:22"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"30918:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5860,"name":"int64","nodeType":"ElementaryTypeName","src":"30918:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30917:7:22"},"scope":6148,"src":"30864:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5920,"nodeType":"Block","src":"31491:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"31509:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31523:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5899,"name":"int56","nodeType":"ElementaryTypeName","src":"31523:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5898,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31518:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31518:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"31518:15:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31509:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"31537:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31551:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5906,"name":"int56","nodeType":"ElementaryTypeName","src":"31551:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31546:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31546:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"31546:15:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31537:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31509:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31563:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31501:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31501:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5914,"nodeType":"ExpressionStatement","src":"31501:103:22"},{"expression":{"arguments":[{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"31627:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31621:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5915,"name":"int56","nodeType":"ElementaryTypeName","src":"31621:5:22","typeDescriptions":{}}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31621:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":5895,"id":5919,"nodeType":"Return","src":"31614:19:22"}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"31080:345:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31439:7:22","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"31454:5:22","nodeType":"VariableDeclaration","scope":5921,"src":"31447:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5890,"name":"int256","nodeType":"ElementaryTypeName","src":"31447:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31446:14:22"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5921,"src":"31484:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5893,"name":"int56","nodeType":"ElementaryTypeName","src":"31484:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31483:7:22"},"scope":6148,"src":"31430:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5953,"nodeType":"Block","src":"32057:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"32075:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32089:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5932,"name":"int48","nodeType":"ElementaryTypeName","src":"32089:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32084:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32084:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32084:15:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32075:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"32103:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32117:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5939,"name":"int48","nodeType":"ElementaryTypeName","src":"32117:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32112:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32112:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32112:15:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32103:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32075:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32129:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32067:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32067:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5947,"nodeType":"ExpressionStatement","src":"32067:103:22"},{"expression":{"arguments":[{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"32193:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32187:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5948,"name":"int48","nodeType":"ElementaryTypeName","src":"32187:5:22","typeDescriptions":{}}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32187:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":5928,"id":5952,"nodeType":"Return","src":"32180:19:22"}]},"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"31646:345:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"32005:7:22","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"32020:5:22","nodeType":"VariableDeclaration","scope":5954,"src":"32013:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5923,"name":"int256","nodeType":"ElementaryTypeName","src":"32013:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32012:14:22"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5954,"src":"32050:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5926,"name":"int48","nodeType":"ElementaryTypeName","src":"32050:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32049:7:22"},"scope":6148,"src":"31996:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"32623:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"32641:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32655:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5965,"name":"int40","nodeType":"ElementaryTypeName","src":"32655:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32650:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32650:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32650:15:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32641:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"32669:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32683:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5972,"name":"int40","nodeType":"ElementaryTypeName","src":"32683:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5971,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32678:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32678:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32678:15:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32669:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32641:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32695:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32633:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32633:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5980,"nodeType":"ExpressionStatement","src":"32633:103:22"},{"expression":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"32759:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32753:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5981,"name":"int40","nodeType":"ElementaryTypeName","src":"32753:5:22","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32753:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":5961,"id":5985,"nodeType":"Return","src":"32746:19:22"}]},"documentation":{"id":5955,"nodeType":"StructuredDocumentation","src":"32212:345:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32571:7:22","nodeType":"FunctionDefinition","parameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"value","nameLocation":"32586:5:22","nodeType":"VariableDeclaration","scope":5987,"src":"32579:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5956,"name":"int256","nodeType":"ElementaryTypeName","src":"32579:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32578:14:22"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5987,"src":"32616:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5959,"name":"int40","nodeType":"ElementaryTypeName","src":"32616:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32615:7:22"},"scope":6148,"src":"32562:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6019,"nodeType":"Block","src":"33189:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"33207:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33221:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5998,"name":"int32","nodeType":"ElementaryTypeName","src":"33221:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":5997,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33216:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33216:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33216:15:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33207:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"33235:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33249:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6005,"name":"int32","nodeType":"ElementaryTypeName","src":"33249:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":6004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33244:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33244:15:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33235:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33207:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33261:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33199:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33199:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6013,"nodeType":"ExpressionStatement","src":"33199:103:22"},{"expression":{"arguments":[{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"33325:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33319:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6014,"name":"int32","nodeType":"ElementaryTypeName","src":"33319:5:22","typeDescriptions":{}}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33319:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":5994,"id":6018,"nodeType":"Return","src":"33312:19:22"}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"32778:345:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":6020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33137:7:22","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"33152:5:22","nodeType":"VariableDeclaration","scope":6020,"src":"33145:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5989,"name":"int256","nodeType":"ElementaryTypeName","src":"33145:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33144:14:22"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6020,"src":"33182:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5992,"name":"int32","nodeType":"ElementaryTypeName","src":"33182:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33181:7:22"},"scope":6148,"src":"33128:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"33755:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"33773:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33787:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6031,"name":"int24","nodeType":"ElementaryTypeName","src":"33787:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":6030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33782:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33782:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33782:15:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33773:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"33801:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33815:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6038,"name":"int24","nodeType":"ElementaryTypeName","src":"33815:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":6037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33810:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33810:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33810:15:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33801:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33773:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33827:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33765:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33765:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6046,"nodeType":"ExpressionStatement","src":"33765:103:22"},{"expression":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"33891:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33885:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6047,"name":"int24","nodeType":"ElementaryTypeName","src":"33885:5:22","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33885:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":6027,"id":6051,"nodeType":"Return","src":"33878:19:22"}]},"documentation":{"id":6021,"nodeType":"StructuredDocumentation","src":"33344:345:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33703:7:22","nodeType":"FunctionDefinition","parameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"value","nameLocation":"33718:5:22","nodeType":"VariableDeclaration","scope":6053,"src":"33711:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6022,"name":"int256","nodeType":"ElementaryTypeName","src":"33711:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33710:14:22"},"returnParameters":{"id":6027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"33748:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6025,"name":"int24","nodeType":"ElementaryTypeName","src":"33748:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33747:7:22"},"scope":6148,"src":"33694:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"34321:149:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34339:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34353:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6064,"name":"int16","nodeType":"ElementaryTypeName","src":"34353:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":6063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34348:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34348:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34348:15:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34339:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34367:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34381:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6071,"name":"int16","nodeType":"ElementaryTypeName","src":"34381:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":6070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34376:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34376:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34376:15:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34367:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34339:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34393:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34331:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34331:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"ExpressionStatement","src":"34331:103:22"},{"expression":{"arguments":[{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34457:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34451:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6080,"name":"int16","nodeType":"ElementaryTypeName","src":"34451:5:22","typeDescriptions":{}}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34451:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":6060,"id":6084,"nodeType":"Return","src":"34444:19:22"}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"33910:345:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34269:7:22","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"34284:5:22","nodeType":"VariableDeclaration","scope":6086,"src":"34277:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6055,"name":"int256","nodeType":"ElementaryTypeName","src":"34277:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34276:14:22"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6086,"src":"34314:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6058,"name":"int16","nodeType":"ElementaryTypeName","src":"34314:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34313:7:22"},"scope":6148,"src":"34260:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6118,"nodeType":"Block","src":"34880:145:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"34898:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34912:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6097,"name":"int8","nodeType":"ElementaryTypeName","src":"34912:4:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34907:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34907:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34907:14:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34898:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"34925:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34939:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6104,"name":"int8","nodeType":"ElementaryTypeName","src":"34939:4:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":6103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34934:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34934:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34934:14:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34925:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34898:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34950:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34890:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34890:100:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"ExpressionStatement","src":"34890:100:22"},{"expression":{"arguments":[{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"35012:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35007:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6113,"name":"int8","nodeType":"ElementaryTypeName","src":"35007:4:22","typeDescriptions":{}}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35007:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":6093,"id":6117,"nodeType":"Return","src":"35000:18:22"}]},"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"34476:340:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":6119,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34830:6:22","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"value","nameLocation":"34844:5:22","nodeType":"VariableDeclaration","scope":6119,"src":"34837:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:14:22"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6119,"src":"34874:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6091,"name":"int8","nodeType":"ElementaryTypeName","src":"34874:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34873:6:22"},"scope":6148,"src":"34821:204:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"35303:233:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"35420:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6132,"name":"int256","nodeType":"ElementaryTypeName","src":"35442:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35437:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35437:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"35437:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35429:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"35429:7:22","typeDescriptions":{}}},"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35429:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35420:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35456:42:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":6127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35412:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35412:87:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"ExpressionStatement","src":"35412:87:22"},{"expression":{"arguments":[{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"35523:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35516:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6141,"name":"int256","nodeType":"ElementaryTypeName","src":"35516:6:22","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35516:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6126,"id":6145,"nodeType":"Return","src":"35509:20:22"}]},"documentation":{"id":6120,"nodeType":"StructuredDocumentation","src":"35031:203:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35248:8:22","nodeType":"FunctionDefinition","parameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6122,"mutability":"mutable","name":"value","nameLocation":"35265:5:22","nodeType":"VariableDeclaration","scope":6147,"src":"35257:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6121,"name":"uint256","nodeType":"ElementaryTypeName","src":"35257:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35256:15:22"},"returnParameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6147,"src":"35295:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6124,"name":"int256","nodeType":"ElementaryTypeName","src":"35295:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35294:8:22"},"scope":6148,"src":"35239:297:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6149,"src":"842:34696:22","usedErrors":[]}],"src":"107:35432:22"},"id":22},"contracts/VotingTokenX.sol":{"ast":{"absolutePath":"contracts/VotingTokenX.sol","exportedSymbols":{"AddressUpgradeable":[2853],"ContextUpgradeable":[2895],"CountersUpgradeable":[2969],"ECDSAUpgradeable":[3643],"EIP712Upgradeable":[3793],"ERC1967UpgradeUpgradeable":[588],"ERC20PermitUpgradeable":[2574],"ERC20Upgradeable":[1623],"ERC20VotesUpgradeable":[2358],"IBeaconUpgradeable":[598],"IERC1822ProxiableUpgradeable":[219],"IERC20MetadataUpgradeable":[2383],"IERC20PermitUpgradeable":[2610],"IERC20Upgradeable":[1701],"IVotesUpgradeable":[209],"Initializable":[749],"MathUpgradeable":[4297],"OwnableUpgradeable":[131],"PausableUpgradeable":[1012],"SafeCastUpgradeable":[6148],"StorageSlotUpgradeable":[3029],"StringsUpgradeable":[3255],"UUPSUpgradeable":[885],"VotingTokenX":[6327]},"id":6328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6150,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":6151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":1624,"src":"57:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":6152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":1013,"src":"136:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":6153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":132,"src":"215:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","id":6154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":2575,"src":"291:101:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","id":6155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":2359,"src":"393:94:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":750,"src":"488:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":6157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6328,"sourceUnit":886,"src":"564:77:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6158,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":749,"src":"668:13:23"},"id":6159,"nodeType":"InheritanceSpecifier","src":"668:13:23"},{"baseName":{"id":6160,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1623,"src":"683:16:23"},"id":6161,"nodeType":"InheritanceSpecifier","src":"683:16:23"},{"baseName":{"id":6162,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1012,"src":"701:19:23"},"id":6163,"nodeType":"InheritanceSpecifier","src":"701:19:23"},{"baseName":{"id":6164,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"722:18:23"},"id":6165,"nodeType":"InheritanceSpecifier","src":"722:18:23"},{"baseName":{"id":6166,"name":"ERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2574,"src":"742:22:23"},"id":6167,"nodeType":"InheritanceSpecifier","src":"742:22:23"},{"baseName":{"id":6168,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2358,"src":"766:21:23"},"id":6169,"nodeType":"InheritanceSpecifier","src":"766:21:23"},{"baseName":{"id":6170,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"789:15:23"},"id":6171,"nodeType":"InheritanceSpecifier","src":"789:15:23"}],"canonicalName":"VotingTokenX","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6327,"linearizedBaseContracts":[6327,885,588,219,2358,2574,3793,2610,131,1012,1623,2383,1701,2895,209,749],"name":"VotingTokenX","nameLocation":"652:12:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":6178,"nodeType":"Block","src":"878:39:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6175,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"888:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"888:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6177,"nodeType":"ExpressionStatement","src":"888:22:23"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"811:48:23","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":6179,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[],"src":"875:2:23"},"returnParameters":{"id":6174,"nodeType":"ParameterList","parameters":[],"src":"878:0:23"},"scope":6327,"src":"864:53:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6205,"nodeType":"Block","src":"964:212:23","statements":[{"expression":{"arguments":[{"hexValue":"566f74696e67546f6b656e58","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"987:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f0e691a06404333c91ba8af7d5f4dbd69998c0e1a7e83187ff8ad69134fb378","typeString":"literal_string \"VotingTokenX\""},"value":"VotingTokenX"},{"hexValue":"564f54","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1003:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f2d7f0656d3d086c0df2fce07be814c1e97448965b5b1fd6367061323fa9215","typeString":"literal_string \"VOT\""},"value":"VOT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5f0e691a06404333c91ba8af7d5f4dbd69998c0e1a7e83187ff8ad69134fb378","typeString":"literal_string \"VotingTokenX\""},{"typeIdentifier":"t_stringliteral_0f2d7f0656d3d086c0df2fce07be814c1e97448965b5b1fd6367061323fa9215","typeString":"literal_string \"VOT\""}],"id":6184,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"974:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"974:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"ExpressionStatement","src":"974:35:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6189,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1019:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1019:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6191,"nodeType":"ExpressionStatement","src":"1019:17:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6192,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1046:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1046:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"ExpressionStatement","src":"1046:16:23"},{"expression":{"arguments":[{"hexValue":"566f74696e67546f6b656e58","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1091:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f0e691a06404333c91ba8af7d5f4dbd69998c0e1a7e83187ff8ad69134fb378","typeString":"literal_string \"VotingTokenX\""},"value":"VotingTokenX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5f0e691a06404333c91ba8af7d5f4dbd69998c0e1a7e83187ff8ad69134fb378","typeString":"literal_string \"VotingTokenX\""}],"id":6195,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"1072:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1072:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6198,"nodeType":"ExpressionStatement","src":"1072:34:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6199,"name":"__ERC20Votes_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"1116:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1116:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6201,"nodeType":"ExpressionStatement","src":"1116:19:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6202,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"1145:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"ExpressionStatement","src":"1145:24:23"}]},"functionSelector":"8129fc1c","id":6206,"implemented":true,"kind":"function","modifiers":[{"id":6182,"kind":"modifierInvocation","modifierName":{"id":6181,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":669,"src":"945:11:23"},"nodeType":"ModifierInvocation","src":"945:11:23"}],"name":"initialize","nameLocation":"932:10:23","nodeType":"FunctionDefinition","parameters":{"id":6180,"nodeType":"ParameterList","parameters":[],"src":"942:2:23"},"returnParameters":{"id":6183,"nodeType":"ParameterList","parameters":[],"src":"964:0:23"},"scope":6327,"src":"923:253:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6214,"nodeType":"Block","src":"1216:25:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6211,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1226:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6213,"nodeType":"ExpressionStatement","src":"1226:8:23"}]},"functionSelector":"8456cb59","id":6215,"implemented":true,"kind":"function","modifiers":[{"id":6209,"kind":"modifierInvocation","modifierName":{"id":6208,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1206:9:23"},"nodeType":"ModifierInvocation","src":"1206:9:23"}],"name":"pause","nameLocation":"1191:5:23","nodeType":"FunctionDefinition","parameters":{"id":6207,"nodeType":"ParameterList","parameters":[],"src":"1196:2:23"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[],"src":"1216:0:23"},"scope":6327,"src":"1182:59:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6223,"nodeType":"Block","src":"1283:27:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6220,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1293:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1293:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6222,"nodeType":"ExpressionStatement","src":"1293:10:23"}]},"functionSelector":"3f4ba83a","id":6224,"implemented":true,"kind":"function","modifiers":[{"id":6218,"kind":"modifierInvocation","modifierName":{"id":6217,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1273:9:23"},"nodeType":"ModifierInvocation","src":"1273:9:23"}],"name":"unpause","nameLocation":"1256:7:23","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[],"src":"1263:2:23"},"returnParameters":{"id":6219,"nodeType":"ParameterList","parameters":[],"src":"1283:0:23"},"scope":6327,"src":"1247:63:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6238,"nodeType":"Block","src":"1375:34:23","statements":[{"expression":{"arguments":[{"id":6234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"1391:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"1395:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6233,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6308],"referencedDeclaration":6308,"src":"1385:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6237,"nodeType":"ExpressionStatement","src":"1385:17:23"}]},"functionSelector":"40c10f19","id":6239,"implemented":true,"kind":"function","modifiers":[{"id":6231,"kind":"modifierInvocation","modifierName":{"id":6230,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1365:9:23"},"nodeType":"ModifierInvocation","src":"1365:9:23"}],"name":"mint","nameLocation":"1325:4:23","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6226,"mutability":"mutable","name":"to","nameLocation":"1338:2:23","nodeType":"VariableDeclaration","scope":6239,"src":"1330:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6225,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6228,"mutability":"mutable","name":"amount","nameLocation":"1350:6:23","nodeType":"VariableDeclaration","scope":6239,"src":"1342:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:28:23"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[],"src":"1375:0:23"},"scope":6327,"src":"1316:93:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1606],"body":{"id":6259,"nodeType":"Block","src":"1547:61:23","statements":[{"expression":{"arguments":[{"id":6254,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"1584:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"1590:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6256,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"1594:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6251,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1557:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VotingTokenX_$6327_$","typeString":"type(contract super VotingTokenX)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"1557:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1557:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"ExpressionStatement","src":"1557:44:23"}]},"id":6260,"implemented":true,"kind":"function","modifiers":[{"id":6248,"kind":"modifierInvocation","modifierName":{"id":6247,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":934,"src":"1512:13:23"},"nodeType":"ModifierInvocation","src":"1512:13:23"}],"name":"_beforeTokenTransfer","nameLocation":"1424:20:23","nodeType":"FunctionDefinition","overrides":{"id":6249,"nodeType":"OverrideSpecifier","overrides":[],"src":"1534:8:23"},"parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"from","nameLocation":"1453:4:23","nodeType":"VariableDeclaration","scope":6260,"src":"1445:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6240,"name":"address","nodeType":"ElementaryTypeName","src":"1445:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"to","nameLocation":"1467:2:23","nodeType":"VariableDeclaration","scope":6260,"src":"1459:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6242,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6245,"mutability":"mutable","name":"amount","nameLocation":"1479:6:23","nodeType":"VariableDeclaration","scope":6260,"src":"1471:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1444:42:23"},"returnParameters":{"id":6250,"nodeType":"ParameterList","parameters":[],"src":"1547:0:23"},"scope":6327,"src":"1415:193:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[879],"body":{"id":6268,"nodeType":"Block","src":"1724:2:23","statements":[]},"id":6269,"implemented":true,"kind":"function","modifiers":[{"id":6265,"kind":"modifierInvocation","modifierName":{"id":6264,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1693:9:23"},"nodeType":"ModifierInvocation","src":"1693:9:23"}],"name":"_authorizeUpgrade","nameLocation":"1623:17:23","nodeType":"FunctionDefinition","overrides":{"id":6266,"nodeType":"OverrideSpecifier","overrides":[],"src":"1711:8:23"},"parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"newImplementation","nameLocation":"1649:17:23","nodeType":"VariableDeclaration","scope":6269,"src":"1641:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6261,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1640:27:23"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[],"src":"1724:0:23"},"scope":6327,"src":"1614:112:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1617,2120],"body":{"id":6289,"nodeType":"Block","src":"1950:60:23","statements":[{"expression":{"arguments":[{"id":6284,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"1986:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6285,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"1992:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"1996:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6281,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1960:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VotingTokenX_$6327_$","typeString":"type(contract super VotingTokenX)"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2120,"src":"1960:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1960:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6288,"nodeType":"ExpressionStatement","src":"1960:43:23"}]},"id":6290,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"1809:19:23","nodeType":"FunctionDefinition","overrides":{"id":6279,"nodeType":"OverrideSpecifier","overrides":[{"id":6277,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1623,"src":"1905:16:23"},{"id":6278,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2358,"src":"1923:21:23"}],"src":"1896:49:23"},"parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"from","nameLocation":"1837:4:23","nodeType":"VariableDeclaration","scope":6290,"src":"1829:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6270,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6273,"mutability":"mutable","name":"to","nameLocation":"1851:2:23","nodeType":"VariableDeclaration","scope":6290,"src":"1843:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6272,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"amount","nameLocation":"1863:6:23","nodeType":"VariableDeclaration","scope":6290,"src":"1855:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1828:42:23"},"returnParameters":{"id":6280,"nodeType":"ParameterList","parameters":[],"src":"1950:0:23"},"scope":6327,"src":"1800:210:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1435,2067],"body":{"id":6307,"nodeType":"Block","src":"2138:40:23","statements":[{"expression":{"arguments":[{"id":6303,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"2160:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"2164:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6300,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2148:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VotingTokenX_$6327_$","typeString":"type(contract super VotingTokenX)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"2148:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2148:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6306,"nodeType":"ExpressionStatement","src":"2148:23:23"}]},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2025:5:23","nodeType":"FunctionDefinition","overrides":{"id":6298,"nodeType":"OverrideSpecifier","overrides":[{"id":6296,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1623,"src":"2093:16:23"},{"id":6297,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2358,"src":"2111:21:23"}],"src":"2084:49:23"},"parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"to","nameLocation":"2039:2:23","nodeType":"VariableDeclaration","scope":6308,"src":"2031:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6291,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"amount","nameLocation":"2051:6:23","nodeType":"VariableDeclaration","scope":6308,"src":"2043:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2030:28:23"},"returnParameters":{"id":6299,"nodeType":"ParameterList","parameters":[],"src":"2138:0:23"},"scope":6327,"src":"2016:162:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1507,2090],"body":{"id":6325,"nodeType":"Block","src":"2311:45:23","statements":[{"expression":{"arguments":[{"id":6321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"2333:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"2342:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6318,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VotingTokenX_$6327_$","typeString":"type(contract super VotingTokenX)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2090,"src":"2321:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"ExpressionStatement","src":"2321:28:23"}]},"id":6326,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2193:5:23","nodeType":"FunctionDefinition","overrides":{"id":6316,"nodeType":"OverrideSpecifier","overrides":[{"id":6314,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1623,"src":"2266:16:23"},{"id":6315,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2358,"src":"2284:21:23"}],"src":"2257:49:23"},"parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"account","nameLocation":"2207:7:23","nodeType":"VariableDeclaration","scope":6326,"src":"2199:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6309,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6312,"mutability":"mutable","name":"amount","nameLocation":"2224:6:23","nodeType":"VariableDeclaration","scope":6326,"src":"2216:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2216:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2198:33:23"},"returnParameters":{"id":6317,"nodeType":"ParameterList","parameters":[],"src":"2311:0:23"},"scope":6327,"src":"2184:172:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6328,"src":"643:1715:23","usedErrors":[]}],"src":"32:2327:23"},"id":23}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"IVotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":\"IVotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":587,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":587,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":884,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":906,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1011,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061126c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b26565b60405180910390f35b6100e660048036038101906100e19190610be1565b610308565b6040516100f39190610c3c565b60405180910390f35b61010461032b565b6040516101119190610c66565b60405180910390f35b610134600480360381019061012f9190610c81565b610335565b6040516101419190610c3c565b60405180910390f35b610152610364565b60405161015f9190610cf0565b60405180910390f35b610182600480360381019061017d9190610be1565b61036d565b60405161018f9190610c3c565b60405180910390f35b6101b260048036038101906101ad9190610d0b565b6103a4565b6040516101bf9190610c66565b60405180910390f35b6101d06103ed565b6040516101dd9190610b26565b60405180910390f35b61020060048036038101906101fb9190610be1565b61047f565b60405161020d9190610c3c565b60405180910390f35b610230600480360381019061022b9190610be1565b6104f6565b60405161023d9190610c3c565b60405180910390f35b610260600480360381019061025b9190610d38565b610519565b60405161026d9190610c66565b60405180910390f35b60606036805461028590610da7565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610da7565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e08565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610da7565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610da7565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ed0565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610f62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610ff4565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610c66565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290611060565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610866906110f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690611184565b60405180910390fd5b6108ea838383610a83565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890611216565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a069190610e08565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6a9190610c66565b60405180910390a3610a7d848484610a88565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac7578082015181840152602081019050610aac565b83811115610ad6576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af882610a8d565b610b028185610a98565b9350610b12818560208601610aa9565b610b1b81610adc565b840191505092915050565b60006020820190508181036000830152610b408184610aed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7882610b4d565b9050919050565b610b8881610b6d565b8114610b9357600080fd5b50565b600081359050610ba581610b7f565b92915050565b6000819050919050565b610bbe81610bab565b8114610bc957600080fd5b50565b600081359050610bdb81610bb5565b92915050565b60008060408385031215610bf857610bf7610b48565b5b6000610c0685828601610b96565b9250506020610c1785828601610bcc565b9150509250929050565b60008115159050919050565b610c3681610c21565b82525050565b6000602082019050610c516000830184610c2d565b92915050565b610c6081610bab565b82525050565b6000602082019050610c7b6000830184610c57565b92915050565b600080600060608486031215610c9a57610c99610b48565b5b6000610ca886828701610b96565b9350506020610cb986828701610b96565b9250506040610cca86828701610bcc565b9150509250925092565b600060ff82169050919050565b610cea81610cd4565b82525050565b6000602082019050610d056000830184610ce1565b92915050565b600060208284031215610d2157610d20610b48565b5b6000610d2f84828501610b96565b91505092915050565b60008060408385031215610d4f57610d4e610b48565b5b6000610d5d85828601610b96565b9250506020610d6e85828601610b96565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dbf57607f821691505b60208210811415610dd357610dd2610d78565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e1382610bab565b9150610e1e83610bab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5357610e52610dd9565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eba602583610a98565b9150610ec582610e5e565b604082019050919050565b60006020820190508181036000830152610ee981610ead565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f4c602483610a98565b9150610f5782610ef0565b604082019050919050565b60006020820190508181036000830152610f7b81610f3f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fde602283610a98565b9150610fe982610f82565b604082019050919050565b6000602082019050818103600083015261100d81610fd1565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061104a601d83610a98565b915061105582611014565b602082019050919050565b600060208201905081810360008301526110798161103d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110dc602583610a98565b91506110e782611080565b604082019050919050565b6000602082019050818103600083015261110b816110cf565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061116e602383610a98565b915061117982611112565b604082019050919050565b6000602082019050818103600083015261119d81611161565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611200602683610a98565b915061120b826111a4565b604082019050919050565b6000602082019050818103600083015261122f816111f3565b905091905056fea264697066735822122034a433546e704d82464f0028484382589c9c9bcadc62dea7c7436f31bb8f683a64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA7D DUP5 DUP5 DUP5 PUSH2 0xA88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAAC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP3 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0xB02 DUP2 DUP6 PUSH2 0xA98 JUMP JUMPDEST SWAP4 POP PUSH2 0xB12 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0xADC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB40 DUP2 DUP5 PUSH2 0xAED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB78 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB88 DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP2 EQ PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA5 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP2 EQ PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDB DUP2 PUSH2 0xBB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC17 DUP6 DUP3 DUP7 ADD PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9A JUMPI PUSH2 0xC99 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCA DUP7 DUP3 DUP8 ADD PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEA DUP2 PUSH2 0xCD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD21 JUMPI PUSH2 0xD20 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2F DUP5 DUP3 DUP6 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6E DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDBF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE13 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP PUSH2 0xE1E DUP4 PUSH2 0xBAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xE52 PUSH2 0xDD9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBA PUSH1 0x25 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC5 DUP3 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE9 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C PUSH1 0x24 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP3 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDE PUSH1 0x22 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE9 DUP3 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A PUSH1 0x1D DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1079 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DC PUSH1 0x25 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E7 DUP3 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x110B DUP2 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116E PUSH1 0x23 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1179 DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x119D DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 PUSH1 0x26 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x120B DUP3 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122F DUP2 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE LOG4 CALLER SLOAD PUSH15 0x704D82464F0028484382589C9C9BCA 0xDC PUSH3 0xDEA7C7 NUMBER PUSH16 0x31BB8F683A64736F6C63430008090033 ","sourceMap":"1482:11763:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1617":{"entryPoint":2696,"id":1617,"parameterSlots":3,"returnSlots":0},"@_approve_1552":{"entryPoint":1448,"id":1552,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1606":{"entryPoint":2691,"id":1606,"parameterSlots":3,"returnSlots":0},"@_msgSender_2880":{"entryPoint":1440,"id":2880,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1595":{"entryPoint":1907,"id":1595,"parameterSlots":3,"returnSlots":0},"@_transfer_1379":{"entryPoint":2047,"id":1379,"parameterSlots":3,"returnSlots":0},"@allowance_1174":{"entryPoint":1305,"id":1174,"parameterSlots":2,"returnSlots":1},"@approve_1199":{"entryPoint":776,"id":1199,"parameterSlots":2,"returnSlots":1},"@balanceOf_1131":{"entryPoint":932,"id":1131,"parameterSlots":1,"returnSlots":1},"@decimals_1107":{"entryPoint":868,"id":1107,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1302":{"entryPoint":1151,"id":1302,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1261":{"entryPoint":877,"id":1261,"parameterSlots":2,"returnSlots":1},"@name_1087":{"entryPoint":630,"id":1087,"parameterSlots":0,"returnSlots":1},"@symbol_1097":{"entryPoint":1005,"id":1097,"parameterSlots":0,"returnSlots":1},"@totalSupply_1117":{"entryPoint":811,"id":1117,"parameterSlots":0,"returnSlots":1},"@transferFrom_1232":{"entryPoint":821,"id":1232,"parameterSlots":3,"returnSlots":1},"@transfer_1156":{"entryPoint":1270,"id":1156,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3384,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3201,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3041,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3117,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4595,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3757,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3159,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3297,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3792,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3312,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2701,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2712,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3592,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2925,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3105,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2893,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2987,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3284,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2729,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3495,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2888,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2780,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4370,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3970,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4116,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4516,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4224,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3824,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3678,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2943,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2997,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:24","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:24","statements":[{"nodeType":"YulAssignment","src":"77:22:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:24"},"nodeType":"YulFunctionCall","src":"87:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:24","type":""}],"src":"7:99:24"},{"body":{"nodeType":"YulBlock","src":"208:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:24"},"nodeType":"YulFunctionCall","src":"218:19:24"},"nodeType":"YulExpressionStatement","src":"218:19:24"},{"nodeType":"YulAssignment","src":"246:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:24"},"nodeType":"YulFunctionCall","src":"261:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:24","type":""}],"src":"112:169:24"},{"body":{"nodeType":"YulBlock","src":"336:258:24","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:24"},"nodeType":"YulFunctionCall","src":"436:11:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:24"},"nodeType":"YulFunctionCall","src":"455:11:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:24"},"nodeType":"YulFunctionCall","src":"449:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:24"},"nodeType":"YulFunctionCall","src":"429:39:24"},"nodeType":"YulExpressionStatement","src":"429:39:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:24"},"nodeType":"YulFunctionCall","src":"373:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:24","statements":[{"nodeType":"YulAssignment","src":"389:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:24"},"nodeType":"YulFunctionCall","src":"394:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:24","statements":[]},"src":"365:113:24"},{"body":{"nodeType":"YulBlock","src":"512:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:24"},"nodeType":"YulFunctionCall","src":"558:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:24"},"nodeType":"YulFunctionCall","src":"551:27:24"},"nodeType":"YulExpressionStatement","src":"551:27:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:24"},"nodeType":"YulFunctionCall","src":"490:13:24"},"nodeType":"YulIf","src":"487:101:24"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:24","type":""}],"src":"287:307:24"},{"body":{"nodeType":"YulBlock","src":"648:54:24","statements":[{"nodeType":"YulAssignment","src":"658:38:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:24"},"nodeType":"YulFunctionCall","src":"672:14:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:24"},"nodeType":"YulFunctionCall","src":"688:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:24"},"nodeType":"YulFunctionCall","src":"668:28:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:24"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:24","type":""}],"src":"600:102:24"},{"body":{"nodeType":"YulBlock","src":"800:272:24","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:24"},"nodeType":"YulFunctionCall","src":"824:39:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:24","type":""}]},{"nodeType":"YulAssignment","src":"872:78:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:24"},"nodeType":"YulFunctionCall","src":"879:71:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:24"},"nodeType":"YulFunctionCall","src":"981:16:24"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:24"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:24"},"nodeType":"YulFunctionCall","src":"959:52:24"},"nodeType":"YulExpressionStatement","src":"959:52:24"},{"nodeType":"YulAssignment","src":"1020:46:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:24"},"nodeType":"YulFunctionCall","src":"1036:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:24"},"nodeType":"YulFunctionCall","src":"1027:39:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:24","type":""}],"src":"708:364:24"},{"body":{"nodeType":"YulBlock","src":"1196:195:24","statements":[{"nodeType":"YulAssignment","src":"1206:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:24"},"nodeType":"YulFunctionCall","src":"1214:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:24"},"nodeType":"YulFunctionCall","src":"1249:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:24"},"nodeType":"YulFunctionCall","src":"1268:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:24"},"nodeType":"YulFunctionCall","src":"1242:47:24"},"nodeType":"YulExpressionStatement","src":"1242:47:24"},{"nodeType":"YulAssignment","src":"1298:86:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:24"},"nodeType":"YulFunctionCall","src":"1306:78:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:24","type":""}],"src":"1078:313:24"},{"body":{"nodeType":"YulBlock","src":"1437:35:24","statements":[{"nodeType":"YulAssignment","src":"1447:19:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:24"},"nodeType":"YulFunctionCall","src":"1457:9:24"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:24"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:24","type":""}],"src":"1397:75:24"},{"body":{"nodeType":"YulBlock","src":"1567:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:24"},"nodeType":"YulFunctionCall","src":"1577:12:24"},"nodeType":"YulExpressionStatement","src":"1577:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:24"},{"body":{"nodeType":"YulBlock","src":"1690:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:24"},"nodeType":"YulFunctionCall","src":"1700:12:24"},"nodeType":"YulExpressionStatement","src":"1700:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:24"},{"body":{"nodeType":"YulBlock","src":"1769:81:24","statements":[{"nodeType":"YulAssignment","src":"1779:65:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:24"},"nodeType":"YulFunctionCall","src":"1790:54:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:24"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:24","type":""}],"src":"1724:126:24"},{"body":{"nodeType":"YulBlock","src":"1901:51:24","statements":[{"nodeType":"YulAssignment","src":"1911:35:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:24"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:24"},"nodeType":"YulFunctionCall","src":"1922:24:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:24"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:24","type":""}],"src":"1856:96:24"},{"body":{"nodeType":"YulBlock","src":"2001:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:24"},"nodeType":"YulFunctionCall","src":"2060:12:24"},"nodeType":"YulExpressionStatement","src":"2060:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:24"},"nodeType":"YulFunctionCall","src":"2031:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:24"},"nodeType":"YulFunctionCall","src":"2021:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:24"},"nodeType":"YulFunctionCall","src":"2014:43:24"},"nodeType":"YulIf","src":"2011:63:24"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:24","type":""}],"src":"1958:122:24"},{"body":{"nodeType":"YulBlock","src":"2138:87:24","statements":[{"nodeType":"YulAssignment","src":"2148:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:24"},"nodeType":"YulFunctionCall","src":"2157:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:24"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:24"},"nodeType":"YulFunctionCall","src":"2186:33:24"},"nodeType":"YulExpressionStatement","src":"2186:33:24"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:24","type":""}],"src":"2086:139:24"},{"body":{"nodeType":"YulBlock","src":"2276:32:24","statements":[{"nodeType":"YulAssignment","src":"2286:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:24"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:24","type":""}],"src":"2231:77:24"},{"body":{"nodeType":"YulBlock","src":"2357:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:24"},"nodeType":"YulFunctionCall","src":"2416:12:24"},"nodeType":"YulExpressionStatement","src":"2416:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:24"},"nodeType":"YulFunctionCall","src":"2387:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:24"},"nodeType":"YulFunctionCall","src":"2377:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:24"},"nodeType":"YulFunctionCall","src":"2370:43:24"},"nodeType":"YulIf","src":"2367:63:24"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:24","type":""}],"src":"2314:122:24"},{"body":{"nodeType":"YulBlock","src":"2494:87:24","statements":[{"nodeType":"YulAssignment","src":"2504:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:24"},"nodeType":"YulFunctionCall","src":"2513:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:24"},"nodeType":"YulFunctionCall","src":"2542:33:24"},"nodeType":"YulExpressionStatement","src":"2542:33:24"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:24","type":""}],"src":"2442:139:24"},{"body":{"nodeType":"YulBlock","src":"2670:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:24"},"nodeType":"YulFunctionCall","src":"2718:79:24"},"nodeType":"YulExpressionStatement","src":"2718:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:24"},"nodeType":"YulFunctionCall","src":"2687:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:24"},"nodeType":"YulFunctionCall","src":"2683:32:24"},"nodeType":"YulIf","src":"2680:119:24"},{"nodeType":"YulBlock","src":"2809:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:24"},"nodeType":"YulFunctionCall","src":"2884:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:24"},"nodeType":"YulFunctionCall","src":"2863:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:24"}]}]},{"nodeType":"YulBlock","src":"2936:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:24"},"nodeType":"YulFunctionCall","src":"3012:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:24"},"nodeType":"YulFunctionCall","src":"2991:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:24","type":""}],"src":"2587:474:24"},{"body":{"nodeType":"YulBlock","src":"3109:48:24","statements":[{"nodeType":"YulAssignment","src":"3119:32:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:24"},"nodeType":"YulFunctionCall","src":"3137:13:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:24"},"nodeType":"YulFunctionCall","src":"3130:21:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:24"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:24","type":""}],"src":"3067:90:24"},{"body":{"nodeType":"YulBlock","src":"3222:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:24"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:24"},"nodeType":"YulFunctionCall","src":"3244:21:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:24"},"nodeType":"YulFunctionCall","src":"3232:34:24"},"nodeType":"YulExpressionStatement","src":"3232:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:24","type":""}],"src":"3163:109:24"},{"body":{"nodeType":"YulBlock","src":"3370:118:24","statements":[{"nodeType":"YulAssignment","src":"3380:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:24"},"nodeType":"YulFunctionCall","src":"3388:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:24"},"nodeType":"YulFunctionCall","src":"3463:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:24"},"nodeType":"YulFunctionCall","src":"3416:65:24"},"nodeType":"YulExpressionStatement","src":"3416:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:24","type":""}],"src":"3278:210:24"},{"body":{"nodeType":"YulBlock","src":"3559:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:24"},"nodeType":"YulFunctionCall","src":"3581:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:24"},"nodeType":"YulFunctionCall","src":"3569:37:24"},"nodeType":"YulExpressionStatement","src":"3569:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:24","type":""}],"src":"3494:118:24"},{"body":{"nodeType":"YulBlock","src":"3716:124:24","statements":[{"nodeType":"YulAssignment","src":"3726:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:24"},"nodeType":"YulFunctionCall","src":"3734:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:24"},"nodeType":"YulFunctionCall","src":"3815:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:24"},"nodeType":"YulFunctionCall","src":"3762:71:24"},"nodeType":"YulExpressionStatement","src":"3762:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:24","type":""}],"src":"3618:222:24"},{"body":{"nodeType":"YulBlock","src":"3946:519:24","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:24"},"nodeType":"YulFunctionCall","src":"3994:79:24"},"nodeType":"YulExpressionStatement","src":"3994:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:24"},"nodeType":"YulFunctionCall","src":"3963:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:24"},"nodeType":"YulFunctionCall","src":"3959:32:24"},"nodeType":"YulIf","src":"3956:119:24"},{"nodeType":"YulBlock","src":"4085:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:24"},"nodeType":"YulFunctionCall","src":"4160:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:24"},"nodeType":"YulFunctionCall","src":"4139:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:24"}]}]},{"nodeType":"YulBlock","src":"4212:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:24"},"nodeType":"YulFunctionCall","src":"4288:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:24"},"nodeType":"YulFunctionCall","src":"4267:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:24"}]}]},{"nodeType":"YulBlock","src":"4340:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:24"},"nodeType":"YulFunctionCall","src":"4416:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:24"},"nodeType":"YulFunctionCall","src":"4395:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:24","type":""}],"src":"3846:619:24"},{"body":{"nodeType":"YulBlock","src":"4514:43:24","statements":[{"nodeType":"YulAssignment","src":"4524:27:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:24"},"nodeType":"YulFunctionCall","src":"4535:16:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:24"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:24","type":""}],"src":"4471:86:24"},{"body":{"nodeType":"YulBlock","src":"4624:51:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:24"},"nodeType":"YulFunctionCall","src":"4646:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:24"},"nodeType":"YulFunctionCall","src":"4634:35:24"},"nodeType":"YulExpressionStatement","src":"4634:35:24"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:24","type":""}],"src":"4563:112:24"},{"body":{"nodeType":"YulBlock","src":"4775:120:24","statements":[{"nodeType":"YulAssignment","src":"4785:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:24"},"nodeType":"YulFunctionCall","src":"4793:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:24"},"nodeType":"YulFunctionCall","src":"4870:17:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:24"},"nodeType":"YulFunctionCall","src":"4821:67:24"},"nodeType":"YulExpressionStatement","src":"4821:67:24"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:24","type":""}],"src":"4681:214:24"},{"body":{"nodeType":"YulBlock","src":"4967:263:24","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:24"},"nodeType":"YulFunctionCall","src":"5015:79:24"},"nodeType":"YulExpressionStatement","src":"5015:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:24"},"nodeType":"YulFunctionCall","src":"4984:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:24"},"nodeType":"YulFunctionCall","src":"4980:32:24"},"nodeType":"YulIf","src":"4977:119:24"},{"nodeType":"YulBlock","src":"5106:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:24","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:24"},"nodeType":"YulFunctionCall","src":"5181:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:24"},"nodeType":"YulFunctionCall","src":"5160:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:24","type":""}],"src":"4901:329:24"},{"body":{"nodeType":"YulBlock","src":"5319:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:24"},"nodeType":"YulFunctionCall","src":"5367:79:24"},"nodeType":"YulExpressionStatement","src":"5367:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:24"},"nodeType":"YulFunctionCall","src":"5336:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:24"},"nodeType":"YulFunctionCall","src":"5332:32:24"},"nodeType":"YulIf","src":"5329:119:24"},{"nodeType":"YulBlock","src":"5458:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:24","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:24"},"nodeType":"YulFunctionCall","src":"5533:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:24"},"nodeType":"YulFunctionCall","src":"5512:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:24"}]}]},{"nodeType":"YulBlock","src":"5585:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:24","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:24"},"nodeType":"YulFunctionCall","src":"5661:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:24"},"nodeType":"YulFunctionCall","src":"5640:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:24","type":""}],"src":"5236:474:24"},{"body":{"nodeType":"YulBlock","src":"5744:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:24"},"nodeType":"YulFunctionCall","src":"5754:88:24"},"nodeType":"YulExpressionStatement","src":"5754:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:24"},"nodeType":"YulFunctionCall","src":"5851:15:24"},"nodeType":"YulExpressionStatement","src":"5851:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:24"},"nodeType":"YulFunctionCall","src":"5875:15:24"},"nodeType":"YulExpressionStatement","src":"5875:15:24"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:24"},{"body":{"nodeType":"YulBlock","src":"5953:269:24","statements":[{"nodeType":"YulAssignment","src":"5963:22:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:24","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:24"},"nodeType":"YulFunctionCall","src":"5973:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:24","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:24"},"nodeType":"YulFunctionCall","src":"6020:12:24"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:24","statements":[{"nodeType":"YulAssignment","src":"6085:27:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:24"},"nodeType":"YulFunctionCall","src":"6095:17:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:24"},"nodeType":"YulFunctionCall","src":"6044:26:24"},"nodeType":"YulIf","src":"6041:81:24"},{"body":{"nodeType":"YulBlock","src":"6174:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:24"},"nodeType":"YulFunctionCall","src":"6188:18:24"},"nodeType":"YulExpressionStatement","src":"6188:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:24"},"nodeType":"YulFunctionCall","src":"6158:14:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:24"},"nodeType":"YulFunctionCall","src":"6135:38:24"},"nodeType":"YulIf","src":"6132:84:24"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:24","type":""}],"src":"5902:320:24"},{"body":{"nodeType":"YulBlock","src":"6256:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:24"},"nodeType":"YulFunctionCall","src":"6266:88:24"},"nodeType":"YulExpressionStatement","src":"6266:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:24"},"nodeType":"YulFunctionCall","src":"6363:15:24"},"nodeType":"YulExpressionStatement","src":"6363:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:24"},"nodeType":"YulFunctionCall","src":"6387:15:24"},"nodeType":"YulExpressionStatement","src":"6387:15:24"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:24"},{"body":{"nodeType":"YulBlock","src":"6458:261:24","statements":[{"nodeType":"YulAssignment","src":"6468:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:24"},"nodeType":"YulFunctionCall","src":"6473:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:24"}]},{"nodeType":"YulAssignment","src":"6502:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:24"},"nodeType":"YulFunctionCall","src":"6507:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:24"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:24"},"nodeType":"YulFunctionCall","src":"6667:18:24"},"nodeType":"YulExpressionStatement","src":"6667:18:24"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:24"},"nodeType":"YulFunctionCall","src":"6589:74:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:24"},"nodeType":"YulFunctionCall","src":"6583:81:24"},"nodeType":"YulIf","src":"6580:107:24"},{"nodeType":"YulAssignment","src":"6697:16:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:24"},"nodeType":"YulFunctionCall","src":"6704:9:24"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:24"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:24","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:24","type":""}],"src":"6414:305:24"},{"body":{"nodeType":"YulBlock","src":"6831:118:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:24"},"nodeType":"YulFunctionCall","src":"6849:14:24"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:24","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:24"},"nodeType":"YulFunctionCall","src":"6842:58:24"},"nodeType":"YulExpressionStatement","src":"6842:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:24"},"nodeType":"YulFunctionCall","src":"6917:15:24"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:24","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:24"},"nodeType":"YulFunctionCall","src":"6910:32:24"},"nodeType":"YulExpressionStatement","src":"6910:32:24"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:24","type":""}],"src":"6725:224:24"},{"body":{"nodeType":"YulBlock","src":"7101:220:24","statements":[{"nodeType":"YulAssignment","src":"7111:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:24","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:24"},"nodeType":"YulFunctionCall","src":"7118:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:24"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:24"},"nodeType":"YulFunctionCall","src":"7194:93:24"},"nodeType":"YulExpressionStatement","src":"7194:93:24"},{"nodeType":"YulAssignment","src":"7296:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:24"},"nodeType":"YulFunctionCall","src":"7303:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:24"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:24","type":""}],"src":"6955:366:24"},{"body":{"nodeType":"YulBlock","src":"7498:248:24","statements":[{"nodeType":"YulAssignment","src":"7508:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:24"},"nodeType":"YulFunctionCall","src":"7516:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:24"},"nodeType":"YulFunctionCall","src":"7551:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:24"},"nodeType":"YulFunctionCall","src":"7570:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:24"},"nodeType":"YulFunctionCall","src":"7544:47:24"},"nodeType":"YulExpressionStatement","src":"7544:47:24"},{"nodeType":"YulAssignment","src":"7600:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:24"},"nodeType":"YulFunctionCall","src":"7608:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:24","type":""}],"src":"7327:419:24"},{"body":{"nodeType":"YulBlock","src":"7858:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:24"},"nodeType":"YulFunctionCall","src":"7876:14:24"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:24","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:24"},"nodeType":"YulFunctionCall","src":"7869:58:24"},"nodeType":"YulExpressionStatement","src":"7869:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:24"},"nodeType":"YulFunctionCall","src":"7944:15:24"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:24","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:24"},"nodeType":"YulFunctionCall","src":"7937:31:24"},"nodeType":"YulExpressionStatement","src":"7937:31:24"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:24","type":""}],"src":"7752:223:24"},{"body":{"nodeType":"YulBlock","src":"8127:220:24","statements":[{"nodeType":"YulAssignment","src":"8137:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:24","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:24"},"nodeType":"YulFunctionCall","src":"8144:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:24"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:24"},"nodeType":"YulFunctionCall","src":"8220:93:24"},"nodeType":"YulExpressionStatement","src":"8220:93:24"},{"nodeType":"YulAssignment","src":"8322:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:24"},"nodeType":"YulFunctionCall","src":"8329:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:24"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:24","type":""}],"src":"7981:366:24"},{"body":{"nodeType":"YulBlock","src":"8524:248:24","statements":[{"nodeType":"YulAssignment","src":"8534:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:24"},"nodeType":"YulFunctionCall","src":"8542:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:24"},"nodeType":"YulFunctionCall","src":"8577:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:24"},"nodeType":"YulFunctionCall","src":"8596:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:24"},"nodeType":"YulFunctionCall","src":"8570:47:24"},"nodeType":"YulExpressionStatement","src":"8570:47:24"},{"nodeType":"YulAssignment","src":"8626:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:24"},"nodeType":"YulFunctionCall","src":"8634:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:24","type":""}],"src":"8353:419:24"},{"body":{"nodeType":"YulBlock","src":"8884:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:24"},"nodeType":"YulFunctionCall","src":"8902:14:24"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:24","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:24"},"nodeType":"YulFunctionCall","src":"8895:58:24"},"nodeType":"YulExpressionStatement","src":"8895:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:24"},"nodeType":"YulFunctionCall","src":"8970:15:24"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:24","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:24"},"nodeType":"YulFunctionCall","src":"8963:29:24"},"nodeType":"YulExpressionStatement","src":"8963:29:24"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:24","type":""}],"src":"8778:221:24"},{"body":{"nodeType":"YulBlock","src":"9151:220:24","statements":[{"nodeType":"YulAssignment","src":"9161:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:24","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:24"},"nodeType":"YulFunctionCall","src":"9168:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:24"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:24"},"nodeType":"YulFunctionCall","src":"9244:93:24"},"nodeType":"YulExpressionStatement","src":"9244:93:24"},{"nodeType":"YulAssignment","src":"9346:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:24"},"nodeType":"YulFunctionCall","src":"9353:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:24"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:24","type":""}],"src":"9005:366:24"},{"body":{"nodeType":"YulBlock","src":"9548:248:24","statements":[{"nodeType":"YulAssignment","src":"9558:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:24"},"nodeType":"YulFunctionCall","src":"9566:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:24"},"nodeType":"YulFunctionCall","src":"9601:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:24"},"nodeType":"YulFunctionCall","src":"9620:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:24"},"nodeType":"YulFunctionCall","src":"9594:47:24"},"nodeType":"YulExpressionStatement","src":"9594:47:24"},{"nodeType":"YulAssignment","src":"9650:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:24"},"nodeType":"YulFunctionCall","src":"9658:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:24","type":""}],"src":"9377:419:24"},{"body":{"nodeType":"YulBlock","src":"9908:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:24"},"nodeType":"YulFunctionCall","src":"9926:14:24"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:24","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:24"},"nodeType":"YulFunctionCall","src":"9919:55:24"},"nodeType":"YulExpressionStatement","src":"9919:55:24"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:24","type":""}],"src":"9802:179:24"},{"body":{"nodeType":"YulBlock","src":"10133:220:24","statements":[{"nodeType":"YulAssignment","src":"10143:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:24","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:24"},"nodeType":"YulFunctionCall","src":"10150:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:24"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:24"},"nodeType":"YulFunctionCall","src":"10226:93:24"},"nodeType":"YulExpressionStatement","src":"10226:93:24"},{"nodeType":"YulAssignment","src":"10328:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:24"},"nodeType":"YulFunctionCall","src":"10335:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:24"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:24","type":""}],"src":"9987:366:24"},{"body":{"nodeType":"YulBlock","src":"10530:248:24","statements":[{"nodeType":"YulAssignment","src":"10540:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:24"},"nodeType":"YulFunctionCall","src":"10548:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:24"},"nodeType":"YulFunctionCall","src":"10583:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:24"},"nodeType":"YulFunctionCall","src":"10602:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:24"},"nodeType":"YulFunctionCall","src":"10576:47:24"},"nodeType":"YulExpressionStatement","src":"10576:47:24"},{"nodeType":"YulAssignment","src":"10632:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:24"},"nodeType":"YulFunctionCall","src":"10640:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:24","type":""}],"src":"10359:419:24"},{"body":{"nodeType":"YulBlock","src":"10890:118:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:24"},"nodeType":"YulFunctionCall","src":"10908:14:24"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:24","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:24"},"nodeType":"YulFunctionCall","src":"10901:58:24"},"nodeType":"YulExpressionStatement","src":"10901:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:24"},"nodeType":"YulFunctionCall","src":"10976:15:24"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:24","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:24"},"nodeType":"YulFunctionCall","src":"10969:32:24"},"nodeType":"YulExpressionStatement","src":"10969:32:24"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:24","type":""}],"src":"10784:224:24"},{"body":{"nodeType":"YulBlock","src":"11160:220:24","statements":[{"nodeType":"YulAssignment","src":"11170:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:24","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:24"},"nodeType":"YulFunctionCall","src":"11177:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:24"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:24"},"nodeType":"YulFunctionCall","src":"11253:93:24"},"nodeType":"YulExpressionStatement","src":"11253:93:24"},{"nodeType":"YulAssignment","src":"11355:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:24"},"nodeType":"YulFunctionCall","src":"11362:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:24"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:24","type":""}],"src":"11014:366:24"},{"body":{"nodeType":"YulBlock","src":"11557:248:24","statements":[{"nodeType":"YulAssignment","src":"11567:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:24"},"nodeType":"YulFunctionCall","src":"11575:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:24"},"nodeType":"YulFunctionCall","src":"11610:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:24"},"nodeType":"YulFunctionCall","src":"11629:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:24"},"nodeType":"YulFunctionCall","src":"11603:47:24"},"nodeType":"YulExpressionStatement","src":"11603:47:24"},{"nodeType":"YulAssignment","src":"11659:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:24"},"nodeType":"YulFunctionCall","src":"11667:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:24","type":""}],"src":"11386:419:24"},{"body":{"nodeType":"YulBlock","src":"11917:116:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:24"},"nodeType":"YulFunctionCall","src":"11935:14:24"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:24","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:24"},"nodeType":"YulFunctionCall","src":"11928:58:24"},"nodeType":"YulExpressionStatement","src":"11928:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:24"},"nodeType":"YulFunctionCall","src":"12003:15:24"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:24","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:24"},"nodeType":"YulFunctionCall","src":"11996:30:24"},"nodeType":"YulExpressionStatement","src":"11996:30:24"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:24","type":""}],"src":"11811:222:24"},{"body":{"nodeType":"YulBlock","src":"12185:220:24","statements":[{"nodeType":"YulAssignment","src":"12195:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:24","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:24"},"nodeType":"YulFunctionCall","src":"12202:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:24"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:24"},"nodeType":"YulFunctionCall","src":"12278:93:24"},"nodeType":"YulExpressionStatement","src":"12278:93:24"},{"nodeType":"YulAssignment","src":"12380:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:24"},"nodeType":"YulFunctionCall","src":"12387:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:24"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:24","type":""}],"src":"12039:366:24"},{"body":{"nodeType":"YulBlock","src":"12582:248:24","statements":[{"nodeType":"YulAssignment","src":"12592:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:24"},"nodeType":"YulFunctionCall","src":"12600:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:24"},"nodeType":"YulFunctionCall","src":"12635:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:24"},"nodeType":"YulFunctionCall","src":"12654:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:24"},"nodeType":"YulFunctionCall","src":"12628:47:24"},"nodeType":"YulExpressionStatement","src":"12628:47:24"},{"nodeType":"YulAssignment","src":"12684:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:24"},"nodeType":"YulFunctionCall","src":"12692:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:24","type":""}],"src":"12411:419:24"},{"body":{"nodeType":"YulBlock","src":"12942:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:24"},"nodeType":"YulFunctionCall","src":"12960:14:24"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:24","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:24"},"nodeType":"YulFunctionCall","src":"12953:58:24"},"nodeType":"YulExpressionStatement","src":"12953:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:24"},"nodeType":"YulFunctionCall","src":"13028:15:24"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:24","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:24"},"nodeType":"YulFunctionCall","src":"13021:33:24"},"nodeType":"YulExpressionStatement","src":"13021:33:24"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:24","type":""}],"src":"12836:225:24"},{"body":{"nodeType":"YulBlock","src":"13213:220:24","statements":[{"nodeType":"YulAssignment","src":"13223:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:24"},"nodeType":"YulFunctionCall","src":"13230:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:24"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:24"},"nodeType":"YulFunctionCall","src":"13306:93:24"},"nodeType":"YulExpressionStatement","src":"13306:93:24"},{"nodeType":"YulAssignment","src":"13408:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:24"},"nodeType":"YulFunctionCall","src":"13415:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:24"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:24","type":""}],"src":"13067:366:24"},{"body":{"nodeType":"YulBlock","src":"13610:248:24","statements":[{"nodeType":"YulAssignment","src":"13620:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:24"},"nodeType":"YulFunctionCall","src":"13628:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:24"},"nodeType":"YulFunctionCall","src":"13663:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:24"},"nodeType":"YulFunctionCall","src":"13682:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:24"},"nodeType":"YulFunctionCall","src":"13656:47:24"},"nodeType":"YulExpressionStatement","src":"13656:47:24"},{"nodeType":"YulAssignment","src":"13712:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:24"},"nodeType":"YulFunctionCall","src":"13720:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:24","type":""}],"src":"13439:419:24"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b26565b60405180910390f35b6100e660048036038101906100e19190610be1565b610308565b6040516100f39190610c3c565b60405180910390f35b61010461032b565b6040516101119190610c66565b60405180910390f35b610134600480360381019061012f9190610c81565b610335565b6040516101419190610c3c565b60405180910390f35b610152610364565b60405161015f9190610cf0565b60405180910390f35b610182600480360381019061017d9190610be1565b61036d565b60405161018f9190610c3c565b60405180910390f35b6101b260048036038101906101ad9190610d0b565b6103a4565b6040516101bf9190610c66565b60405180910390f35b6101d06103ed565b6040516101dd9190610b26565b60405180910390f35b61020060048036038101906101fb9190610be1565b61047f565b60405161020d9190610c3c565b60405180910390f35b610230600480360381019061022b9190610be1565b6104f6565b60405161023d9190610c3c565b60405180910390f35b610260600480360381019061025b9190610d38565b610519565b60405161026d9190610c66565b60405180910390f35b60606036805461028590610da7565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610da7565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e08565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610da7565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610da7565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ed0565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610f62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610ff4565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610c66565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290611060565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610866906110f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690611184565b60405180910390fd5b6108ea838383610a83565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890611216565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a069190610e08565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6a9190610c66565b60405180910390a3610a7d848484610a88565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac7578082015181840152602081019050610aac565b83811115610ad6576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af882610a8d565b610b028185610a98565b9350610b12818560208601610aa9565b610b1b81610adc565b840191505092915050565b60006020820190508181036000830152610b408184610aed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7882610b4d565b9050919050565b610b8881610b6d565b8114610b9357600080fd5b50565b600081359050610ba581610b7f565b92915050565b6000819050919050565b610bbe81610bab565b8114610bc957600080fd5b50565b600081359050610bdb81610bb5565b92915050565b60008060408385031215610bf857610bf7610b48565b5b6000610c0685828601610b96565b9250506020610c1785828601610bcc565b9150509250929050565b60008115159050919050565b610c3681610c21565b82525050565b6000602082019050610c516000830184610c2d565b92915050565b610c6081610bab565b82525050565b6000602082019050610c7b6000830184610c57565b92915050565b600080600060608486031215610c9a57610c99610b48565b5b6000610ca886828701610b96565b9350506020610cb986828701610b96565b9250506040610cca86828701610bcc565b9150509250925092565b600060ff82169050919050565b610cea81610cd4565b82525050565b6000602082019050610d056000830184610ce1565b92915050565b600060208284031215610d2157610d20610b48565b5b6000610d2f84828501610b96565b91505092915050565b60008060408385031215610d4f57610d4e610b48565b5b6000610d5d85828601610b96565b9250506020610d6e85828601610b96565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dbf57607f821691505b60208210811415610dd357610dd2610d78565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e1382610bab565b9150610e1e83610bab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5357610e52610dd9565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eba602583610a98565b9150610ec582610e5e565b604082019050919050565b60006020820190508181036000830152610ee981610ead565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f4c602483610a98565b9150610f5782610ef0565b604082019050919050565b60006020820190508181036000830152610f7b81610f3f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fde602283610a98565b9150610fe982610f82565b604082019050919050565b6000602082019050818103600083015261100d81610fd1565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061104a601d83610a98565b915061105582611014565b602082019050919050565b600060208201905081810360008301526110798161103d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110dc602583610a98565b91506110e782611080565b604082019050919050565b6000602082019050818103600083015261110b816110cf565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061116e602383610a98565b915061117982611112565b604082019050919050565b6000602082019050818103600083015261119d81611161565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611200602683610a98565b915061120b826111a4565b604082019050919050565b6000602082019050818103600083015261122f816111f3565b905091905056fea264697066735822122034a433546e704d82464f0028484382589c9c9bcadc62dea7c7436f31bb8f683a64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA7D DUP5 DUP5 DUP5 PUSH2 0xA88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAAC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP3 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0xB02 DUP2 DUP6 PUSH2 0xA98 JUMP JUMPDEST SWAP4 POP PUSH2 0xB12 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0xADC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB40 DUP2 DUP5 PUSH2 0xAED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB78 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB88 DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP2 EQ PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA5 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP2 EQ PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDB DUP2 PUSH2 0xBB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC17 DUP6 DUP3 DUP7 ADD PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9A JUMPI PUSH2 0xC99 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCA DUP7 DUP3 DUP8 ADD PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEA DUP2 PUSH2 0xCD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD21 JUMPI PUSH2 0xD20 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2F DUP5 DUP3 DUP6 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6E DUP6 DUP3 DUP7 ADD PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDBF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE13 DUP3 PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP PUSH2 0xE1E DUP4 PUSH2 0xBAB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xE52 PUSH2 0xDD9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBA PUSH1 0x25 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC5 DUP3 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE9 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C PUSH1 0x24 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP3 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDE PUSH1 0x22 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE9 DUP3 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A PUSH1 0x1D DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1079 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DC PUSH1 0x25 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E7 DUP3 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x110B DUP2 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116E PUSH1 0x23 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1179 DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x119D DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 PUSH1 0x26 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0x120B DUP3 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122F DUP2 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE LOG4 CALLER SLOAD PUSH15 0x704D82464F0028484382589C9C9BCA 0xDC PUSH3 0xDEA7C7 NUMBER PUSH16 0x31BB8F683A64736F6C63430008090033 ","sourceMap":"1482:11763:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3581:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5529:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3430:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6210:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3745:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2704:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6931:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4066:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4313:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;:::o;3581:106::-;3642:7;3668:12;;3661:19;;3581:106;:::o;5529:286::-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;:::o;3430:91::-;3488:5;3512:2;3505:9;;3430:91;:::o;6210:234::-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;:::-;6433:4;6426:11;;;6210:234;;;;:::o;3745:125::-;3819:7;3845:9;:18;3855:7;3845:18;;;;;;;;;;;;;;;;3838:25;;3745:125;;;:::o;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102;:::o;6931:427::-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;7347:4;7340:11;;;;6931:427;;;;:::o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;:::-;4244:4;4237:11;;;4066:189;;;;:::o;4313:149::-;4402:7;4428:11;:18;4440:5;4428:18;;;;;;;;;;;;;;;:27;4447:7;4428:27;;;;;;;;;;;;;;;;4421:34;;4313:149;;;;:::o;850:96:15:-;903:7;929:10;922:17;;850:96;:::o;10447:370:8:-;10595:1;10578:19;;:5;:19;;;;10570:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10675:1;10656:21;;:7;:21;;;;10648:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10757:6;10727:11;:18;10739:5;10727:18;;;;;;;;;;;;;;;:27;10746:7;10727:27;;;;;;;;;;;;;;;:36;;;;10794:7;10778:32;;10787:5;10778:32;;;10803:6;10778:32;;;;;;:::i;:::-;;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;11314:17;11294:16;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11290:243;11218:321;11098:441;;;:::o;7812:651::-;7954:1;7938:18;;:4;:18;;;;7930:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8030:1;8016:16;;:2;:16;;;;8008:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;8132:19;8154:9;:15;8164:4;8154:15;;;;;;;;;;;;;;;;8132:37;;8202:6;8187:11;:21;;8179:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8317:6;8303:11;:20;8285:9;:15;8295:4;8285:15;;;;;;;;;;;;;;;:38;;;;8360:6;8343:9;:13;8353:2;8343:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8397:2;8382:26;;8391:4;8382:26;;;8401:6;8382:26;;;;;;:::i;:::-;;;;;;;;8419:37;8439:4;8445:2;8449:6;8419:19;:37::i;:::-;7920:543;7812:651;;;:::o;12123:121::-;;;;:::o;12832:120::-;;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1031,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1037,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1039,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1041,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1043,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1622,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ERC20VotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":\"ERC20VotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0\",\"dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1031,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1037,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1039,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1041,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1043,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1622,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":3652,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_HASHED_NAME","offset":0,"slot":"101","type":"t_bytes32"},{"astId":3654,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_HASHED_VERSION","offset":0,"slot":"102","type":"t_bytes32"},{"astId":3792,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"103","type":"t_array(t_uint256)50_storage"},{"astId":2409,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)2901_storage)"},{"astId":2417,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":2573,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"},{"astId":1742,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_delegates","offset":0,"slot":"204","type":"t_mapping(t_address,t_address)"},{"astId":1748,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_checkpoints","offset":0,"slot":"205","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1733_storage)dyn_storage)"},{"astId":1752,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupplyCheckpoints","offset":0,"slot":"206","type":"t_array(t_struct(Checkpoint)1733_storage)dyn_storage"},{"astId":2357,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"207","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1733_storage)dyn_storage":{"base":"t_struct(Checkpoint)1733_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1733_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1733_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2901_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2901_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1733_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":1730,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1732,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2901_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2900,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1031,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1037,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1039,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1041,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1043,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1622,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":3652,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_HASHED_NAME","offset":0,"slot":"101","type":"t_bytes32"},{"astId":3654,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_HASHED_VERSION","offset":0,"slot":"102","type":"t_bytes32"},{"astId":3792,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"103","type":"t_array(t_uint256)50_storage"},{"astId":2409,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)2901_storage)"},{"astId":2417,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":2573,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2901_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2901_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2901_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2900,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041b135e26e181fd09618067580238007fbb46fae112d9d21706d4b3125228bcd64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB1 CALLDATALOAD 0xE2 PUSH15 0x181FD09618067580238007FBB46FAE GT 0x2D SWAP14 0x21 PUSH17 0x6D4B3125228BCD64736F6C634300080900 CALLER ","sourceMap":"194:7172:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041b135e26e181fd09618067580238007fbb46fae112d9d21706d4b3125228bcd64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB1 CALLDATALOAD 0xE2 PUSH15 0x181FD09618067580238007FBB46FAE GT 0x2D SWAP14 0x21 PUSH17 0x6D4B3125228BCD64736F6C634300080900 CALLER ","sourceMap":"194:7172:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203edeff80fe3b3cb8d7019084756369a2d9c1b18a0f994f5814aad7f095ce481b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xDE SELFDESTRUCT DUP1 INVALID EXTCODESIZE EXTCODECOPY 0xB8 0xD7 ADD SWAP1 DUP5 PUSH22 0x6369A2D9C1B18A0F994F5814AAD7F095CE481B64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"424:982:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203edeff80fe3b3cb8d7019084756369a2d9c1b18a0f994f5814aad7f095ce481b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xDE SELFDESTRUCT DUP1 INVALID EXTCODESIZE EXTCODECOPY 0xB8 0xD7 ADD SWAP1 DUP5 PUSH22 0x6369A2D9C1B18A0F994F5814AAD7F095CE481B64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"424:982:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714a44cae5e685d9dd85d68c0e11106cf8f5144c9c82f2cce6418989ba21ecba64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4A44CAE5E685D9DD85D68C0E11106CF8F514 0x4C SWAP13 DUP3 CALLCODE 0xCC 0xE6 COINBASE DUP10 DUP10 0xBA 0x21 0xEC 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1402:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714a44cae5e685d9dd85d68c0e11106cf8f5144c9c82f2cce6418989ba21ecba64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4A44CAE5E685D9DD85D68C0E11106CF8F514 0x4C SWAP13 DUP3 CALLCODE 0xCC 0xE6 COINBASE DUP10 DUP10 0xBA 0x21 0xEC 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1402:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220666bf67d35441530b7ba86e0712e02558dc9ecf1e13693c50fa596d7465ca8e664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x6BF67D35441530 0xB7 0xBA DUP7 0xE0 PUSH18 0x2E02558DC9ECF1E13693C50FA596D7465CA8 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2246:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220666bf67d35441530b7ba86e0712e02558dc9ecf1e13693c50fa596d7465ca8e664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x6BF67D35441530 0xB7 0xBA DUP7 0xE0 PUSH18 0x2E02558DC9ECF1E13693C50FA596D7465CA8 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2246:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fb5d71ac15db26f92bff2fddb74c9ff4124dd9aec493f30cf1a131648d25a2864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xB5 0xD7 BYTE 0xC1 0x5D 0xB2 PUSH16 0x92BFF2FDDB74C9FF4124DD9AEC493F30 0xCF BYTE SGT AND BASEFEE 0xD2 GAS 0x28 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"380:8397:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fb5d71ac15db26f92bff2fddb74c9ff4124dd9aec493f30cf1a131648d25a2864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xB5 0xD7 BYTE 0xC1 0x5D 0xB2 PUSH16 0x92BFF2FDDB74C9FF4124DD9AEC493F30 0xCF BYTE SGT AND BASEFEE 0xD2 GAS 0x28 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"380:8397:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3652,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_NAME","offset":0,"slot":"1","type":"t_bytes32"},{"astId":3654,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_VERSION","offset":0,"slot":"2","type":"t_bytes32"},{"astId":3792,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:EIP712Upgradeable","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee8bdca9fec576dcb5d84ddb910d8ca81faddf8244973e0acfe2f9460da8fe4664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP12 0xDC 0xA9 INVALID 0xC5 PUSH23 0xDCB5D84DDB910D8CA81FADDF8244973E0ACFE2F9460DA8 INVALID CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:8635:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee8bdca9fec576dcb5d84ddb910d8ca81faddf8244973e0acfe2f9460da8fe4664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP12 0xDC 0xA9 INVALID 0xC5 PUSH23 0xDCB5D84DDB910D8CA81FADDF8244973E0ACFE2F9460DA8 INVALID CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:8635:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"SafeCastUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bec885f6c4208a4394bc9e97f32ff83f3f660b70d9e7d83fda162cfe0b1b34b664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC8 DUP6 0xF6 0xC4 KECCAK256 DUP11 NUMBER SWAP5 0xBC SWAP15 SWAP8 RETURN 0x2F 0xF8 EXTCODEHASH EXTCODEHASH PUSH7 0xB70D9E7D83FDA AND 0x2C INVALID SIGNEXTEND SHL CALLVALUE 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"842:34696:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bec885f6c4208a4394bc9e97f32ff83f3f660b70d9e7d83fda162cfe0b1b34b664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC8 DUP6 0xF6 0xC4 KECCAK256 DUP11 NUMBER SWAP5 0xBC SWAP15 SWAP8 RETURN 0x2F 0xF8 EXTCODEHASH EXTCODEHASH PUSH7 0xB70D9E7D83FDA AND 0x2C INVALID SIGNEXTEND SHL CALLVALUE 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"842:34696:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":\"SafeCastUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/VotingTokenX.sol":{"VotingTokenX":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6179":{"entryPoint":null,"id":6179,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_748":{"entryPoint":91,"id":748,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":386,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":472,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":489,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":290,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":459,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":307,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:24","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:24"},"nodeType":"YulFunctionCall","src":"113:19:24"},"nodeType":"YulExpressionStatement","src":"113:19:24"},{"nodeType":"YulAssignment","src":"141:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:24"},"nodeType":"YulFunctionCall","src":"156:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:24","type":""}],"src":"7:169:24"},{"body":{"nodeType":"YulBlock","src":"288:120:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:24"},"nodeType":"YulFunctionCall","src":"306:14:24"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:24","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:24"},"nodeType":"YulFunctionCall","src":"299:58:24"},"nodeType":"YulExpressionStatement","src":"299:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:24"},"nodeType":"YulFunctionCall","src":"374:15:24"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:24","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:24"},"nodeType":"YulFunctionCall","src":"367:34:24"},"nodeType":"YulExpressionStatement","src":"367:34:24"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:24","type":""}],"src":"182:226:24"},{"body":{"nodeType":"YulBlock","src":"560:220:24","statements":[{"nodeType":"YulAssignment","src":"570:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:24","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:24"},"nodeType":"YulFunctionCall","src":"577:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:24"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:24"},"nodeType":"YulFunctionCall","src":"653:93:24"},"nodeType":"YulExpressionStatement","src":"653:93:24"},{"nodeType":"YulAssignment","src":"755:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:24"},"nodeType":"YulFunctionCall","src":"762:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:24"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:24","type":""}],"src":"414:366:24"},{"body":{"nodeType":"YulBlock","src":"957:248:24","statements":[{"nodeType":"YulAssignment","src":"967:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:24"},"nodeType":"YulFunctionCall","src":"975:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:24"},"nodeType":"YulFunctionCall","src":"1010:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:24"},"nodeType":"YulFunctionCall","src":"1029:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:24"},"nodeType":"YulFunctionCall","src":"1003:47:24"},"nodeType":"YulExpressionStatement","src":"1003:47:24"},{"nodeType":"YulAssignment","src":"1059:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:24"},"nodeType":"YulFunctionCall","src":"1067:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:24","type":""}],"src":"786:419:24"},{"body":{"nodeType":"YulBlock","src":"1254:43:24","statements":[{"nodeType":"YulAssignment","src":"1264:27:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:24"},"nodeType":"YulFunctionCall","src":"1275:16:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:24"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:24","type":""}],"src":"1211:86:24"},{"body":{"nodeType":"YulBlock","src":"1364:51:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:24"},"nodeType":"YulFunctionCall","src":"1386:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:24"},"nodeType":"YulFunctionCall","src":"1374:35:24"},"nodeType":"YulExpressionStatement","src":"1374:35:24"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:24","type":""}],"src":"1303:112:24"},{"body":{"nodeType":"YulBlock","src":"1515:120:24","statements":[{"nodeType":"YulAssignment","src":"1525:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:24"},"nodeType":"YulFunctionCall","src":"1533:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:24"},"nodeType":"YulFunctionCall","src":"1610:17:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:24"},"nodeType":"YulFunctionCall","src":"1561:67:24"},"nodeType":"YulExpressionStatement","src":"1561:67:24"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:24","type":""}],"src":"1421:214:24"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b62000206565b600060019054906101000a900460ff1615620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a590620001a9565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff161015620001205760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001179190620001e9565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200019160278362000122565b91506200019e8262000133565b604082019050919050565b60006020820190508181036000830152620001c48162000182565b9050919050565b600060ff82169050919050565b620001e381620001cb565b82525050565b6000602082019050620002006000830184620001d8565b92915050565b6080516156166200023e60003960008181610917015281816109a601528181610b9401528181610c230152610cd301526156166000f3fe6080604052600436106101ee5760003560e01c80636fcfff451161010d57806395d89b41116100a0578063c3cda5201161006f578063c3cda5201461071a578063d505accf14610743578063dd62ed3e1461076c578063f1127ed8146107a9578063f2fde38b146107e6576101ee565b806395d89b41146106385780639ab24eb014610663578063a457c2d7146106a0578063a9059cbb146106dd576101ee565b80638129fc1c116100dc5780638129fc1c146105a25780638456cb59146105b95780638da5cb5b146105d05780638e539e8c146105fb576101ee565b80636fcfff45146104d457806370a0823114610511578063715018a61461054e5780637ecebe0014610565576101ee565b80633a46b1a81161018557806352d1902d1161015457806352d1902d14610418578063587cde1e146104435780635c19a95c146104805780635c975abb146104a9576101ee565b80633a46b1a81461037f5780633f4ba83a146103bc57806340c10f19146103d35780634f1ef286146103fc576101ee565b8063313ce567116101c1578063313ce567146102c35780633644e515146102ee5780633659cfe6146103195780633950935114610342576101ee565b806306fdde03146101f3578063095ea7b31461021e57806318160ddd1461025b57806323b872dd14610286575b600080fd5b3480156101ff57600080fd5b5061020861080f565b6040516102159190613887565b60405180910390f35b34801561022a57600080fd5b5061024560048036038101906102409190613951565b6108a1565b60405161025291906139ac565b60405180910390f35b34801561026757600080fd5b506102706108c4565b60405161027d91906139d6565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a891906139f1565b6108ce565b6040516102ba91906139ac565b60405180910390f35b3480156102cf57600080fd5b506102d86108fd565b6040516102e59190613a60565b60405180910390f35b3480156102fa57600080fd5b50610303610906565b6040516103109190613a94565b60405180910390f35b34801561032557600080fd5b50610340600480360381019061033b9190613aaf565b610915565b005b34801561034e57600080fd5b5061036960048036038101906103649190613951565b610a9e565b60405161037691906139ac565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a19190613951565b610ad5565b6040516103b391906139d6565b60405180910390f35b3480156103c857600080fd5b506103d1610b6a565b005b3480156103df57600080fd5b506103fa60048036038101906103f59190613951565b610b7c565b005b61041660048036038101906104119190613c11565b610b92565b005b34801561042457600080fd5b5061042d610ccf565b60405161043a9190613a94565b60405180910390f35b34801561044f57600080fd5b5061046a60048036038101906104659190613aaf565b610d88565b6040516104779190613c7c565b60405180910390f35b34801561048c57600080fd5b506104a760048036038101906104a29190613aaf565b610df2565b005b3480156104b557600080fd5b506104be610e06565b6040516104cb91906139ac565b60405180910390f35b3480156104e057600080fd5b506104fb60048036038101906104f69190613aaf565b610e1d565b6040516105089190613cb6565b60405180910390f35b34801561051d57600080fd5b5061053860048036038101906105339190613aaf565b610e72565b60405161054591906139d6565b60405180910390f35b34801561055a57600080fd5b50610563610ebb565b005b34801561057157600080fd5b5061058c60048036038101906105879190613aaf565b610ecf565b60405161059991906139d6565b60405180910390f35b3480156105ae57600080fd5b506105b7610f1f565b005b3480156105c557600080fd5b506105ce611127565b005b3480156105dc57600080fd5b506105e5611139565b6040516105f29190613c7c565b60405180910390f35b34801561060757600080fd5b50610622600480360381019061061d9190613cd1565b611163565b60405161062f91906139d6565b60405180910390f35b34801561064457600080fd5b5061064d6111ba565b60405161065a9190613887565b60405180910390f35b34801561066f57600080fd5b5061068a60048036038101906106859190613aaf565b61124c565b60405161069791906139d6565b60405180910390f35b3480156106ac57600080fd5b506106c760048036038101906106c29190613951565b61135f565b6040516106d491906139ac565b60405180910390f35b3480156106e957600080fd5b5061070460048036038101906106ff9190613951565b6113d6565b60405161071191906139ac565b60405180910390f35b34801561072657600080fd5b50610741600480360381019061073c9190613d56565b6113f9565b005b34801561074f57600080fd5b5061076a60048036038101906107659190613de3565b6114fd565b005b34801561077857600080fd5b50610793600480360381019061078e9190613e85565b61163f565b6040516107a091906139d6565b60405180910390f35b3480156107b557600080fd5b506107d060048036038101906107cb9190613ef1565b6116c6565b6040516107dd9190613fa6565b60405180910390f35b3480156107f257600080fd5b5061080d60048036038101906108089190613aaf565b6117d7565b005b60606036805461081e90613ff0565b80601f016020809104026020016040519081016040528092919081815260200182805461084a90613ff0565b80156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b6000806108ac61185b565b90506108b9818585611863565b600191505092915050565b6000603554905090565b6000806108d961185b565b90506108e6858285611a2e565b6108f1858585611aba565b60019150509392505050565b60006012905090565b6000610910611d3e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b90614094565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109e3611d7e565b73ffffffffffffffffffffffffffffffffffffffff1614610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3090614126565b60405180910390fd5b610a4281611dd5565b610a9b81600067ffffffffffffffff811115610a6157610a60613ae6565b5b6040519080825280601f01601f191660200182016040528015610a935781602001600182028036833780820191505090505b506000611de0565b50565b600080610aa961185b565b9050610aca818585610abb858961163f565b610ac59190614175565b611863565b600191505092915050565b6000438210610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090614217565b60405180910390fd5b610b6261013160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611f5d565b905092915050565b610b72612069565b610b7a6120e7565b565b610b84612069565b610b8e828261214a565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610c21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1890614094565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c60611d7e565b73ffffffffffffffffffffffffffffffffffffffff1614610cb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cad90614126565b60405180910390fd5b610cbf82611dd5565b610ccb82826001611de0565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d56906142a9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600061013060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e03610dfd61185b565b82612158565b50565b6000606560009054906101000a900460ff16905090565b6000610e6b61013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612273565b9050919050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ec3612069565b610ecd60006122c6565b565b6000610f1860fd60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061238c565b9050919050565b60008060019054906101000a900460ff16159050808015610f505750600160008054906101000a900460ff1660ff16105b80610f7d5750610f5f3061239a565b158015610f7c5750600160008054906101000a900460ff1660ff16145b5b610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39061433b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ff9576001600060016101000a81548160ff0219169083151502179055505b61106d6040518060400160405280600c81526020017f566f74696e67546f6b656e5800000000000000000000000000000000000000008152506040518060400160405280600381526020017f564f5400000000000000000000000000000000000000000000000000000000008152506123bd565b61107561241a565b61107d612473565b6110bb6040518060400160405280600c81526020017f566f74696e67546f6b656e5800000000000000000000000000000000000000008152506124cc565b6110c361255d565b6110cb6125ae565b80156111245760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161111b91906143a0565b60405180910390a15b50565b61112f612069565b6111376125ff565b565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004382106111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90614217565b60405180910390fd5b6111b361013283611f5d565b9050919050565b6060603780546111c990613ff0565b80601f01602080910402602001604051908101604052809291908181526020018280546111f590613ff0565b80156112425780601f1061121757610100808354040283529160200191611242565b820191906000526020600020905b81548152906001019060200180831161122557829003601f168201915b5050505050905090565b60008061013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600081146113365761013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826112ea91906143bb565b815481106112fb576112fa6143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611339565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b60008061136a61185b565b90506000611378828661163f565b9050838110156113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b490614490565b60405180910390fd5b6113ca8286868403611863565b60019250505092915050565b6000806113e161185b565b90506113ee818585611aba565b600191505092915050565b8342111561143c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611433906144fc565b60405180910390fd5b600061149e6114967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf89898960405160200161147b949392919061451c565b60405160208183030381529060405280519060200120612662565b85858561267c565b90506114a9816126a7565b86146114ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e1906145ad565b60405180910390fd5b6114f48188612158565b50505050505050565b83421115611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153790614619565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861156f8c6126a7565b8960405160200161158596959493929190614639565b60405160208183030381529060405280519060200120905060006115a882612662565b905060006115b88287878761267c565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161f906146e6565b60405180910390fd5b6116338a8a8a611863565b50505050505050505050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116ce61370d565b61013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110611726576117256143ef565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6117df612069565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184690614778565b60405180910390fd5b611858816122c6565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ca9061480a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193a9061489c565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a2191906139d6565b60405180910390a3505050565b6000611a3a848461163f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ab45781811015611aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9d90614908565b60405180910390fd5b611ab38484848403611863565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b219061499a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9190614a2c565b60405180910390fd5b611ba5838383612705565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2390614abe565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cc19190614175565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d2591906139d6565b60405180910390a3611d3884848461271d565b50505050565b6000611d797f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d6c61272d565b611d74612737565b612741565b905090565b6000611dac7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61277b565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611ddd612069565b50565b611e0c7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b612785565b60000160009054906101000a900460ff1615611e3057611e2b8361278f565b611f58565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7657600080fd5b505afa925050508015611ea757506040513d601f19601f82011682018060405250810190611ea49190614af3565b60015b611ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edd90614b92565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4290614c24565b60405180910390fd5b50611f57838383612848565b5b505050565b6000808380549050905060005b81811015611fdc576000611f7e8284612874565b905084868281548110611f9457611f936143ef565b5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff161115611fc657809250611fd6565b600181611fd39190614175565b91505b50611f6a565b6000821461203e5784600183611ff291906143bb565b81548110612003576120026143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612041565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169250505092915050565b61207161185b565b73ffffffffffffffffffffffffffffffffffffffff1661208f611139565b73ffffffffffffffffffffffffffffffffffffffff16146120e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120dc90614c90565b60405180910390fd5b565b6120ef61289a565b6000606560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61213361185b565b6040516121409190613c7c565b60405180910390a1565b61215482826128e3565b5050565b600061216383610d88565b9050600061217084610e72565b90508261013060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461226d828483612971565b50505050565b600063ffffffff80168211156122be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122b590614d22565b60405180910390fd5b819050919050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661240c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240390614db4565b60405180910390fd5b6124168282612b6c565b5050565b600060019054906101000a900460ff16612469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246090614db4565b60405180910390fd5b612471612bed565b565b600060019054906101000a900460ff166124c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b990614db4565b60405180910390fd5b6124ca612c59565b565b600060019054906101000a900460ff1661251b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161251290614db4565b60405180910390fd5b61255a816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250612cba565b50565b600060019054906101000a900460ff166125ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a390614db4565b60405180910390fd5b565b600060019054906101000a900460ff166125fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f490614db4565b60405180910390fd5b565b612607612d35565b6001606560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861264b61185b565b6040516126589190613c7c565b60405180910390a1565b600061267561266f611d3e565b83612d7f565b9050919050565b600080600061268d87878787612db2565b9150915061269a81612ebf565b8192505050949350505050565b60008060fd60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126f48161238c565b91506126ff81613094565b50919050565b61270d612d35565b6127188383836130aa565b505050565b6127288383836130af565b505050565b600060c954905090565b600060ca54905090565b6000838383463060405160200161275c959493929190614dd4565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b6000819050919050565b6127988161239a565b6127d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ce90614e99565b60405180910390fd5b806128047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61277b565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b612851836130da565b60008251118061285e5750805b1561286f5761286d8383613129565b505b505050565b600060028284186128859190614ee8565b8284166128929190614175565b905092915050565b6128a2610e06565b6128e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128d890614f65565b60405180910390fd5b565b6128ed828261320d565b6128f561336e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661291b6108c4565b111561295c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295390614ff7565b60405180910390fd5b61296b610132613392836133a8565b50505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156129ad5750600081115b15612b6757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612a8c57600080612a3561013160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613620856133a8565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612a81929190615017565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612b6657600080612b0f61013160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613392856133a8565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612b5b929190615017565b60405180910390a250505b5b505050565b600060019054906101000a900460ff16612bbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb290614db4565b60405180910390fd5b8160369080519060200190612bd192919061374b565b508060379080519060200190612be892919061374b565b505050565b600060019054906101000a900460ff16612c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c3390614db4565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16612ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c9f90614db4565b60405180910390fd5b612cb8612cb361185b565b6122c6565b565b600060019054906101000a900460ff16612d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0090614db4565b60405180910390fd5b6000828051906020012090506000828051906020012090508160c9819055508060ca8190555050505050565b612d3d610e06565b15612d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d749061508c565b60405180910390fd5b565b60008282604051602001612d94929190615124565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115612ded576000600391509150612eb6565b601b8560ff1614158015612e055750601c8560ff1614155b15612e17576000600491509150612eb6565b600060018787878760405160008152602001604052604051612e3c949392919061515b565b6020604051602081039080840390855afa158015612e5e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ead57600060019250925050612eb6565b80600092509250505b94509492505050565b60006004811115612ed357612ed26151a0565b5b816004811115612ee657612ee56151a0565b5b1415612ef157613091565b60016004811115612f0557612f046151a0565b5b816004811115612f1857612f176151a0565b5b1415612f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f509061521b565b60405180910390fd5b60026004811115612f6d57612f6c6151a0565b5b816004811115612f8057612f7f6151a0565b5b1415612fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fb890615287565b60405180910390fd5b60036004811115612fd557612fd46151a0565b5b816004811115612fe857612fe76151a0565b5b1415613029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161302090615319565b60405180910390fd5b60048081111561303c5761303b6151a0565b5b81600481111561304f5761304e6151a0565b5b1415613090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613087906153ab565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b505050565b6130ba838383613636565b6130d56130c684610d88565b6130cf84610d88565b83612971565b505050565b6130e38161278f565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606131348361239a565b613173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161316a9061543d565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161319b91906154a4565b600060405180830381855af49150503d80600081146131d6576040519150601f19603f3d011682016040523d82523d6000602084013e6131db565b606091505b509150915061320382826040518060600160405280602781526020016155ba6027913961363b565b9250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561327d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161327490615507565b60405180910390fd5b61328960008383612705565b806035600082825461329b9190614175565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546132f19190614175565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161335691906139d6565b60405180910390a361336a6000838361271d565b5050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600081836133a09190614175565b905092915050565b6000806000858054905090506000811461341657856001826133ca91906143bb565b815481106133db576133da6143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16613419565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16925061344783858763ffffffff16565b915060008111801561349a5750438660018361346391906143bb565b81548110613474576134736143ef565b5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16145b15613527576134a8826136a2565b866001836134b691906143bb565b815481106134c7576134c66143ef565b5b9060005260206000200160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550613617565b85604051806040016040528061353c43612273565b63ffffffff168152602001613550856136a2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b50935093915050565b6000818361362e91906143bb565b905092915050565b505050565b6060831561364b5782905061369b565b60008351111561365e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136929190613887565b60405180910390fd5b9392505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115613705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136fc90615599565b60405180910390fd5b819050919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b82805461375790613ff0565b90600052602060002090601f01602090048101928261377957600085556137c0565b82601f1061379257805160ff19168380011785556137c0565b828001600101855582156137c0579182015b828111156137bf5782518255916020019190600101906137a4565b5b5090506137cd91906137d1565b5090565b5b808211156137ea5760008160009055506001016137d2565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561382857808201518184015260208101905061380d565b83811115613837576000848401525b50505050565b6000601f19601f8301169050919050565b6000613859826137ee565b61386381856137f9565b935061387381856020860161380a565b61387c8161383d565b840191505092915050565b600060208201905081810360008301526138a1818461384e565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006138e8826138bd565b9050919050565b6138f8816138dd565b811461390357600080fd5b50565b600081359050613915816138ef565b92915050565b6000819050919050565b61392e8161391b565b811461393957600080fd5b50565b60008135905061394b81613925565b92915050565b60008060408385031215613968576139676138b3565b5b600061397685828601613906565b92505060206139878582860161393c565b9150509250929050565b60008115159050919050565b6139a681613991565b82525050565b60006020820190506139c1600083018461399d565b92915050565b6139d08161391b565b82525050565b60006020820190506139eb60008301846139c7565b92915050565b600080600060608486031215613a0a57613a096138b3565b5b6000613a1886828701613906565b9350506020613a2986828701613906565b9250506040613a3a8682870161393c565b9150509250925092565b600060ff82169050919050565b613a5a81613a44565b82525050565b6000602082019050613a756000830184613a51565b92915050565b6000819050919050565b613a8e81613a7b565b82525050565b6000602082019050613aa96000830184613a85565b92915050565b600060208284031215613ac557613ac46138b3565b5b6000613ad384828501613906565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613b1e8261383d565b810181811067ffffffffffffffff82111715613b3d57613b3c613ae6565b5b80604052505050565b6000613b506138a9565b9050613b5c8282613b15565b919050565b600067ffffffffffffffff821115613b7c57613b7b613ae6565b5b613b858261383d565b9050602081019050919050565b82818337600083830152505050565b6000613bb4613baf84613b61565b613b46565b905082815260208101848484011115613bd057613bcf613ae1565b5b613bdb848285613b92565b509392505050565b600082601f830112613bf857613bf7613adc565b5b8135613c08848260208601613ba1565b91505092915050565b60008060408385031215613c2857613c276138b3565b5b6000613c3685828601613906565b925050602083013567ffffffffffffffff811115613c5757613c566138b8565b5b613c6385828601613be3565b9150509250929050565b613c76816138dd565b82525050565b6000602082019050613c916000830184613c6d565b92915050565b600063ffffffff82169050919050565b613cb081613c97565b82525050565b6000602082019050613ccb6000830184613ca7565b92915050565b600060208284031215613ce757613ce66138b3565b5b6000613cf58482850161393c565b91505092915050565b613d0781613a44565b8114613d1257600080fd5b50565b600081359050613d2481613cfe565b92915050565b613d3381613a7b565b8114613d3e57600080fd5b50565b600081359050613d5081613d2a565b92915050565b60008060008060008060c08789031215613d7357613d726138b3565b5b6000613d8189828a01613906565b9650506020613d9289828a0161393c565b9550506040613da389828a0161393c565b9450506060613db489828a01613d15565b9350506080613dc589828a01613d41565b92505060a0613dd689828a01613d41565b9150509295509295509295565b600080600080600080600060e0888a031215613e0257613e016138b3565b5b6000613e108a828b01613906565b9750506020613e218a828b01613906565b9650506040613e328a828b0161393c565b9550506060613e438a828b0161393c565b9450506080613e548a828b01613d15565b93505060a0613e658a828b01613d41565b92505060c0613e768a828b01613d41565b91505092959891949750929550565b60008060408385031215613e9c57613e9b6138b3565b5b6000613eaa85828601613906565b9250506020613ebb85828601613906565b9150509250929050565b613ece81613c97565b8114613ed957600080fd5b50565b600081359050613eeb81613ec5565b92915050565b60008060408385031215613f0857613f076138b3565b5b6000613f1685828601613906565b9250506020613f2785828601613edc565b9150509250929050565b613f3a81613c97565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b613f7181613f40565b82525050565b604082016000820151613f8d6000850182613f31565b506020820151613fa06020850182613f68565b50505050565b6000604082019050613fbb6000830184613f77565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061400857607f821691505b6020821081141561401c5761401b613fc1565b5b50919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b600061407e602c836137f9565b915061408982614022565b604082019050919050565b600060208201905081810360008301526140ad81614071565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000614110602c836137f9565b915061411b826140b4565b604082019050919050565b6000602082019050818103600083015261413f81614103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006141808261391b565b915061418b8361391b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156141c0576141bf614146565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b6000614201601f836137f9565b915061420c826141cb565b602082019050919050565b60006020820190508181036000830152614230816141f4565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006142936038836137f9565b915061429e82614237565b604082019050919050565b600060208201905081810360008301526142c281614286565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614325602e836137f9565b9150614330826142c9565b604082019050919050565b6000602082019050818103600083015261435481614318565b9050919050565b6000819050919050565b6000819050919050565b600061438a6143856143808461435b565b614365565b613a44565b9050919050565b61439a8161436f565b82525050565b60006020820190506143b56000830184614391565b92915050565b60006143c68261391b565b91506143d18361391b565b9250828210156143e4576143e3614146565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061447a6025836137f9565b91506144858261441e565b604082019050919050565b600060208201905081810360008301526144a98161446d565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b60006144e6601d836137f9565b91506144f1826144b0565b602082019050919050565b60006020820190508181036000830152614515816144d9565b9050919050565b60006080820190506145316000830187613a85565b61453e6020830186613c6d565b61454b60408301856139c7565b61455860608301846139c7565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b60006145976019836137f9565b91506145a282614561565b602082019050919050565b600060208201905081810360008301526145c68161458a565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000614603601d836137f9565b915061460e826145cd565b602082019050919050565b60006020820190508181036000830152614632816145f6565b9050919050565b600060c08201905061464e6000830189613a85565b61465b6020830188613c6d565b6146686040830187613c6d565b61467560608301866139c7565b61468260808301856139c7565b61468f60a08301846139c7565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b60006146d0601e836137f9565b91506146db8261469a565b602082019050919050565b600060208201905081810360008301526146ff816146c3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006147626026836137f9565b915061476d82614706565b604082019050919050565b6000602082019050818103600083015261479181614755565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006147f46024836137f9565b91506147ff82614798565b604082019050919050565b60006020820190508181036000830152614823816147e7565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006148866022836137f9565b91506148918261482a565b604082019050919050565b600060208201905081810360008301526148b581614879565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006148f2601d836137f9565b91506148fd826148bc565b602082019050919050565b60006020820190508181036000830152614921816148e5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006149846025836137f9565b915061498f82614928565b604082019050919050565b600060208201905081810360008301526149b381614977565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614a166023836137f9565b9150614a21826149ba565b604082019050919050565b60006020820190508181036000830152614a4581614a09565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614aa86026836137f9565b9150614ab382614a4c565b604082019050919050565b60006020820190508181036000830152614ad781614a9b565b9050919050565b600081519050614aed81613d2a565b92915050565b600060208284031215614b0957614b086138b3565b5b6000614b1784828501614ade565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000614b7c602e836137f9565b9150614b8782614b20565b604082019050919050565b60006020820190508181036000830152614bab81614b6f565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000614c0e6029836137f9565b9150614c1982614bb2565b604082019050919050565b60006020820190508181036000830152614c3d81614c01565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614c7a6020836137f9565b9150614c8582614c44565b602082019050919050565b60006020820190508181036000830152614ca981614c6d565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000614d0c6026836137f9565b9150614d1782614cb0565b604082019050919050565b60006020820190508181036000830152614d3b81614cff565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614d9e602b836137f9565b9150614da982614d42565b604082019050919050565b60006020820190508181036000830152614dcd81614d91565b9050919050565b600060a082019050614de96000830188613a85565b614df66020830187613a85565b614e036040830186613a85565b614e1060608301856139c7565b614e1d6080830184613c6d565b9695505050505050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000614e83602d836137f9565b9150614e8e82614e27565b604082019050919050565b60006020820190508181036000830152614eb281614e76565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614ef38261391b565b9150614efe8361391b565b925082614f0e57614f0d614eb9565b5b828204905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000614f4f6014836137f9565b9150614f5a82614f19565b602082019050919050565b60006020820190508181036000830152614f7e81614f42565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b6000614fe16030836137f9565b9150614fec82614f85565b604082019050919050565b6000602082019050818103600083015261501081614fd4565b9050919050565b600060408201905061502c60008301856139c7565b61503960208301846139c7565b9392505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006150766010836137f9565b915061508182615040565b602082019050919050565b600060208201905081810360008301526150a581615069565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006150ed6002836150ac565b91506150f8826150b7565b600282019050919050565b6000819050919050565b61511e61511982613a7b565b615103565b82525050565b600061512f826150e0565b915061513b828561510d565b60208201915061514b828461510d565b6020820191508190509392505050565b60006080820190506151706000830187613a85565b61517d6020830186613a51565b61518a6040830185613a85565b6151976060830184613a85565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006152056018836137f9565b9150615210826151cf565b602082019050919050565b60006020820190508181036000830152615234816151f8565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000615271601f836137f9565b915061527c8261523b565b602082019050919050565b600060208201905081810360008301526152a081615264565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006153036022836137f9565b915061530e826152a7565b604082019050919050565b60006020820190508181036000830152615332816152f6565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006153956022836137f9565b91506153a082615339565b604082019050919050565b600060208201905081810360008301526153c481615388565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006154276026836137f9565b9150615432826153cb565b604082019050919050565b600060208201905081810360008301526154568161541a565b9050919050565b600081519050919050565b600081905092915050565b600061547e8261545d565b6154888185615468565b935061549881856020860161380a565b80840191505092915050565b60006154b08284615473565b915081905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006154f1601f836137f9565b91506154fc826154bb565b602082019050919050565b60006020820190508181036000830152615520816154e4565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b60006155836027836137f9565b915061558e82615527565b604082019050919050565b600060208201905081810360008301526155b281615576565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c677cf51d7edce4efee089200fcfcdc3bc5273188d65885e2e92384c235b254664736f6c63430008090033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP1 PUSH3 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH3 0x120 JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0x117 SWAP2 SWAP1 PUSH3 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x191 PUSH1 0x27 DUP4 PUSH3 0x122 JUMP JUMPDEST SWAP2 POP PUSH3 0x19E DUP3 PUSH3 0x133 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1C4 DUP2 PUSH3 0x182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E3 DUP2 PUSH3 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x200 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x5616 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x917 ADD MSTORE DUP2 DUP2 PUSH2 0x9A6 ADD MSTORE DUP2 DUP2 PUSH2 0xB94 ADD MSTORE DUP2 DUP2 PUSH2 0xC23 ADD MSTORE PUSH2 0xCD3 ADD MSTORE PUSH2 0x5616 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E6 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6DD JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5FB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x565 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A9 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3FC JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x342 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x3C11 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x563 PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B7 PUSH2 0xF1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH2 0x1127 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x622 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3CD1 JUMP JUMPDEST PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x135F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x704 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x741 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x3D56 JUMP JUMPDEST PUSH2 0x13F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x3DE3 JUMP JUMPDEST PUSH2 0x14FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x793 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x3EF1 JUMP JUMPDEST PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x3FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x81E SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8AC PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x8B9 DUP2 DUP6 DUP6 PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D9 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x8E6 DUP6 DUP3 DUP6 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x8F1 DUP6 DUP6 DUP6 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E3 PUSH2 0x1D7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x4126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP2 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0x1DE0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA9 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0xABB DUP6 DUP10 PUSH2 0x163F JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP1 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB62 PUSH2 0x131 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB72 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xB7A PUSH2 0x20E7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB84 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xB8E DUP3 DUP3 PUSH2 0x214A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC18 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC60 PUSH2 0x1D7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP1 PUSH2 0x4126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF DUP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0xCCB DUP3 DUP3 PUSH1 0x1 PUSH2 0x1DE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE03 PUSH2 0xDFD PUSH2 0x185B JUMP JUMPDEST DUP3 PUSH2 0x2158 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6B PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC3 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xECD PUSH1 0x0 PUSH2 0x22C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0xFD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x238C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xF50 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xF7D JUMPI POP PUSH2 0xF5F ADDRESS PUSH2 0x239A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x433B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x106D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F74696E67546F6B656E580000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x564F540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x23BD JUMP JUMPDEST PUSH2 0x1075 PUSH2 0x241A JUMP JUMPDEST PUSH2 0x107D PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F74696E67546F6B656E580000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x10C3 PUSH2 0x255D JUMP JUMPDEST PUSH2 0x10CB PUSH2 0x25AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x112F PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x1137 PUSH2 0x25FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B3 PUSH2 0x132 DUP4 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x11C9 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11F5 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1217 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1242 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1225 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1336 JUMPI PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x136A PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1378 DUP3 DUP7 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP1 PUSH2 0x4490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13E1 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x13EE DUP2 DUP6 DUP6 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP1 PUSH2 0x44FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E PUSH2 0x1496 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x147B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x451C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2662 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x267C JUMP JUMPDEST SWAP1 POP PUSH2 0x14A9 DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP7 EQ PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E1 SWAP1 PUSH2 0x45AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F4 DUP2 DUP9 PUSH2 0x2158 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1537 SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x156F DUP13 PUSH2 0x26A7 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1585 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x15A8 DUP3 PUSH2 0x2662 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x267C JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161F SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1633 DUP11 DUP11 DUP11 PUSH2 0x1863 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16CE PUSH2 0x370D JUMP JUMPDEST PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x184F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP1 PUSH2 0x4778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x22C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CA SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x489C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3A DUP5 DUP5 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1AB4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9D SWAP1 PUSH2 0x4908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AB3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1863 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP1 PUSH2 0x499A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x4A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA5 DUP4 DUP4 DUP4 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C23 SWAP1 PUSH2 0x4ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CC1 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D25 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D38 DUP5 DUP5 DUP5 PUSH2 0x271D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D79 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D6C PUSH2 0x272D JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DDD PUSH2 0x2069 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E0C PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E30 JUMPI PUSH2 0x1E2B DUP4 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x1F58 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EA7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA4 SWAP2 SWAP1 PUSH2 0x4AF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1EE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDD SWAP1 PUSH2 0x4B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1F4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F42 SWAP1 PUSH2 0x4C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1F57 DUP4 DUP4 DUP4 PUSH2 0x2848 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FDC JUMPI PUSH1 0x0 PUSH2 0x1F7E DUP3 DUP5 PUSH2 0x2874 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1FC6 JUMPI DUP1 SWAP3 POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x1F6A JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x203E JUMPI DUP5 PUSH1 0x1 DUP4 PUSH2 0x1FF2 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2003 JUMPI PUSH2 0x2002 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x185B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x208F PUSH2 0x1139 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DC SWAP1 PUSH2 0x4C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20EF PUSH2 0x289A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2133 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2140 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2154 DUP3 DUP3 PUSH2 0x28E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2163 DUP4 PUSH2 0xD88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2170 DUP5 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x130 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x226D DUP3 DUP5 DUP4 PUSH2 0x2971 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x22BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B5 SWAP1 PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2403 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2416 DUP3 DUP3 PUSH2 0x2B6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2460 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2471 PUSH2 0x2BED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24CA PUSH2 0x2C59 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x251B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2512 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x255A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2CBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A3 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F4 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2607 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x264B PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2658 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2675 PUSH2 0x266F PUSH2 0x1D3E JUMP JUMPDEST DUP4 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x268D DUP8 DUP8 DUP8 DUP8 PUSH2 0x2DB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x269A DUP2 PUSH2 0x2EBF JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x26F4 DUP2 PUSH2 0x238C JUMP JUMPDEST SWAP2 POP PUSH2 0x26FF DUP2 PUSH2 0x3094 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x270D PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0x2718 DUP4 DUP4 DUP4 PUSH2 0x30AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2728 DUP4 DUP4 DUP4 PUSH2 0x30AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x275C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2798 DUP2 PUSH2 0x239A JUMP JUMPDEST PUSH2 0x27D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CE SWAP1 PUSH2 0x4E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2804 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2851 DUP4 PUSH2 0x30DA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x285E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x286F JUMPI PUSH2 0x286D DUP4 DUP4 PUSH2 0x3129 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x4EE8 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2892 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28A2 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x28E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D8 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x28ED DUP3 DUP3 PUSH2 0x320D JUMP JUMPDEST PUSH2 0x28F5 PUSH2 0x336E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x291B PUSH2 0x8C4 JUMP JUMPDEST GT ISZERO PUSH2 0x295C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2953 SWAP1 PUSH2 0x4FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296B PUSH2 0x132 PUSH2 0x3392 DUP4 PUSH2 0x33A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29AD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2B67 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 PUSH2 0x2A35 PUSH2 0x131 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3620 DUP6 PUSH2 0x33A8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2A81 SWAP3 SWAP2 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B66 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B0F PUSH2 0x131 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3392 DUP6 PUSH2 0x33A8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B5B SWAP3 SWAP2 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB2 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BD1 SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BE8 SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2C3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C33 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9F SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CB8 PUSH2 0x2CB3 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x22C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D00 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xCA DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D3D PUSH2 0xE06 JUMP JUMPDEST ISZERO PUSH2 0x2D7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D74 SWAP1 PUSH2 0x508C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D94 SWAP3 SWAP2 SWAP1 PUSH2 0x5124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2DED JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2E05 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E17 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2E3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EAD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2EB6 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2ED3 JUMPI PUSH2 0x2ED2 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2EF1 JUMPI PUSH2 0x3091 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F05 JUMPI PUSH2 0x2F04 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F50 SWAP1 PUSH2 0x521B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F6D JUMPI PUSH2 0x2F6C PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F80 JUMPI PUSH2 0x2F7F PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2FC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB8 SWAP1 PUSH2 0x5287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FD5 JUMPI PUSH2 0x2FD4 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FE8 JUMPI PUSH2 0x2FE7 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3020 SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x303C JUMPI PUSH2 0x303B PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x304F JUMPI PUSH2 0x304E PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3090 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3087 SWAP1 PUSH2 0x53AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x30BA DUP4 DUP4 DUP4 PUSH2 0x3636 JUMP JUMPDEST PUSH2 0x30D5 PUSH2 0x30C6 DUP5 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x30CF DUP5 PUSH2 0xD88 JUMP JUMPDEST DUP4 PUSH2 0x2971 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x30E3 DUP2 PUSH2 0x278F JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3134 DUP4 PUSH2 0x239A JUMP JUMPDEST PUSH2 0x3173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316A SWAP1 PUSH2 0x543D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x54A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x31D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x31DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3203 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55BA PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x363B JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x327D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3274 SWAP1 PUSH2 0x5507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3289 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2705 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x329B SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x32F1 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3356 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x336A PUSH1 0x0 DUP4 DUP4 PUSH2 0x271D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33A0 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x3416 JUMPI DUP6 PUSH1 0x1 DUP3 PUSH2 0x33CA SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x33DB JUMPI PUSH2 0x33DA PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x3447 DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x349A JUMPI POP NUMBER DUP7 PUSH1 0x1 DUP4 PUSH2 0x3463 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3474 JUMPI PUSH2 0x3473 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3527 JUMPI PUSH2 0x34A8 DUP3 PUSH2 0x36A2 JUMP JUMPDEST DUP7 PUSH1 0x1 DUP4 PUSH2 0x34B6 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3617 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x353C NUMBER PUSH2 0x2273 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3550 DUP6 PUSH2 0x36A2 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x362E SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x364B JUMPI DUP3 SWAP1 POP PUSH2 0x369B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x365E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3692 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x3705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36FC SWAP1 PUSH2 0x5599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3757 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3779 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x37C0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3792 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x37C0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x37C0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x37BF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37A4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x37CD SWAP2 SWAP1 PUSH2 0x37D1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37EA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3828 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x380D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3837 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP3 PUSH2 0x37EE JUMP JUMPDEST PUSH2 0x3863 DUP2 DUP6 PUSH2 0x37F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3873 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x380A JUMP JUMPDEST PUSH2 0x387C DUP2 PUSH2 0x383D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 DUP5 PUSH2 0x384E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E8 DUP3 PUSH2 0x38BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38F8 DUP2 PUSH2 0x38DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3915 DUP2 PUSH2 0x38EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x392E DUP2 PUSH2 0x391B JUMP JUMPDEST DUP2 EQ PUSH2 0x3939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x394B DUP2 PUSH2 0x3925 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3968 JUMPI PUSH2 0x3967 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3976 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3987 DUP6 DUP3 DUP7 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A6 DUP2 PUSH2 0x3991 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x399D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39D0 DUP2 PUSH2 0x391B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A0A JUMPI PUSH2 0x3A09 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A18 DUP7 DUP3 DUP8 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A29 DUP7 DUP3 DUP8 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A3A DUP7 DUP3 DUP8 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5A DUP2 PUSH2 0x3A44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8E DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AA9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AC5 JUMPI PUSH2 0x3AC4 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AD3 DUP5 DUP3 DUP6 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3B1E DUP3 PUSH2 0x383D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3B3D JUMPI PUSH2 0x3B3C PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B50 PUSH2 0x38A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B5C DUP3 DUP3 PUSH2 0x3B15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3B7C JUMPI PUSH2 0x3B7B PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B85 DUP3 PUSH2 0x383D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 PUSH2 0x3BAF DUP5 PUSH2 0x3B61 JUMP JUMPDEST PUSH2 0x3B46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3BD0 JUMPI PUSH2 0x3BCF PUSH2 0x3AE1 JUMP JUMPDEST JUMPDEST PUSH2 0x3BDB DUP5 DUP3 DUP6 PUSH2 0x3B92 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BF8 JUMPI PUSH2 0x3BF7 PUSH2 0x3ADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3C08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C36 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x38B8 JUMP JUMPDEST JUMPDEST PUSH2 0x3C63 DUP6 DUP3 DUP7 ADD PUSH2 0x3BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C76 DUP2 PUSH2 0x38DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB0 DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE7 JUMPI PUSH2 0x3CE6 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CF5 DUP5 DUP3 DUP6 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D07 DUP2 PUSH2 0x3A44 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D24 DUP2 PUSH2 0x3CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D33 DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP2 EQ PUSH2 0x3D3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D50 DUP2 PUSH2 0x3D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3D73 JUMPI PUSH2 0x3D72 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D81 DUP10 DUP3 DUP11 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3D92 DUP10 DUP3 DUP11 ADD PUSH2 0x393C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3DA3 DUP10 DUP3 DUP11 ADD PUSH2 0x393C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3DB4 DUP10 DUP3 DUP11 ADD PUSH2 0x3D15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3DC5 DUP10 DUP3 DUP11 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3DD6 DUP10 DUP3 DUP11 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3E02 JUMPI PUSH2 0x3E01 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E10 DUP11 DUP3 DUP12 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3E21 DUP11 DUP3 DUP12 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3E32 DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3E43 DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3E54 DUP11 DUP3 DUP12 ADD PUSH2 0x3D15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3E65 DUP11 DUP3 DUP12 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3E76 DUP11 DUP3 DUP12 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E9C JUMPI PUSH2 0x3E9B PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EAA DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3EBB DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ECE DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP2 EQ PUSH2 0x3ED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEB DUP2 PUSH2 0x3EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F08 JUMPI PUSH2 0x3F07 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F16 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F27 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F3A DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F71 DUP2 PUSH2 0x3F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3F8D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3F31 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3FA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3F68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4008 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x401C JUMPI PUSH2 0x401B PUSH2 0x3FC1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407E PUSH1 0x2C DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4089 DUP3 PUSH2 0x4022 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40AD DUP2 PUSH2 0x4071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4110 PUSH1 0x2C DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x411B DUP3 PUSH2 0x40B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x413F DUP2 PUSH2 0x4103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4180 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x418B DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x41C0 JUMPI PUSH2 0x41BF PUSH2 0x4146 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4201 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x420C DUP3 PUSH2 0x41CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4230 DUP2 PUSH2 0x41F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4293 PUSH1 0x38 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x429E DUP3 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42C2 DUP2 PUSH2 0x4286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4325 PUSH1 0x2E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4330 DUP3 PUSH2 0x42C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4354 DUP2 PUSH2 0x4318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438A PUSH2 0x4385 PUSH2 0x4380 DUP5 PUSH2 0x435B JUMP JUMPDEST PUSH2 0x4365 JUMP JUMPDEST PUSH2 0x3A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439A DUP2 PUSH2 0x436F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4391 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C6 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D1 DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x43E4 JUMPI PUSH2 0x43E3 PUSH2 0x4146 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x25 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x441E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44A9 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E6 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x44F1 DUP3 PUSH2 0x44B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4515 DUP2 PUSH2 0x44D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4531 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x453E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x454B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4558 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4597 PUSH1 0x19 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A2 DUP3 PUSH2 0x4561 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C6 DUP2 PUSH2 0x458A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4603 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x460E DUP3 PUSH2 0x45CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x45F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x464E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x465B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x4668 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x4675 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4682 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x468F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D0 PUSH1 0x1E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x46DB DUP3 PUSH2 0x469A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46FF DUP2 PUSH2 0x46C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4762 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x476D DUP3 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4791 DUP2 PUSH2 0x4755 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F4 PUSH1 0x24 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x47FF DUP3 PUSH2 0x4798 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4823 DUP2 PUSH2 0x47E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4886 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4891 DUP3 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B5 DUP2 PUSH2 0x4879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F2 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x48FD DUP3 PUSH2 0x48BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4921 DUP2 PUSH2 0x48E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4984 PUSH1 0x25 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x498F DUP3 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B3 DUP2 PUSH2 0x4977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A16 PUSH1 0x23 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A21 DUP3 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A45 DUP2 PUSH2 0x4A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA8 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AB3 DUP3 PUSH2 0x4A4C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AD7 DUP2 PUSH2 0x4A9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AED DUP2 PUSH2 0x3D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B09 JUMPI PUSH2 0x4B08 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B17 DUP5 DUP3 DUP6 ADD PUSH2 0x4ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7C PUSH1 0x2E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B87 DUP3 PUSH2 0x4B20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BAB DUP2 PUSH2 0x4B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0E PUSH1 0x29 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C19 DUP3 PUSH2 0x4BB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3D DUP2 PUSH2 0x4C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7A PUSH1 0x20 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C85 DUP3 PUSH2 0x4C44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CA9 DUP2 PUSH2 0x4C6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0C PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D17 DUP3 PUSH2 0x4CB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D3B DUP2 PUSH2 0x4CFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9E PUSH1 0x2B DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA9 DUP3 PUSH2 0x4D42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DCD DUP2 PUSH2 0x4D91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4DE9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4DF6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4E03 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4E10 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4E1D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C6D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E83 PUSH1 0x2D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8E DUP3 PUSH2 0x4E27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB2 DUP2 PUSH2 0x4E76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF3 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x4EFE DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4F0E JUMPI PUSH2 0x4F0D PUSH2 0x4EB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4F PUSH1 0x14 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F5A DUP3 PUSH2 0x4F19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F7E DUP2 PUSH2 0x4F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FE1 PUSH1 0x30 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FEC DUP3 PUSH2 0x4F85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5010 DUP2 PUSH2 0x4FD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x502C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x5039 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5076 PUSH1 0x10 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5081 DUP3 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50A5 DUP2 PUSH2 0x5069 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50ED PUSH1 0x2 DUP4 PUSH2 0x50AC JUMP JUMPDEST SWAP2 POP PUSH2 0x50F8 DUP3 PUSH2 0x50B7 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x511E PUSH2 0x5119 DUP3 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x5103 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512F DUP3 PUSH2 0x50E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x513B DUP3 DUP6 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x514B DUP3 DUP5 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5170 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x517D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x518A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x5197 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3A85 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5205 PUSH1 0x18 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5210 DUP3 PUSH2 0x51CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5234 DUP2 PUSH2 0x51F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5271 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x527C DUP3 PUSH2 0x523B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52A0 DUP2 PUSH2 0x5264 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5303 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x530E DUP3 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5332 DUP2 PUSH2 0x52F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5395 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x53A0 DUP3 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C4 DUP2 PUSH2 0x5388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5427 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5432 DUP3 PUSH2 0x53CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5456 DUP2 PUSH2 0x541A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E DUP3 PUSH2 0x545D JUMP JUMPDEST PUSH2 0x5488 DUP2 DUP6 PUSH2 0x5468 JUMP JUMPDEST SWAP4 POP PUSH2 0x5498 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x380A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B0 DUP3 DUP5 PUSH2 0x5473 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F1 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x54FC DUP3 PUSH2 0x54BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5520 DUP2 PUSH2 0x54E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5583 PUSH1 0x27 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x558E DUP3 PUSH2 0x5527 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B2 DUP2 PUSH2 0x5576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220C677CF MLOAD 0xD7 0xED 0xCE 0x4E INVALID 0xE0 DUP10 KECCAK256 0xF 0xCF 0xCD 0xC3 0xBC MSTORE PUSH20 0x188D65885E2E92384C235B254664736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"643:1715:23:-:0;;;1332:4:6;1289:48;;;;;;;;;864:53:23;;;;;;;;;;888:22;:20;;;:22;;:::i;:::-;643:1715;;5388:279:5;5456:13;;;;;;;;;;;5455:14;5447:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5542:15;5527:30;;:12;;;;;;;;;;:30;;;5523:138;;;5588:15;5573:12;;:30;;;;;;;;;;;;;;;;;;5622:28;5634:15;5622:28;;;;;;:::i;:::-;;;;;;;;5523:138;5388:279::o;7:169:24:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;643:1715:23:-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_2539":{"entryPoint":2310,"id":2539,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_3778":{"entryPoint":10029,"id":3778,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_3787":{"entryPoint":10039,"id":3787,"parameterSlots":0,"returnSlots":1},"@__EIP712_init_unchained_3711":{"entryPoint":11450,"id":3711,"parameterSlots":2,"returnSlots":0},"@__ERC20Permit_init_2431":{"entryPoint":9420,"id":2431,"parameterSlots":1,"returnSlots":0},"@__ERC20Votes_init_1722":{"entryPoint":9565,"id":1722,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_1059":{"entryPoint":9149,"id":1059,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_1077":{"entryPoint":11116,"id":1077,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_26":{"entryPoint":9331,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_37":{"entryPoint":11353,"id":37,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_916":{"entryPoint":9242,"id":916,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_926":{"entryPoint":11245,"id":926,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_767":{"entryPoint":9646,"id":767,"parameterSlots":0,"returnSlots":0},"@_add_2338":{"entryPoint":13202,"id":2338,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1617":{"entryPoint":13878,"id":1617,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_2120":{"entryPoint":12463,"id":2120,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6290":{"entryPoint":10013,"id":6290,"parameterSlots":3,"returnSlots":0},"@_approve_1552":{"entryPoint":6243,"id":1552,"parameterSlots":3,"returnSlots":0},"@_authorizeUpgrade_6269":{"entryPoint":7637,"id":6269,"parameterSlots":1,"returnSlots":0},"@_beforeTokenTransfer_1606":{"entryPoint":12458,"id":1606,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6260":{"entryPoint":9989,"id":6260,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3753":{"entryPoint":10049,"id":3753,"parameterSlots":3,"returnSlots":1},"@_checkOwner_68":{"entryPoint":8297,"id":68,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_1948":{"entryPoint":8029,"id":1948,"parameterSlots":2,"returnSlots":1},"@_delegate_2159":{"entryPoint":8536,"id":2159,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3726":{"entryPoint":7486,"id":3726,"parameterSlots":0,"returnSlots":1},"@_functionDelegateCall_582":{"entryPoint":12585,"id":582,"parameterSlots":2,"returnSlots":1},"@_getImplementation_266":{"entryPoint":7550,"id":266,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3769":{"entryPoint":9826,"id":3769,"parameterSlots":1,"returnSlots":1},"@_maxSupply_2035":{"entryPoint":13166,"id":2035,"parameterSlots":0,"returnSlots":1},"@_mint_1435":{"entryPoint":12813,"id":1435,"parameterSlots":2,"returnSlots":0},"@_mint_2067":{"entryPoint":10467,"id":2067,"parameterSlots":2,"returnSlots":0},"@_mint_6308":{"entryPoint":8522,"id":6308,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2230":{"entryPoint":10609,"id":2230,"parameterSlots":3,"returnSlots":0},"@_msgSender_2880":{"entryPoint":6235,"id":2880,"parameterSlots":0,"returnSlots":1},"@_pause_990":{"entryPoint":9727,"id":990,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_963":{"entryPoint":11573,"id":963,"parameterSlots":0,"returnSlots":0},"@_requirePaused_974":{"entryPoint":10394,"id":974,"parameterSlots":0,"returnSlots":0},"@_setImplementation_290":{"entryPoint":10127,"id":290,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1595":{"entryPoint":6702,"id":1595,"parameterSlots":3,"returnSlots":0},"@_subtract_2352":{"entryPoint":13856,"id":2352,"parameterSlots":2,"returnSlots":1},"@_throwError_3319":{"entryPoint":11967,"id":3319,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_125":{"entryPoint":8902,"id":125,"parameterSlots":1,"returnSlots":0},"@_transfer_1379":{"entryPoint":6842,"id":1379,"parameterSlots":3,"returnSlots":0},"@_unpause_1006":{"entryPoint":8423,"id":1006,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_386":{"entryPoint":7648,"id":386,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_333":{"entryPoint":10312,"id":333,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_305":{"entryPoint":12506,"id":305,"parameterSlots":1,"returnSlots":0},"@_useNonce_2568":{"entryPoint":9895,"id":2568,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_2324":{"entryPoint":13224,"id":2324,"parameterSlots":3,"returnSlots":2},"@allowance_1174":{"entryPoint":5695,"id":1174,"parameterSlots":2,"returnSlots":1},"@approve_1199":{"entryPoint":2209,"id":1199,"parameterSlots":2,"returnSlots":1},"@average_3859":{"entryPoint":10356,"id":3859,"parameterSlots":2,"returnSlots":1},"@balanceOf_1131":{"entryPoint":3698,"id":1131,"parameterSlots":1,"returnSlots":1},"@checkpoints_1770":{"entryPoint":5830,"id":1770,"parameterSlots":2,"returnSlots":1},"@current_2913":{"entryPoint":9100,"id":2913,"parameterSlots":1,"returnSlots":1},"@decimals_1107":{"entryPoint":2301,"id":1107,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1302":{"entryPoint":4959,"id":1302,"parameterSlots":2,"returnSlots":1},"@delegateBySig_2022":{"entryPoint":5113,"id":2022,"parameterSlots":6,"returnSlots":0},"@delegate_1962":{"entryPoint":3570,"id":1962,"parameterSlots":1,"returnSlots":0},"@delegates_1801":{"entryPoint":3464,"id":1801,"parameterSlots":1,"returnSlots":1},"@getAddressSlot_2995":{"entryPoint":10107,"id":2995,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_3006":{"entryPoint":10117,"id":3006,"parameterSlots":1,"returnSlots":1},"@getPastTotalSupply_1882":{"entryPoint":4451,"id":1882,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1859":{"entryPoint":2773,"id":1859,"parameterSlots":2,"returnSlots":1},"@getVotes_1832":{"entryPoint":4684,"id":1832,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_1261":{"entryPoint":2718,"id":1261,"parameterSlots":2,"returnSlots":1},"@increment_2927":{"entryPoint":12436,"id":2927,"parameterSlots":1,"returnSlots":0},"@initialize_6206":{"entryPoint":3871,"id":6206,"parameterSlots":0,"returnSlots":0},"@isContract_2628":{"entryPoint":9114,"id":2628,"parameterSlots":1,"returnSlots":1},"@mint_6239":{"entryPoint":2940,"id":6239,"parameterSlots":2,"returnSlots":0},"@name_1087":{"entryPoint":2063,"id":1087,"parameterSlots":0,"returnSlots":1},"@nonces_2528":{"entryPoint":3791,"id":2528,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1787":{"entryPoint":3613,"id":1787,"parameterSlots":1,"returnSlots":1},"@owner_54":{"entryPoint":4409,"id":54,"parameterSlots":0,"returnSlots":1},"@pause_6215":{"entryPoint":4391,"id":6215,"parameterSlots":0,"returnSlots":0},"@paused_951":{"entryPoint":3590,"id":951,"parameterSlots":0,"returnSlots":1},"@permit_2512":{"entryPoint":5373,"id":2512,"parameterSlots":7,"returnSlots":0},"@proxiableUUID_830":{"entryPoint":3279,"id":830,"parameterSlots":0,"returnSlots":1},"@recover_3583":{"entryPoint":9852,"id":3583,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":3771,"id":82,"parameterSlots":0,"returnSlots":0},"@symbol_1097":{"entryPoint":4538,"id":1097,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_3642":{"entryPoint":11647,"id":3642,"parameterSlots":2,"returnSlots":1},"@toUint224_4400":{"entryPoint":13986,"id":4400,"parameterSlots":1,"returnSlots":1},"@toUint32_5000":{"entryPoint":8819,"id":5000,"parameterSlots":1,"returnSlots":1},"@totalSupply_1117":{"entryPoint":2244,"id":1117,"parameterSlots":0,"returnSlots":1},"@transferFrom_1232":{"entryPoint":2254,"id":1232,"parameterSlots":3,"returnSlots":1},"@transferOwnership_105":{"entryPoint":6103,"id":105,"parameterSlots":1,"returnSlots":0},"@transfer_1156":{"entryPoint":5078,"id":1156,"parameterSlots":2,"returnSlots":1},"@tryRecover_3550":{"entryPoint":11698,"id":3550,"parameterSlots":4,"returnSlots":2},"@unpause_6224":{"entryPoint":2922,"id":6224,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_873":{"entryPoint":2962,"id":873,"parameterSlots":2,"returnSlots":0},"@upgradeTo_852":{"entryPoint":2325,"id":852,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_2852":{"entryPoint":13883,"id":2852,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":15265,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":14598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":15681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":19166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":15331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":14652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":16092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":15637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":16005,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":14833,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":15843,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":15377,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":14673,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":15702,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":16113,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":19187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15469,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14749,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":14981,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":20749,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":17297,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":20984,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":18953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack":{"entryPoint":16884,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":20290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":17625,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":21092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":17802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":18261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":18553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20704,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack":{"entryPoint":16497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":18661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":17910,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":19099,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":21238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack":{"entryPoint":16643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack":{"entryPoint":17030,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":20585,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack":{"entryPoint":19457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":17176,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack":{"entryPoint":21384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack":{"entryPoint":19311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":18115,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":20086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":20436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":19565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":21878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":21530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":18807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":19711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":18407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":19857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":17517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":21732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1733_memory_ptr_to_t_struct$_Checkpoint_$1733_memory_ptr_fromStack":{"entryPoint":16247,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":16232,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14791,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":16177,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":15527,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":14929,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":20772,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":14996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":17977,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":17692,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":19924,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":20827,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":17312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21019,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17660,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17837,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18296,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16532,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17945,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17211,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19346,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18150,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18442,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19892,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1733_memory_ptr__to_t_struct$_Checkpoint_$1733_memory_ptr__fromStack_reversed":{"entryPoint":16294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20503,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":15542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":14944,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":15174,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14505,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":15201,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":21597,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14318,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21608,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14329,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20652,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16757,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20200,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":17339,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":14557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14971,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":17243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":14525,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":16192,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":15511,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14916,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":17263,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":15250,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":14346,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":16368,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":15125,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":17253,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":20739,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":16710,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20153,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":20896,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16321,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17391,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15078,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":15068,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":15073,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14520,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14515,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14397,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":20943,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":18874,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d":{"entryPoint":16843,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":20249,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":17584,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":21051,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":17761,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":18182,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":18474,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":20663,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb":{"entryPoint":16418,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":18620,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":17869,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":19020,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":21159,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434":{"entryPoint":16564,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4":{"entryPoint":16951,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":20544,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c":{"entryPoint":19378,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":17097,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4":{"entryPoint":21305,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24":{"entryPoint":19232,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":18074,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":20007,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":20357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":19524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":21799,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":21451,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":18728,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":19632,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":18328,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":19778,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":17438,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":21691,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14575,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15658,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14629,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":16069,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":15614,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:56992:24","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:24","statements":[{"nodeType":"YulAssignment","src":"77:22:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:24"},"nodeType":"YulFunctionCall","src":"87:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:24","type":""}],"src":"7:99:24"},{"body":{"nodeType":"YulBlock","src":"208:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:24"},"nodeType":"YulFunctionCall","src":"218:19:24"},"nodeType":"YulExpressionStatement","src":"218:19:24"},{"nodeType":"YulAssignment","src":"246:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:24"},"nodeType":"YulFunctionCall","src":"261:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:24","type":""}],"src":"112:169:24"},{"body":{"nodeType":"YulBlock","src":"336:258:24","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:24"},"nodeType":"YulFunctionCall","src":"436:11:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:24"},"nodeType":"YulFunctionCall","src":"455:11:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:24"},"nodeType":"YulFunctionCall","src":"449:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:24"},"nodeType":"YulFunctionCall","src":"429:39:24"},"nodeType":"YulExpressionStatement","src":"429:39:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:24"},"nodeType":"YulFunctionCall","src":"373:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:24","statements":[{"nodeType":"YulAssignment","src":"389:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:24"},"nodeType":"YulFunctionCall","src":"394:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:24","statements":[]},"src":"365:113:24"},{"body":{"nodeType":"YulBlock","src":"512:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:24"},"nodeType":"YulFunctionCall","src":"558:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:24"},"nodeType":"YulFunctionCall","src":"551:27:24"},"nodeType":"YulExpressionStatement","src":"551:27:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:24"},"nodeType":"YulFunctionCall","src":"490:13:24"},"nodeType":"YulIf","src":"487:101:24"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:24","type":""}],"src":"287:307:24"},{"body":{"nodeType":"YulBlock","src":"648:54:24","statements":[{"nodeType":"YulAssignment","src":"658:38:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:24"},"nodeType":"YulFunctionCall","src":"672:14:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:24"},"nodeType":"YulFunctionCall","src":"688:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:24"},"nodeType":"YulFunctionCall","src":"668:28:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:24"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:24","type":""}],"src":"600:102:24"},{"body":{"nodeType":"YulBlock","src":"800:272:24","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:24"},"nodeType":"YulFunctionCall","src":"824:39:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:24","type":""}]},{"nodeType":"YulAssignment","src":"872:78:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:24"},"nodeType":"YulFunctionCall","src":"879:71:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:24"},"nodeType":"YulFunctionCall","src":"981:16:24"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:24"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:24"},"nodeType":"YulFunctionCall","src":"959:52:24"},"nodeType":"YulExpressionStatement","src":"959:52:24"},{"nodeType":"YulAssignment","src":"1020:46:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:24"},"nodeType":"YulFunctionCall","src":"1036:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:24"},"nodeType":"YulFunctionCall","src":"1027:39:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:24","type":""}],"src":"708:364:24"},{"body":{"nodeType":"YulBlock","src":"1196:195:24","statements":[{"nodeType":"YulAssignment","src":"1206:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:24"},"nodeType":"YulFunctionCall","src":"1214:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:24"},"nodeType":"YulFunctionCall","src":"1249:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:24"},"nodeType":"YulFunctionCall","src":"1268:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:24"},"nodeType":"YulFunctionCall","src":"1242:47:24"},"nodeType":"YulExpressionStatement","src":"1242:47:24"},{"nodeType":"YulAssignment","src":"1298:86:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:24"},"nodeType":"YulFunctionCall","src":"1306:78:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:24","type":""}],"src":"1078:313:24"},{"body":{"nodeType":"YulBlock","src":"1437:35:24","statements":[{"nodeType":"YulAssignment","src":"1447:19:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:24"},"nodeType":"YulFunctionCall","src":"1457:9:24"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:24"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:24","type":""}],"src":"1397:75:24"},{"body":{"nodeType":"YulBlock","src":"1567:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:24"},"nodeType":"YulFunctionCall","src":"1577:12:24"},"nodeType":"YulExpressionStatement","src":"1577:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:24"},{"body":{"nodeType":"YulBlock","src":"1690:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:24"},"nodeType":"YulFunctionCall","src":"1700:12:24"},"nodeType":"YulExpressionStatement","src":"1700:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:24"},{"body":{"nodeType":"YulBlock","src":"1769:81:24","statements":[{"nodeType":"YulAssignment","src":"1779:65:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:24"},"nodeType":"YulFunctionCall","src":"1790:54:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:24"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:24","type":""}],"src":"1724:126:24"},{"body":{"nodeType":"YulBlock","src":"1901:51:24","statements":[{"nodeType":"YulAssignment","src":"1911:35:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:24"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:24"},"nodeType":"YulFunctionCall","src":"1922:24:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:24"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:24","type":""}],"src":"1856:96:24"},{"body":{"nodeType":"YulBlock","src":"2001:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:24"},"nodeType":"YulFunctionCall","src":"2060:12:24"},"nodeType":"YulExpressionStatement","src":"2060:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:24"},"nodeType":"YulFunctionCall","src":"2031:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:24"},"nodeType":"YulFunctionCall","src":"2021:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:24"},"nodeType":"YulFunctionCall","src":"2014:43:24"},"nodeType":"YulIf","src":"2011:63:24"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:24","type":""}],"src":"1958:122:24"},{"body":{"nodeType":"YulBlock","src":"2138:87:24","statements":[{"nodeType":"YulAssignment","src":"2148:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:24"},"nodeType":"YulFunctionCall","src":"2157:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:24"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:24"},"nodeType":"YulFunctionCall","src":"2186:33:24"},"nodeType":"YulExpressionStatement","src":"2186:33:24"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:24","type":""}],"src":"2086:139:24"},{"body":{"nodeType":"YulBlock","src":"2276:32:24","statements":[{"nodeType":"YulAssignment","src":"2286:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:24"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:24","type":""}],"src":"2231:77:24"},{"body":{"nodeType":"YulBlock","src":"2357:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:24"},"nodeType":"YulFunctionCall","src":"2416:12:24"},"nodeType":"YulExpressionStatement","src":"2416:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:24"},"nodeType":"YulFunctionCall","src":"2387:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:24"},"nodeType":"YulFunctionCall","src":"2377:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:24"},"nodeType":"YulFunctionCall","src":"2370:43:24"},"nodeType":"YulIf","src":"2367:63:24"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:24","type":""}],"src":"2314:122:24"},{"body":{"nodeType":"YulBlock","src":"2494:87:24","statements":[{"nodeType":"YulAssignment","src":"2504:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:24"},"nodeType":"YulFunctionCall","src":"2513:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:24"},"nodeType":"YulFunctionCall","src":"2542:33:24"},"nodeType":"YulExpressionStatement","src":"2542:33:24"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:24","type":""}],"src":"2442:139:24"},{"body":{"nodeType":"YulBlock","src":"2670:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:24"},"nodeType":"YulFunctionCall","src":"2718:79:24"},"nodeType":"YulExpressionStatement","src":"2718:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:24"},"nodeType":"YulFunctionCall","src":"2687:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:24"},"nodeType":"YulFunctionCall","src":"2683:32:24"},"nodeType":"YulIf","src":"2680:119:24"},{"nodeType":"YulBlock","src":"2809:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:24"},"nodeType":"YulFunctionCall","src":"2884:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:24"},"nodeType":"YulFunctionCall","src":"2863:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:24"}]}]},{"nodeType":"YulBlock","src":"2936:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:24"},"nodeType":"YulFunctionCall","src":"3012:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:24"},"nodeType":"YulFunctionCall","src":"2991:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:24","type":""}],"src":"2587:474:24"},{"body":{"nodeType":"YulBlock","src":"3109:48:24","statements":[{"nodeType":"YulAssignment","src":"3119:32:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:24"},"nodeType":"YulFunctionCall","src":"3137:13:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:24"},"nodeType":"YulFunctionCall","src":"3130:21:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:24"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:24","type":""}],"src":"3067:90:24"},{"body":{"nodeType":"YulBlock","src":"3222:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:24"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:24"},"nodeType":"YulFunctionCall","src":"3244:21:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:24"},"nodeType":"YulFunctionCall","src":"3232:34:24"},"nodeType":"YulExpressionStatement","src":"3232:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:24","type":""}],"src":"3163:109:24"},{"body":{"nodeType":"YulBlock","src":"3370:118:24","statements":[{"nodeType":"YulAssignment","src":"3380:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:24"},"nodeType":"YulFunctionCall","src":"3388:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:24"},"nodeType":"YulFunctionCall","src":"3463:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:24"},"nodeType":"YulFunctionCall","src":"3416:65:24"},"nodeType":"YulExpressionStatement","src":"3416:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:24","type":""}],"src":"3278:210:24"},{"body":{"nodeType":"YulBlock","src":"3559:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:24"},"nodeType":"YulFunctionCall","src":"3581:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:24"},"nodeType":"YulFunctionCall","src":"3569:37:24"},"nodeType":"YulExpressionStatement","src":"3569:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:24","type":""}],"src":"3494:118:24"},{"body":{"nodeType":"YulBlock","src":"3716:124:24","statements":[{"nodeType":"YulAssignment","src":"3726:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:24"},"nodeType":"YulFunctionCall","src":"3734:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:24"},"nodeType":"YulFunctionCall","src":"3815:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:24"},"nodeType":"YulFunctionCall","src":"3762:71:24"},"nodeType":"YulExpressionStatement","src":"3762:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:24","type":""}],"src":"3618:222:24"},{"body":{"nodeType":"YulBlock","src":"3946:519:24","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:24"},"nodeType":"YulFunctionCall","src":"3994:79:24"},"nodeType":"YulExpressionStatement","src":"3994:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:24"},"nodeType":"YulFunctionCall","src":"3963:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:24"},"nodeType":"YulFunctionCall","src":"3959:32:24"},"nodeType":"YulIf","src":"3956:119:24"},{"nodeType":"YulBlock","src":"4085:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:24"},"nodeType":"YulFunctionCall","src":"4160:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:24"},"nodeType":"YulFunctionCall","src":"4139:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:24"}]}]},{"nodeType":"YulBlock","src":"4212:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:24"},"nodeType":"YulFunctionCall","src":"4288:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:24"},"nodeType":"YulFunctionCall","src":"4267:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:24"}]}]},{"nodeType":"YulBlock","src":"4340:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:24"},"nodeType":"YulFunctionCall","src":"4416:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:24"},"nodeType":"YulFunctionCall","src":"4395:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:24","type":""}],"src":"3846:619:24"},{"body":{"nodeType":"YulBlock","src":"4514:43:24","statements":[{"nodeType":"YulAssignment","src":"4524:27:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:24"},"nodeType":"YulFunctionCall","src":"4535:16:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:24"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:24","type":""}],"src":"4471:86:24"},{"body":{"nodeType":"YulBlock","src":"4624:51:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:24"},"nodeType":"YulFunctionCall","src":"4646:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:24"},"nodeType":"YulFunctionCall","src":"4634:35:24"},"nodeType":"YulExpressionStatement","src":"4634:35:24"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:24","type":""}],"src":"4563:112:24"},{"body":{"nodeType":"YulBlock","src":"4775:120:24","statements":[{"nodeType":"YulAssignment","src":"4785:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:24"},"nodeType":"YulFunctionCall","src":"4793:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:24"},"nodeType":"YulFunctionCall","src":"4870:17:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:24"},"nodeType":"YulFunctionCall","src":"4821:67:24"},"nodeType":"YulExpressionStatement","src":"4821:67:24"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:24","type":""}],"src":"4681:214:24"},{"body":{"nodeType":"YulBlock","src":"4946:32:24","statements":[{"nodeType":"YulAssignment","src":"4956:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"4967:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:24"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:24","type":""}],"src":"4901:77:24"},{"body":{"nodeType":"YulBlock","src":"5049:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5066:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5071:17:24"},"nodeType":"YulFunctionCall","src":"5071:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5059:6:24"},"nodeType":"YulFunctionCall","src":"5059:37:24"},"nodeType":"YulExpressionStatement","src":"5059:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5037:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5044:3:24","type":""}],"src":"4984:118:24"},{"body":{"nodeType":"YulBlock","src":"5206:124:24","statements":[{"nodeType":"YulAssignment","src":"5216:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:24"},"nodeType":"YulFunctionCall","src":"5224:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5216:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5296:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:24"},"nodeType":"YulFunctionCall","src":"5305:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5252:43:24"},"nodeType":"YulFunctionCall","src":"5252:71:24"},"nodeType":"YulExpressionStatement","src":"5252:71:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5178:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5201:4:24","type":""}],"src":"5108:222:24"},{"body":{"nodeType":"YulBlock","src":"5402:263:24","statements":[{"body":{"nodeType":"YulBlock","src":"5448:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5450:77:24"},"nodeType":"YulFunctionCall","src":"5450:79:24"},"nodeType":"YulExpressionStatement","src":"5450:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5423:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5419:3:24"},"nodeType":"YulFunctionCall","src":"5419:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:24"},"nodeType":"YulFunctionCall","src":"5415:32:24"},"nodeType":"YulIf","src":"5412:119:24"},{"nodeType":"YulBlock","src":"5541:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"5570:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5560:6:24","type":""}]},{"nodeType":"YulAssignment","src":"5585:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"5631:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:24"},"nodeType":"YulFunctionCall","src":"5616:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5595:20:24"},"nodeType":"YulFunctionCall","src":"5595:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5383:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5395:6:24","type":""}],"src":"5336:329:24"},{"body":{"nodeType":"YulBlock","src":"5760:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5777:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5780:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5770:6:24"},"nodeType":"YulFunctionCall","src":"5770:12:24"},"nodeType":"YulExpressionStatement","src":"5770:12:24"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5671:117:24"},{"body":{"nodeType":"YulBlock","src":"5883:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5900:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5903:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5893:6:24"},"nodeType":"YulFunctionCall","src":"5893:12:24"},"nodeType":"YulExpressionStatement","src":"5893:12:24"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5794:117:24"},{"body":{"nodeType":"YulBlock","src":"5945:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5962:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5965:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5955:6:24"},"nodeType":"YulFunctionCall","src":"5955:88:24"},"nodeType":"YulExpressionStatement","src":"5955:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6059:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6062:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6052:6:24"},"nodeType":"YulFunctionCall","src":"6052:15:24"},"nodeType":"YulExpressionStatement","src":"6052:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6083:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6086:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6076:6:24"},"nodeType":"YulFunctionCall","src":"6076:15:24"},"nodeType":"YulExpressionStatement","src":"6076:15:24"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5917:180:24"},{"body":{"nodeType":"YulBlock","src":"6146:238:24","statements":[{"nodeType":"YulVariableDeclaration","src":"6156:58:24","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6178:6:24"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6208:4:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6186:21:24"},"nodeType":"YulFunctionCall","src":"6186:27:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:24"},"nodeType":"YulFunctionCall","src":"6174:40:24"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6160:10:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"6325:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6327:16:24"},"nodeType":"YulFunctionCall","src":"6327:18:24"},"nodeType":"YulExpressionStatement","src":"6327:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6268:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"6280:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6265:2:24"},"nodeType":"YulFunctionCall","src":"6265:34:24"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6304:10:24"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6316:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6301:2:24"},"nodeType":"YulFunctionCall","src":"6301:22:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6262:2:24"},"nodeType":"YulFunctionCall","src":"6262:62:24"},"nodeType":"YulIf","src":"6259:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6363:2:24","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6367:10:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6356:6:24"},"nodeType":"YulFunctionCall","src":"6356:22:24"},"nodeType":"YulExpressionStatement","src":"6356:22:24"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6132:6:24","type":""},{"name":"size","nodeType":"YulTypedName","src":"6140:4:24","type":""}],"src":"6103:281:24"},{"body":{"nodeType":"YulBlock","src":"6431:88:24","statements":[{"nodeType":"YulAssignment","src":"6441:30:24","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6451:18:24"},"nodeType":"YulFunctionCall","src":"6451:20:24"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6441:6:24"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6500:6:24"},{"name":"size","nodeType":"YulIdentifier","src":"6508:4:24"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6480:19:24"},"nodeType":"YulFunctionCall","src":"6480:33:24"},"nodeType":"YulExpressionStatement","src":"6480:33:24"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6415:4:24","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6424:6:24","type":""}],"src":"6390:129:24"},{"body":{"nodeType":"YulBlock","src":"6591:241:24","statements":[{"body":{"nodeType":"YulBlock","src":"6696:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6698:16:24"},"nodeType":"YulFunctionCall","src":"6698:18:24"},"nodeType":"YulExpressionStatement","src":"6698:18:24"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6668:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6676:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6665:2:24"},"nodeType":"YulFunctionCall","src":"6665:30:24"},"nodeType":"YulIf","src":"6662:56:24"},{"nodeType":"YulAssignment","src":"6728:37:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6758:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6736:21:24"},"nodeType":"YulFunctionCall","src":"6736:29:24"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6728:4:24"}]},{"nodeType":"YulAssignment","src":"6802:23:24","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6814:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"6820:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6810:3:24"},"nodeType":"YulFunctionCall","src":"6810:15:24"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6802:4:24"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6575:6:24","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6586:4:24","type":""}],"src":"6525:307:24"},{"body":{"nodeType":"YulBlock","src":"6889:103:24","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6912:3:24"},{"name":"src","nodeType":"YulIdentifier","src":"6917:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"6922:6:24"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6899:12:24"},"nodeType":"YulFunctionCall","src":"6899:30:24"},"nodeType":"YulExpressionStatement","src":"6899:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6970:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"6975:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6966:3:24"},"nodeType":"YulFunctionCall","src":"6966:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"6984:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6959:6:24"},"nodeType":"YulFunctionCall","src":"6959:27:24"},"nodeType":"YulExpressionStatement","src":"6959:27:24"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6871:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6876:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"6881:6:24","type":""}],"src":"6838:154:24"},{"body":{"nodeType":"YulBlock","src":"7081:327:24","statements":[{"nodeType":"YulAssignment","src":"7091:74:24","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7157:6:24"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7116:40:24"},"nodeType":"YulFunctionCall","src":"7116:48:24"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7100:15:24"},"nodeType":"YulFunctionCall","src":"7100:65:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7091:5:24"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7181:5:24"},{"name":"length","nodeType":"YulIdentifier","src":"7188:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7174:6:24"},"nodeType":"YulFunctionCall","src":"7174:21:24"},"nodeType":"YulExpressionStatement","src":"7174:21:24"},{"nodeType":"YulVariableDeclaration","src":"7204:27:24","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7219:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"7226:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7215:3:24"},"nodeType":"YulFunctionCall","src":"7215:16:24"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7208:3:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"7269:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7271:77:24"},"nodeType":"YulFunctionCall","src":"7271:79:24"},"nodeType":"YulExpressionStatement","src":"7271:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7250:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"7255:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7246:3:24"},"nodeType":"YulFunctionCall","src":"7246:16:24"},{"name":"end","nodeType":"YulIdentifier","src":"7264:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7243:2:24"},"nodeType":"YulFunctionCall","src":"7243:25:24"},"nodeType":"YulIf","src":"7240:112:24"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7385:3:24"},{"name":"dst","nodeType":"YulIdentifier","src":"7390:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"7395:6:24"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"7361:23:24"},"nodeType":"YulFunctionCall","src":"7361:41:24"},"nodeType":"YulExpressionStatement","src":"7361:41:24"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7054:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"7059:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"7067:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7075:5:24","type":""}],"src":"6998:410:24"},{"body":{"nodeType":"YulBlock","src":"7488:277:24","statements":[{"body":{"nodeType":"YulBlock","src":"7537:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7539:77:24"},"nodeType":"YulFunctionCall","src":"7539:79:24"},"nodeType":"YulExpressionStatement","src":"7539:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7516:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"7524:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7512:3:24"},"nodeType":"YulFunctionCall","src":"7512:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"7531:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7508:3:24"},"nodeType":"YulFunctionCall","src":"7508:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7501:6:24"},"nodeType":"YulFunctionCall","src":"7501:35:24"},"nodeType":"YulIf","src":"7498:122:24"},{"nodeType":"YulVariableDeclaration","src":"7629:34:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7656:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7643:12:24"},"nodeType":"YulFunctionCall","src":"7643:20:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7633:6:24","type":""}]},{"nodeType":"YulAssignment","src":"7672:87:24","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7732:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"7740:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:24"},"nodeType":"YulFunctionCall","src":"7728:17:24"},{"name":"length","nodeType":"YulIdentifier","src":"7747:6:24"},{"name":"end","nodeType":"YulIdentifier","src":"7755:3:24"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7681:46:24"},"nodeType":"YulFunctionCall","src":"7681:78:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7672:5:24"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7466:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"7474:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7482:5:24","type":""}],"src":"7427:338:24"},{"body":{"nodeType":"YulBlock","src":"7863:560:24","statements":[{"body":{"nodeType":"YulBlock","src":"7909:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7911:77:24"},"nodeType":"YulFunctionCall","src":"7911:79:24"},"nodeType":"YulExpressionStatement","src":"7911:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7884:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7880:3:24"},"nodeType":"YulFunctionCall","src":"7880:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"7905:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7876:3:24"},"nodeType":"YulFunctionCall","src":"7876:32:24"},"nodeType":"YulIf","src":"7873:119:24"},{"nodeType":"YulBlock","src":"8002:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"8017:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"8031:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8021:6:24","type":""}]},{"nodeType":"YulAssignment","src":"8046:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"8092:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:24"},"nodeType":"YulFunctionCall","src":"8077:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8101:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8056:20:24"},"nodeType":"YulFunctionCall","src":"8056:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8046:6:24"}]}]},{"nodeType":"YulBlock","src":"8129:287:24","statements":[{"nodeType":"YulVariableDeclaration","src":"8144:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8175:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8186:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8171:3:24"},"nodeType":"YulFunctionCall","src":"8171:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8158:12:24"},"nodeType":"YulFunctionCall","src":"8158:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8148:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"8237:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8239:77:24"},"nodeType":"YulFunctionCall","src":"8239:79:24"},"nodeType":"YulExpressionStatement","src":"8239:79:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8209:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"8217:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8206:2:24"},"nodeType":"YulFunctionCall","src":"8206:30:24"},"nodeType":"YulIf","src":"8203:117:24"},{"nodeType":"YulAssignment","src":"8334:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8378:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"8389:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8374:3:24"},"nodeType":"YulFunctionCall","src":"8374:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8398:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8344:29:24"},"nodeType":"YulFunctionCall","src":"8344:62:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8334:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7825:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7836:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7848:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7856:6:24","type":""}],"src":"7771:652:24"},{"body":{"nodeType":"YulBlock","src":"8494:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8511:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8534:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8516:17:24"},"nodeType":"YulFunctionCall","src":"8516:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8504:6:24"},"nodeType":"YulFunctionCall","src":"8504:37:24"},"nodeType":"YulExpressionStatement","src":"8504:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8482:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8489:3:24","type":""}],"src":"8429:118:24"},{"body":{"nodeType":"YulBlock","src":"8651:124:24","statements":[{"nodeType":"YulAssignment","src":"8661:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8673:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8684:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8669:3:24"},"nodeType":"YulFunctionCall","src":"8669:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8661:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8741:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8754:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8765:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8750:3:24"},"nodeType":"YulFunctionCall","src":"8750:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8697:43:24"},"nodeType":"YulFunctionCall","src":"8697:71:24"},"nodeType":"YulExpressionStatement","src":"8697:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8623:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8635:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8646:4:24","type":""}],"src":"8553:222:24"},{"body":{"nodeType":"YulBlock","src":"8825:49:24","statements":[{"nodeType":"YulAssignment","src":"8835:33:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8850:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"8857:10:24","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8846:3:24"},"nodeType":"YulFunctionCall","src":"8846:22:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8835:7:24"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8807:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8817:7:24","type":""}],"src":"8781:93:24"},{"body":{"nodeType":"YulBlock","src":"8943:52:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8960:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8982:5:24"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8965:16:24"},"nodeType":"YulFunctionCall","src":"8965:23:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8953:6:24"},"nodeType":"YulFunctionCall","src":"8953:36:24"},"nodeType":"YulExpressionStatement","src":"8953:36:24"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8931:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8938:3:24","type":""}],"src":"8880:115:24"},{"body":{"nodeType":"YulBlock","src":"9097:122:24","statements":[{"nodeType":"YulAssignment","src":"9107:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9119:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"9130:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9115:3:24"},"nodeType":"YulFunctionCall","src":"9115:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9107:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9185:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"9209:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9194:3:24"},"nodeType":"YulFunctionCall","src":"9194:17:24"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"9143:41:24"},"nodeType":"YulFunctionCall","src":"9143:69:24"},"nodeType":"YulExpressionStatement","src":"9143:69:24"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9069:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9081:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9092:4:24","type":""}],"src":"9001:218:24"},{"body":{"nodeType":"YulBlock","src":"9291:263:24","statements":[{"body":{"nodeType":"YulBlock","src":"9337:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9339:77:24"},"nodeType":"YulFunctionCall","src":"9339:79:24"},"nodeType":"YulExpressionStatement","src":"9339:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9312:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"9321:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9308:3:24"},"nodeType":"YulFunctionCall","src":"9308:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"9333:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9304:3:24"},"nodeType":"YulFunctionCall","src":"9304:32:24"},"nodeType":"YulIf","src":"9301:119:24"},{"nodeType":"YulBlock","src":"9430:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"9445:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"9459:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9449:6:24","type":""}]},{"nodeType":"YulAssignment","src":"9474:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9509:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"9520:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9505:3:24"},"nodeType":"YulFunctionCall","src":"9505:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9529:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9484:20:24"},"nodeType":"YulFunctionCall","src":"9484:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9474:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9261:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9272:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9284:6:24","type":""}],"src":"9225:329:24"},{"body":{"nodeType":"YulBlock","src":"9601:77:24","statements":[{"body":{"nodeType":"YulBlock","src":"9656:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9665:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9668:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9658:6:24"},"nodeType":"YulFunctionCall","src":"9658:12:24"},"nodeType":"YulExpressionStatement","src":"9658:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9624:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9647:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9631:15:24"},"nodeType":"YulFunctionCall","src":"9631:22:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9621:2:24"},"nodeType":"YulFunctionCall","src":"9621:33:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9614:6:24"},"nodeType":"YulFunctionCall","src":"9614:41:24"},"nodeType":"YulIf","src":"9611:61:24"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9594:5:24","type":""}],"src":"9560:118:24"},{"body":{"nodeType":"YulBlock","src":"9734:85:24","statements":[{"nodeType":"YulAssignment","src":"9744:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9766:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9753:12:24"},"nodeType":"YulFunctionCall","src":"9753:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9744:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9807:5:24"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9782:24:24"},"nodeType":"YulFunctionCall","src":"9782:31:24"},"nodeType":"YulExpressionStatement","src":"9782:31:24"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9712:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"9720:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9728:5:24","type":""}],"src":"9684:135:24"},{"body":{"nodeType":"YulBlock","src":"9868:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"9925:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9934:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9937:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9927:6:24"},"nodeType":"YulFunctionCall","src":"9927:12:24"},"nodeType":"YulExpressionStatement","src":"9927:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9891:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9916:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9898:17:24"},"nodeType":"YulFunctionCall","src":"9898:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9888:2:24"},"nodeType":"YulFunctionCall","src":"9888:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9881:6:24"},"nodeType":"YulFunctionCall","src":"9881:43:24"},"nodeType":"YulIf","src":"9878:63:24"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9861:5:24","type":""}],"src":"9825:122:24"},{"body":{"nodeType":"YulBlock","src":"10005:87:24","statements":[{"nodeType":"YulAssignment","src":"10015:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10037:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10024:12:24"},"nodeType":"YulFunctionCall","src":"10024:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10015:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10080:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10053:26:24"},"nodeType":"YulFunctionCall","src":"10053:33:24"},"nodeType":"YulExpressionStatement","src":"10053:33:24"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9983:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"9991:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9999:5:24","type":""}],"src":"9953:139:24"},{"body":{"nodeType":"YulBlock","src":"10247:904:24","statements":[{"body":{"nodeType":"YulBlock","src":"10294:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10296:77:24"},"nodeType":"YulFunctionCall","src":"10296:79:24"},"nodeType":"YulExpressionStatement","src":"10296:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10268:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"10277:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10264:3:24"},"nodeType":"YulFunctionCall","src":"10264:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"10289:3:24","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10260:3:24"},"nodeType":"YulFunctionCall","src":"10260:33:24"},"nodeType":"YulIf","src":"10257:120:24"},{"nodeType":"YulBlock","src":"10387:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10402:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10416:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10406:6:24","type":""}]},{"nodeType":"YulAssignment","src":"10431:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10466:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10477:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10462:3:24"},"nodeType":"YulFunctionCall","src":"10462:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10486:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10441:20:24"},"nodeType":"YulFunctionCall","src":"10441:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10431:6:24"}]}]},{"nodeType":"YulBlock","src":"10514:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10529:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10543:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10533:6:24","type":""}]},{"nodeType":"YulAssignment","src":"10559:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10594:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10605:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10590:3:24"},"nodeType":"YulFunctionCall","src":"10590:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10614:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10569:20:24"},"nodeType":"YulFunctionCall","src":"10569:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10559:6:24"}]}]},{"nodeType":"YulBlock","src":"10642:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10657:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10671:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10661:6:24","type":""}]},{"nodeType":"YulAssignment","src":"10687:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10722:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10733:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10718:3:24"},"nodeType":"YulFunctionCall","src":"10718:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10742:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10697:20:24"},"nodeType":"YulFunctionCall","src":"10697:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10687:6:24"}]}]},{"nodeType":"YulBlock","src":"10770:116:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10785:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10799:2:24","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10789:6:24","type":""}]},{"nodeType":"YulAssignment","src":"10815:61:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10848:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10859:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10844:3:24"},"nodeType":"YulFunctionCall","src":"10844:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10868:7:24"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10825:18:24"},"nodeType":"YulFunctionCall","src":"10825:51:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10815:6:24"}]}]},{"nodeType":"YulBlock","src":"10896:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10911:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10925:3:24","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10915:6:24","type":""}]},{"nodeType":"YulAssignment","src":"10942:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10977:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10988:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10973:3:24"},"nodeType":"YulFunctionCall","src":"10973:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10997:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10952:20:24"},"nodeType":"YulFunctionCall","src":"10952:53:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10942:6:24"}]}]},{"nodeType":"YulBlock","src":"11025:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11040:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"11054:3:24","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11044:6:24","type":""}]},{"nodeType":"YulAssignment","src":"11071:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11106:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11117:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11102:3:24"},"nodeType":"YulFunctionCall","src":"11102:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11126:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11081:20:24"},"nodeType":"YulFunctionCall","src":"11081:53:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11071:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10188:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10200:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10208:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10216:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10224:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10232:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10240:6:24","type":""}],"src":"10098:1053:24"},{"body":{"nodeType":"YulBlock","src":"11323:1033:24","statements":[{"body":{"nodeType":"YulBlock","src":"11370:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11372:77:24"},"nodeType":"YulFunctionCall","src":"11372:79:24"},"nodeType":"YulExpressionStatement","src":"11372:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11344:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11353:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11340:3:24"},"nodeType":"YulFunctionCall","src":"11340:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"11365:3:24","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11336:3:24"},"nodeType":"YulFunctionCall","src":"11336:33:24"},"nodeType":"YulIf","src":"11333:120:24"},{"nodeType":"YulBlock","src":"11463:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11478:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"11492:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11482:6:24","type":""}]},{"nodeType":"YulAssignment","src":"11507:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11542:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11553:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11538:3:24"},"nodeType":"YulFunctionCall","src":"11538:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11562:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11517:20:24"},"nodeType":"YulFunctionCall","src":"11517:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11507:6:24"}]}]},{"nodeType":"YulBlock","src":"11590:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11605:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"11619:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11609:6:24","type":""}]},{"nodeType":"YulAssignment","src":"11635:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11670:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11681:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11666:3:24"},"nodeType":"YulFunctionCall","src":"11666:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11690:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11645:20:24"},"nodeType":"YulFunctionCall","src":"11645:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11635:6:24"}]}]},{"nodeType":"YulBlock","src":"11718:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11733:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"11747:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11737:6:24","type":""}]},{"nodeType":"YulAssignment","src":"11763:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11798:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11809:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:24"},"nodeType":"YulFunctionCall","src":"11794:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11818:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11773:20:24"},"nodeType":"YulFunctionCall","src":"11773:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11763:6:24"}]}]},{"nodeType":"YulBlock","src":"11846:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11861:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"11875:2:24","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11865:6:24","type":""}]},{"nodeType":"YulAssignment","src":"11891:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11926:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11937:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11922:3:24"},"nodeType":"YulFunctionCall","src":"11922:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11946:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11901:20:24"},"nodeType":"YulFunctionCall","src":"11901:53:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11891:6:24"}]}]},{"nodeType":"YulBlock","src":"11974:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"11989:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12003:3:24","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11993:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12020:61:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12053:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12064:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12049:3:24"},"nodeType":"YulFunctionCall","src":"12049:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12073:7:24"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"12030:18:24"},"nodeType":"YulFunctionCall","src":"12030:51:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12020:6:24"}]}]},{"nodeType":"YulBlock","src":"12101:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12116:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12130:3:24","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12120:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12147:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12182:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12193:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12178:3:24"},"nodeType":"YulFunctionCall","src":"12178:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12202:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12157:20:24"},"nodeType":"YulFunctionCall","src":"12157:53:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12147:6:24"}]}]},{"nodeType":"YulBlock","src":"12230:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12245:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12259:3:24","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12249:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12276:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12311:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12322:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12307:3:24"},"nodeType":"YulFunctionCall","src":"12307:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12331:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12286:20:24"},"nodeType":"YulFunctionCall","src":"12286:53:24"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12276:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11245:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11256:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11268:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11276:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11284:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11292:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11300:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11308:6:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11316:6:24","type":""}],"src":"11157:1199:24"},{"body":{"nodeType":"YulBlock","src":"12445:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"12491:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12493:77:24"},"nodeType":"YulFunctionCall","src":"12493:79:24"},"nodeType":"YulExpressionStatement","src":"12493:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12466:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"12475:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12462:3:24"},"nodeType":"YulFunctionCall","src":"12462:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"12487:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12458:3:24"},"nodeType":"YulFunctionCall","src":"12458:32:24"},"nodeType":"YulIf","src":"12455:119:24"},{"nodeType":"YulBlock","src":"12584:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12599:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12613:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12603:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12628:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12663:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12674:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12659:3:24"},"nodeType":"YulFunctionCall","src":"12659:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12683:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12638:20:24"},"nodeType":"YulFunctionCall","src":"12638:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12628:6:24"}]}]},{"nodeType":"YulBlock","src":"12711:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12726:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12740:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12730:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12756:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12791:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12802:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12787:3:24"},"nodeType":"YulFunctionCall","src":"12787:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12811:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12766:20:24"},"nodeType":"YulFunctionCall","src":"12766:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12756:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12407:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12418:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12430:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12438:6:24","type":""}],"src":"12362:474:24"},{"body":{"nodeType":"YulBlock","src":"12884:78:24","statements":[{"body":{"nodeType":"YulBlock","src":"12940:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12949:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12952:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12942:6:24"},"nodeType":"YulFunctionCall","src":"12942:12:24"},"nodeType":"YulExpressionStatement","src":"12942:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12907:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12931:5:24"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"12914:16:24"},"nodeType":"YulFunctionCall","src":"12914:23:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12904:2:24"},"nodeType":"YulFunctionCall","src":"12904:34:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12897:6:24"},"nodeType":"YulFunctionCall","src":"12897:42:24"},"nodeType":"YulIf","src":"12894:62:24"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12877:5:24","type":""}],"src":"12842:120:24"},{"body":{"nodeType":"YulBlock","src":"13019:86:24","statements":[{"nodeType":"YulAssignment","src":"13029:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13051:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13038:12:24"},"nodeType":"YulFunctionCall","src":"13038:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13029:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13093:5:24"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"13067:25:24"},"nodeType":"YulFunctionCall","src":"13067:32:24"},"nodeType":"YulExpressionStatement","src":"13067:32:24"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12997:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"13005:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13013:5:24","type":""}],"src":"12968:137:24"},{"body":{"nodeType":"YulBlock","src":"13193:390:24","statements":[{"body":{"nodeType":"YulBlock","src":"13239:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13241:77:24"},"nodeType":"YulFunctionCall","src":"13241:79:24"},"nodeType":"YulExpressionStatement","src":"13241:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13214:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13210:3:24"},"nodeType":"YulFunctionCall","src":"13210:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"13235:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13206:3:24"},"nodeType":"YulFunctionCall","src":"13206:32:24"},"nodeType":"YulIf","src":"13203:119:24"},{"nodeType":"YulBlock","src":"13332:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13347:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13361:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13351:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13376:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13411:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13422:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13407:3:24"},"nodeType":"YulFunctionCall","src":"13407:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13431:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13386:20:24"},"nodeType":"YulFunctionCall","src":"13386:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13376:6:24"}]}]},{"nodeType":"YulBlock","src":"13459:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13474:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13488:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13478:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13504:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13538:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13549:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13534:3:24"},"nodeType":"YulFunctionCall","src":"13534:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13558:7:24"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"13514:19:24"},"nodeType":"YulFunctionCall","src":"13514:52:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13504:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13155:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13166:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13178:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13186:6:24","type":""}],"src":"13111:472:24"},{"body":{"nodeType":"YulBlock","src":"13642:52:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13659:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13681:5:24"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13664:16:24"},"nodeType":"YulFunctionCall","src":"13664:23:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13652:6:24"},"nodeType":"YulFunctionCall","src":"13652:36:24"},"nodeType":"YulExpressionStatement","src":"13652:36:24"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13630:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13637:3:24","type":""}],"src":"13589:105:24"},{"body":{"nodeType":"YulBlock","src":"13745:97:24","statements":[{"nodeType":"YulAssignment","src":"13755:81:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13770:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"13777:58:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13766:3:24"},"nodeType":"YulFunctionCall","src":"13766:70:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13755:7:24"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13727:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13737:7:24","type":""}],"src":"13700:142:24"},{"body":{"nodeType":"YulBlock","src":"13903:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13920:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13943:5:24"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"13925:17:24"},"nodeType":"YulFunctionCall","src":"13925:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13913:6:24"},"nodeType":"YulFunctionCall","src":"13913:37:24"},"nodeType":"YulExpressionStatement","src":"13913:37:24"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13891:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13898:3:24","type":""}],"src":"13848:108:24"},{"body":{"nodeType":"YulBlock","src":"14174:395:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14184:26:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14200:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"14205:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14196:3:24"},"nodeType":"YulFunctionCall","src":"14196:14:24"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14188:4:24","type":""}]},{"nodeType":"YulBlock","src":"14220:167:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14260:43:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14290:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"14297:4:24","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14286:3:24"},"nodeType":"YulFunctionCall","src":"14286:16:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14280:5:24"},"nodeType":"YulFunctionCall","src":"14280:23:24"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14264:12:24","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14348:12:24"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14366:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:24","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:24"},"nodeType":"YulFunctionCall","src":"14362:14:24"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"14316:31:24"},"nodeType":"YulFunctionCall","src":"14316:61:24"},"nodeType":"YulExpressionStatement","src":"14316:61:24"}]},{"nodeType":"YulBlock","src":"14397:165:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14433:43:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14463:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"14470:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14459:3:24"},"nodeType":"YulFunctionCall","src":"14459:16:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14453:5:24"},"nodeType":"YulFunctionCall","src":"14453:23:24"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14437:12:24","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14523:12:24"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14541:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"14546:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14537:3:24"},"nodeType":"YulFunctionCall","src":"14537:14:24"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"14489:33:24"},"nodeType":"YulFunctionCall","src":"14489:63:24"},"nodeType":"YulExpressionStatement","src":"14489:63:24"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1733_memory_ptr_to_t_struct$_Checkpoint_$1733_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14161:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14168:3:24","type":""}],"src":"14052:517:24"},{"body":{"nodeType":"YulBlock","src":"14729:180:24","statements":[{"nodeType":"YulAssignment","src":"14739:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14751:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14762:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14747:3:24"},"nodeType":"YulFunctionCall","src":"14747:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14739:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14875:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14888:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14899:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14884:3:24"},"nodeType":"YulFunctionCall","src":"14884:17:24"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1733_memory_ptr_to_t_struct$_Checkpoint_$1733_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14775:99:24"},"nodeType":"YulFunctionCall","src":"14775:127:24"},"nodeType":"YulExpressionStatement","src":"14775:127:24"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1733_memory_ptr__to_t_struct$_Checkpoint_$1733_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14701:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14713:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14724:4:24","type":""}],"src":"14575:334:24"},{"body":{"nodeType":"YulBlock","src":"14943:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14960:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14963:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14953:6:24"},"nodeType":"YulFunctionCall","src":"14953:88:24"},"nodeType":"YulExpressionStatement","src":"14953:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15057:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15060:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15050:6:24"},"nodeType":"YulFunctionCall","src":"15050:15:24"},"nodeType":"YulExpressionStatement","src":"15050:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15081:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15084:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15074:6:24"},"nodeType":"YulFunctionCall","src":"15074:15:24"},"nodeType":"YulExpressionStatement","src":"15074:15:24"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14915:180:24"},{"body":{"nodeType":"YulBlock","src":"15152:269:24","statements":[{"nodeType":"YulAssignment","src":"15162:22:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15176:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"15182:1:24","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15172:3:24"},"nodeType":"YulFunctionCall","src":"15172:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15162:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"15193:38:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15223:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"15229:1:24","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15219:3:24"},"nodeType":"YulFunctionCall","src":"15219:12:24"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15197:18:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"15270:51:24","statements":[{"nodeType":"YulAssignment","src":"15284:27:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15298:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"15306:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15294:3:24"},"nodeType":"YulFunctionCall","src":"15294:17:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15284:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15250:18:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15243:6:24"},"nodeType":"YulFunctionCall","src":"15243:26:24"},"nodeType":"YulIf","src":"15240:81:24"},{"body":{"nodeType":"YulBlock","src":"15373:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15387:16:24"},"nodeType":"YulFunctionCall","src":"15387:18:24"},"nodeType":"YulExpressionStatement","src":"15387:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15337:18:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15360:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"15368:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15357:2:24"},"nodeType":"YulFunctionCall","src":"15357:14:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15334:2:24"},"nodeType":"YulFunctionCall","src":"15334:38:24"},"nodeType":"YulIf","src":"15331:84:24"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15136:4:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15145:6:24","type":""}],"src":"15101:320:24"},{"body":{"nodeType":"YulBlock","src":"15533:125:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15555:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"15563:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15551:3:24"},"nodeType":"YulFunctionCall","src":"15551:14:24"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"15567:34:24","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15544:6:24"},"nodeType":"YulFunctionCall","src":"15544:58:24"},"nodeType":"YulExpressionStatement","src":"15544:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15623:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"15631:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15619:3:24"},"nodeType":"YulFunctionCall","src":"15619:15:24"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"15636:14:24","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15612:6:24"},"nodeType":"YulFunctionCall","src":"15612:39:24"},"nodeType":"YulExpressionStatement","src":"15612:39:24"}]},"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15525:6:24","type":""}],"src":"15427:231:24"},{"body":{"nodeType":"YulBlock","src":"15810:220:24","statements":[{"nodeType":"YulAssignment","src":"15820:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15886:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15891:2:24","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15827:58:24"},"nodeType":"YulFunctionCall","src":"15827:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15820:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15992:3:24"}],"functionName":{"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nodeType":"YulIdentifier","src":"15903:88:24"},"nodeType":"YulFunctionCall","src":"15903:93:24"},"nodeType":"YulExpressionStatement","src":"15903:93:24"},{"nodeType":"YulAssignment","src":"16005:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16016:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"16021:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16012:3:24"},"nodeType":"YulFunctionCall","src":"16012:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16005:3:24"}]}]},"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15798:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15806:3:24","type":""}],"src":"15664:366:24"},{"body":{"nodeType":"YulBlock","src":"16207:248:24","statements":[{"nodeType":"YulAssignment","src":"16217:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16229:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16240:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16225:3:24"},"nodeType":"YulFunctionCall","src":"16225:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16217:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16264:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16275:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:24"},"nodeType":"YulFunctionCall","src":"16260:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16283:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"16289:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16279:3:24"},"nodeType":"YulFunctionCall","src":"16279:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16253:6:24"},"nodeType":"YulFunctionCall","src":"16253:47:24"},"nodeType":"YulExpressionStatement","src":"16253:47:24"},{"nodeType":"YulAssignment","src":"16309:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16443:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16317:124:24"},"nodeType":"YulFunctionCall","src":"16317:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16309:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16187:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16202:4:24","type":""}],"src":"16036:419:24"},{"body":{"nodeType":"YulBlock","src":"16567:125:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16589:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16597:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16585:3:24"},"nodeType":"YulFunctionCall","src":"16585:14:24"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"16601:34:24","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16578:6:24"},"nodeType":"YulFunctionCall","src":"16578:58:24"},"nodeType":"YulExpressionStatement","src":"16578:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16657:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16665:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16653:3:24"},"nodeType":"YulFunctionCall","src":"16653:15:24"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"16670:14:24","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16646:6:24"},"nodeType":"YulFunctionCall","src":"16646:39:24"},"nodeType":"YulExpressionStatement","src":"16646:39:24"}]},"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16559:6:24","type":""}],"src":"16461:231:24"},{"body":{"nodeType":"YulBlock","src":"16844:220:24","statements":[{"nodeType":"YulAssignment","src":"16854:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16920:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"16925:2:24","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16861:58:24"},"nodeType":"YulFunctionCall","src":"16861:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16854:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17026:3:24"}],"functionName":{"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nodeType":"YulIdentifier","src":"16937:88:24"},"nodeType":"YulFunctionCall","src":"16937:93:24"},"nodeType":"YulExpressionStatement","src":"16937:93:24"},{"nodeType":"YulAssignment","src":"17039:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17050:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"17055:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17046:3:24"},"nodeType":"YulFunctionCall","src":"17046:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17039:3:24"}]}]},"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16832:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16840:3:24","type":""}],"src":"16698:366:24"},{"body":{"nodeType":"YulBlock","src":"17241:248:24","statements":[{"nodeType":"YulAssignment","src":"17251:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17263:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17274:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17259:3:24"},"nodeType":"YulFunctionCall","src":"17259:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17251:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17298:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17309:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17294:3:24"},"nodeType":"YulFunctionCall","src":"17294:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17317:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"17323:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17313:3:24"},"nodeType":"YulFunctionCall","src":"17313:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17287:6:24"},"nodeType":"YulFunctionCall","src":"17287:47:24"},"nodeType":"YulExpressionStatement","src":"17287:47:24"},{"nodeType":"YulAssignment","src":"17343:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17477:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17351:124:24"},"nodeType":"YulFunctionCall","src":"17351:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17343:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17221:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17236:4:24","type":""}],"src":"17070:419:24"},{"body":{"nodeType":"YulBlock","src":"17523:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17540:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17543:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17533:6:24"},"nodeType":"YulFunctionCall","src":"17533:88:24"},"nodeType":"YulExpressionStatement","src":"17533:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17637:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17640:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17630:6:24"},"nodeType":"YulFunctionCall","src":"17630:15:24"},"nodeType":"YulExpressionStatement","src":"17630:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17661:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17664:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17654:6:24"},"nodeType":"YulFunctionCall","src":"17654:15:24"},"nodeType":"YulExpressionStatement","src":"17654:15:24"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17495:180:24"},{"body":{"nodeType":"YulBlock","src":"17725:261:24","statements":[{"nodeType":"YulAssignment","src":"17735:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17758:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17740:17:24"},"nodeType":"YulFunctionCall","src":"17740:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17735:1:24"}]},{"nodeType":"YulAssignment","src":"17769:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17792:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17774:17:24"},"nodeType":"YulFunctionCall","src":"17774:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17769:1:24"}]},{"body":{"nodeType":"YulBlock","src":"17932:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17934:16:24"},"nodeType":"YulFunctionCall","src":"17934:18:24"},"nodeType":"YulExpressionStatement","src":"17934:18:24"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17853:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17860:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17928:1:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17856:3:24"},"nodeType":"YulFunctionCall","src":"17856:74:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17850:2:24"},"nodeType":"YulFunctionCall","src":"17850:81:24"},"nodeType":"YulIf","src":"17847:107:24"},{"nodeType":"YulAssignment","src":"17964:16:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17975:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"17978:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17971:3:24"},"nodeType":"YulFunctionCall","src":"17971:9:24"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17964:3:24"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17712:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"17715:1:24","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17721:3:24","type":""}],"src":"17681:305:24"},{"body":{"nodeType":"YulBlock","src":"18098:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18120:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"18128:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18116:3:24"},"nodeType":"YulFunctionCall","src":"18116:14:24"},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"18132:33:24","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18109:6:24"},"nodeType":"YulFunctionCall","src":"18109:57:24"},"nodeType":"YulExpressionStatement","src":"18109:57:24"}]},"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18090:6:24","type":""}],"src":"17992:181:24"},{"body":{"nodeType":"YulBlock","src":"18325:220:24","statements":[{"nodeType":"YulAssignment","src":"18335:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18401:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18406:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18342:58:24"},"nodeType":"YulFunctionCall","src":"18342:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18335:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18507:3:24"}],"functionName":{"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulIdentifier","src":"18418:88:24"},"nodeType":"YulFunctionCall","src":"18418:93:24"},"nodeType":"YulExpressionStatement","src":"18418:93:24"},{"nodeType":"YulAssignment","src":"18520:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18531:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18536:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18527:3:24"},"nodeType":"YulFunctionCall","src":"18527:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18520:3:24"}]}]},"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18313:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18321:3:24","type":""}],"src":"18179:366:24"},{"body":{"nodeType":"YulBlock","src":"18722:248:24","statements":[{"nodeType":"YulAssignment","src":"18732:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18744:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"18755:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18740:3:24"},"nodeType":"YulFunctionCall","src":"18740:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18732:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18779:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"18790:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18775:3:24"},"nodeType":"YulFunctionCall","src":"18775:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18798:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"18804:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18794:3:24"},"nodeType":"YulFunctionCall","src":"18794:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18768:6:24"},"nodeType":"YulFunctionCall","src":"18768:47:24"},"nodeType":"YulExpressionStatement","src":"18768:47:24"},{"nodeType":"YulAssignment","src":"18824:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18958:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18832:124:24"},"nodeType":"YulFunctionCall","src":"18832:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18824:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18702:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18717:4:24","type":""}],"src":"18551:419:24"},{"body":{"nodeType":"YulBlock","src":"19082:137:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19104:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"19112:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19100:3:24"},"nodeType":"YulFunctionCall","src":"19100:14:24"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"19116:34:24","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19093:6:24"},"nodeType":"YulFunctionCall","src":"19093:58:24"},"nodeType":"YulExpressionStatement","src":"19093:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19172:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"19180:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19168:3:24"},"nodeType":"YulFunctionCall","src":"19168:15:24"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"19185:26:24","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19161:6:24"},"nodeType":"YulFunctionCall","src":"19161:51:24"},"nodeType":"YulExpressionStatement","src":"19161:51:24"}]},"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19074:6:24","type":""}],"src":"18976:243:24"},{"body":{"nodeType":"YulBlock","src":"19371:220:24","statements":[{"nodeType":"YulAssignment","src":"19381:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19447:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"19452:2:24","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19388:58:24"},"nodeType":"YulFunctionCall","src":"19388:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19381:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19553:3:24"}],"functionName":{"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nodeType":"YulIdentifier","src":"19464:88:24"},"nodeType":"YulFunctionCall","src":"19464:93:24"},"nodeType":"YulExpressionStatement","src":"19464:93:24"},{"nodeType":"YulAssignment","src":"19566:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19573:3:24"},"nodeType":"YulFunctionCall","src":"19573:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19566:3:24"}]}]},"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19359:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19367:3:24","type":""}],"src":"19225:366:24"},{"body":{"nodeType":"YulBlock","src":"19768:248:24","statements":[{"nodeType":"YulAssignment","src":"19778:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19790:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19801:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19786:3:24"},"nodeType":"YulFunctionCall","src":"19786:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19778:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19825:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19836:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19821:3:24"},"nodeType":"YulFunctionCall","src":"19821:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19844:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"19850:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19840:3:24"},"nodeType":"YulFunctionCall","src":"19840:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19814:6:24"},"nodeType":"YulFunctionCall","src":"19814:47:24"},"nodeType":"YulExpressionStatement","src":"19814:47:24"},{"nodeType":"YulAssignment","src":"19870:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20004:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19878:124:24"},"nodeType":"YulFunctionCall","src":"19878:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19870:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19748:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19763:4:24","type":""}],"src":"19597:419:24"},{"body":{"nodeType":"YulBlock","src":"20128:127:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20150:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"20158:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20146:3:24"},"nodeType":"YulFunctionCall","src":"20146:14:24"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"20162:34:24","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20139:6:24"},"nodeType":"YulFunctionCall","src":"20139:58:24"},"nodeType":"YulExpressionStatement","src":"20139:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20218:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"20226:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20214:3:24"},"nodeType":"YulFunctionCall","src":"20214:15:24"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"20231:16:24","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20207:6:24"},"nodeType":"YulFunctionCall","src":"20207:41:24"},"nodeType":"YulExpressionStatement","src":"20207:41:24"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20120:6:24","type":""}],"src":"20022:233:24"},{"body":{"nodeType":"YulBlock","src":"20407:220:24","statements":[{"nodeType":"YulAssignment","src":"20417:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20483:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"20488:2:24","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20424:58:24"},"nodeType":"YulFunctionCall","src":"20424:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20417:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20589:3:24"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"20500:88:24"},"nodeType":"YulFunctionCall","src":"20500:93:24"},"nodeType":"YulExpressionStatement","src":"20500:93:24"},{"nodeType":"YulAssignment","src":"20602:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20613:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"20618:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20609:3:24"},"nodeType":"YulFunctionCall","src":"20609:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20602:3:24"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20395:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20403:3:24","type":""}],"src":"20261:366:24"},{"body":{"nodeType":"YulBlock","src":"20804:248:24","statements":[{"nodeType":"YulAssignment","src":"20814:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20826:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20837:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20822:3:24"},"nodeType":"YulFunctionCall","src":"20822:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20814:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20861:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20872:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20857:3:24"},"nodeType":"YulFunctionCall","src":"20857:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20880:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"20886:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20876:3:24"},"nodeType":"YulFunctionCall","src":"20876:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20850:6:24"},"nodeType":"YulFunctionCall","src":"20850:47:24"},"nodeType":"YulExpressionStatement","src":"20850:47:24"},{"nodeType":"YulAssignment","src":"20906:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20914:124:24"},"nodeType":"YulFunctionCall","src":"20914:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20906:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20784:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20799:4:24","type":""}],"src":"20633:419:24"},{"body":{"nodeType":"YulBlock","src":"21111:32:24","statements":[{"nodeType":"YulAssignment","src":"21121:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"21132:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21121:7:24"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21093:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21103:7:24","type":""}],"src":"21058:85:24"},{"body":{"nodeType":"YulBlock","src":"21181:28:24","statements":[{"nodeType":"YulAssignment","src":"21191:12:24","value":{"name":"value","nodeType":"YulIdentifier","src":"21198:5:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21191:3:24"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21167:5:24","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21177:3:24","type":""}],"src":"21149:60:24"},{"body":{"nodeType":"YulBlock","src":"21281:88:24","statements":[{"nodeType":"YulAssignment","src":"21291:72:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21355:5:24"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"21329:25:24"},"nodeType":"YulFunctionCall","src":"21329:32:24"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"21320:8:24"},"nodeType":"YulFunctionCall","src":"21320:42:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"21304:15:24"},"nodeType":"YulFunctionCall","src":"21304:59:24"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21291:9:24"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21261:5:24","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21271:9:24","type":""}],"src":"21215:154:24"},{"body":{"nodeType":"YulBlock","src":"21446:72:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21463:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21505:5:24"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"21468:36:24"},"nodeType":"YulFunctionCall","src":"21468:43:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21456:6:24"},"nodeType":"YulFunctionCall","src":"21456:56:24"},"nodeType":"YulExpressionStatement","src":"21456:56:24"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21434:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21441:3:24","type":""}],"src":"21375:143:24"},{"body":{"nodeType":"YulBlock","src":"21628:130:24","statements":[{"nodeType":"YulAssignment","src":"21638:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21650:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21661:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21646:3:24"},"nodeType":"YulFunctionCall","src":"21646:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21638:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21724:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21737:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21748:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21733:3:24"},"nodeType":"YulFunctionCall","src":"21733:17:24"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"21674:49:24"},"nodeType":"YulFunctionCall","src":"21674:77:24"},"nodeType":"YulExpressionStatement","src":"21674:77:24"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21600:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21612:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21623:4:24","type":""}],"src":"21524:234:24"},{"body":{"nodeType":"YulBlock","src":"21809:146:24","statements":[{"nodeType":"YulAssignment","src":"21819:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21842:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21824:17:24"},"nodeType":"YulFunctionCall","src":"21824:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21819:1:24"}]},{"nodeType":"YulAssignment","src":"21853:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21876:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21858:17:24"},"nodeType":"YulFunctionCall","src":"21858:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21853:1:24"}]},{"body":{"nodeType":"YulBlock","src":"21900:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21902:16:24"},"nodeType":"YulFunctionCall","src":"21902:18:24"},"nodeType":"YulExpressionStatement","src":"21902:18:24"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21894:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"21897:1:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21891:2:24"},"nodeType":"YulFunctionCall","src":"21891:8:24"},"nodeType":"YulIf","src":"21888:34:24"},{"nodeType":"YulAssignment","src":"21932:17:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21944:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"21947:1:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21940:3:24"},"nodeType":"YulFunctionCall","src":"21940:9:24"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21932:4:24"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21795:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"21798:1:24","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21804:4:24","type":""}],"src":"21764:191:24"},{"body":{"nodeType":"YulBlock","src":"21989:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22006:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22009:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21999:6:24"},"nodeType":"YulFunctionCall","src":"21999:88:24"},"nodeType":"YulExpressionStatement","src":"21999:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22103:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22106:4:24","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22096:6:24"},"nodeType":"YulFunctionCall","src":"22096:15:24"},"nodeType":"YulExpressionStatement","src":"22096:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22127:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22130:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22120:6:24"},"nodeType":"YulFunctionCall","src":"22120:15:24"},"nodeType":"YulExpressionStatement","src":"22120:15:24"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21961:180:24"},{"body":{"nodeType":"YulBlock","src":"22253:118:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22275:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22283:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22271:3:24"},"nodeType":"YulFunctionCall","src":"22271:14:24"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"22287:34:24","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22264:6:24"},"nodeType":"YulFunctionCall","src":"22264:58:24"},"nodeType":"YulExpressionStatement","src":"22264:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22343:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22351:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22339:3:24"},"nodeType":"YulFunctionCall","src":"22339:15:24"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"22356:7:24","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22332:6:24"},"nodeType":"YulFunctionCall","src":"22332:32:24"},"nodeType":"YulExpressionStatement","src":"22332:32:24"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22245:6:24","type":""}],"src":"22147:224:24"},{"body":{"nodeType":"YulBlock","src":"22523:220:24","statements":[{"nodeType":"YulAssignment","src":"22533:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22599:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"22604:2:24","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22540:58:24"},"nodeType":"YulFunctionCall","src":"22540:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22533:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22705:3:24"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"22616:88:24"},"nodeType":"YulFunctionCall","src":"22616:93:24"},"nodeType":"YulExpressionStatement","src":"22616:93:24"},{"nodeType":"YulAssignment","src":"22718:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22729:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"22734:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22725:3:24"},"nodeType":"YulFunctionCall","src":"22725:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22718:3:24"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22511:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22519:3:24","type":""}],"src":"22377:366:24"},{"body":{"nodeType":"YulBlock","src":"22920:248:24","statements":[{"nodeType":"YulAssignment","src":"22930:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22942:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22953:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22938:3:24"},"nodeType":"YulFunctionCall","src":"22938:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22930:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22977:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22988:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22973:3:24"},"nodeType":"YulFunctionCall","src":"22973:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22996:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"23002:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22992:3:24"},"nodeType":"YulFunctionCall","src":"22992:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22966:6:24"},"nodeType":"YulFunctionCall","src":"22966:47:24"},"nodeType":"YulExpressionStatement","src":"22966:47:24"},{"nodeType":"YulAssignment","src":"23022:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23156:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23030:124:24"},"nodeType":"YulFunctionCall","src":"23030:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23022:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22900:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22915:4:24","type":""}],"src":"22749:419:24"},{"body":{"nodeType":"YulBlock","src":"23280:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23302:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"23310:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23298:3:24"},"nodeType":"YulFunctionCall","src":"23298:14:24"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"23314:31:24","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23291:6:24"},"nodeType":"YulFunctionCall","src":"23291:55:24"},"nodeType":"YulExpressionStatement","src":"23291:55:24"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23272:6:24","type":""}],"src":"23174:179:24"},{"body":{"nodeType":"YulBlock","src":"23505:220:24","statements":[{"nodeType":"YulAssignment","src":"23515:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23581:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"23586:2:24","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23522:58:24"},"nodeType":"YulFunctionCall","src":"23522:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23515:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23687:3:24"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"23598:88:24"},"nodeType":"YulFunctionCall","src":"23598:93:24"},"nodeType":"YulExpressionStatement","src":"23598:93:24"},{"nodeType":"YulAssignment","src":"23700:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23711:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"23716:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23707:3:24"},"nodeType":"YulFunctionCall","src":"23707:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23700:3:24"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23493:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23501:3:24","type":""}],"src":"23359:366:24"},{"body":{"nodeType":"YulBlock","src":"23902:248:24","statements":[{"nodeType":"YulAssignment","src":"23912:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23924:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"23935:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23920:3:24"},"nodeType":"YulFunctionCall","src":"23920:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23912:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23959:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"23970:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23955:3:24"},"nodeType":"YulFunctionCall","src":"23955:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23978:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"23984:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23974:3:24"},"nodeType":"YulFunctionCall","src":"23974:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23948:6:24"},"nodeType":"YulFunctionCall","src":"23948:47:24"},"nodeType":"YulExpressionStatement","src":"23948:47:24"},{"nodeType":"YulAssignment","src":"24004:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24138:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24012:124:24"},"nodeType":"YulFunctionCall","src":"24012:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24004:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23882:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23897:4:24","type":""}],"src":"23731:419:24"},{"body":{"nodeType":"YulBlock","src":"24338:371:24","statements":[{"nodeType":"YulAssignment","src":"24348:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24360:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24371:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24356:3:24"},"nodeType":"YulFunctionCall","src":"24356:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24348:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24429:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24442:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24453:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24438:3:24"},"nodeType":"YulFunctionCall","src":"24438:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24385:43:24"},"nodeType":"YulFunctionCall","src":"24385:71:24"},"nodeType":"YulExpressionStatement","src":"24385:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24510:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24523:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24534:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24519:3:24"},"nodeType":"YulFunctionCall","src":"24519:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24466:43:24"},"nodeType":"YulFunctionCall","src":"24466:72:24"},"nodeType":"YulExpressionStatement","src":"24466:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24592:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24605:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24616:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24601:3:24"},"nodeType":"YulFunctionCall","src":"24601:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24548:43:24"},"nodeType":"YulFunctionCall","src":"24548:72:24"},"nodeType":"YulExpressionStatement","src":"24548:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24674:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24687:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24698:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24683:3:24"},"nodeType":"YulFunctionCall","src":"24683:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24630:43:24"},"nodeType":"YulFunctionCall","src":"24630:72:24"},"nodeType":"YulExpressionStatement","src":"24630:72:24"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24286:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24298:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24306:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24314:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24322:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24333:4:24","type":""}],"src":"24156:553:24"},{"body":{"nodeType":"YulBlock","src":"24821:69:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24843:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"24851:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24839:3:24"},"nodeType":"YulFunctionCall","src":"24839:14:24"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"24855:27:24","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24832:6:24"},"nodeType":"YulFunctionCall","src":"24832:51:24"},"nodeType":"YulExpressionStatement","src":"24832:51:24"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24813:6:24","type":""}],"src":"24715:175:24"},{"body":{"nodeType":"YulBlock","src":"25042:220:24","statements":[{"nodeType":"YulAssignment","src":"25052:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25118:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"25123:2:24","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25059:58:24"},"nodeType":"YulFunctionCall","src":"25059:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25052:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25224:3:24"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"25135:88:24"},"nodeType":"YulFunctionCall","src":"25135:93:24"},"nodeType":"YulExpressionStatement","src":"25135:93:24"},{"nodeType":"YulAssignment","src":"25237:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25248:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"25253:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25244:3:24"},"nodeType":"YulFunctionCall","src":"25244:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25237:3:24"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25030:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25038:3:24","type":""}],"src":"24896:366:24"},{"body":{"nodeType":"YulBlock","src":"25439:248:24","statements":[{"nodeType":"YulAssignment","src":"25449:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25461:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25472:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25457:3:24"},"nodeType":"YulFunctionCall","src":"25457:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25449:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25496:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25507:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25492:3:24"},"nodeType":"YulFunctionCall","src":"25492:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25515:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"25521:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25511:3:24"},"nodeType":"YulFunctionCall","src":"25511:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25485:6:24"},"nodeType":"YulFunctionCall","src":"25485:47:24"},"nodeType":"YulExpressionStatement","src":"25485:47:24"},{"nodeType":"YulAssignment","src":"25541:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25675:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25549:124:24"},"nodeType":"YulFunctionCall","src":"25549:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25541:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25419:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25434:4:24","type":""}],"src":"25268:419:24"},{"body":{"nodeType":"YulBlock","src":"25799:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25821:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25829:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25817:3:24"},"nodeType":"YulFunctionCall","src":"25817:14:24"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"25833:31:24","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25810:6:24"},"nodeType":"YulFunctionCall","src":"25810:55:24"},"nodeType":"YulExpressionStatement","src":"25810:55:24"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25791:6:24","type":""}],"src":"25693:179:24"},{"body":{"nodeType":"YulBlock","src":"26024:220:24","statements":[{"nodeType":"YulAssignment","src":"26034:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26100:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"26105:2:24","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26041:58:24"},"nodeType":"YulFunctionCall","src":"26041:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26034:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26206:3:24"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"26117:88:24"},"nodeType":"YulFunctionCall","src":"26117:93:24"},"nodeType":"YulExpressionStatement","src":"26117:93:24"},{"nodeType":"YulAssignment","src":"26219:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26230:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"26235:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26226:3:24"},"nodeType":"YulFunctionCall","src":"26226:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26219:3:24"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26012:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26020:3:24","type":""}],"src":"25878:366:24"},{"body":{"nodeType":"YulBlock","src":"26421:248:24","statements":[{"nodeType":"YulAssignment","src":"26431:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26443:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26454:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26439:3:24"},"nodeType":"YulFunctionCall","src":"26439:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26431:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26478:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26489:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26474:3:24"},"nodeType":"YulFunctionCall","src":"26474:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26497:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"26503:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26493:3:24"},"nodeType":"YulFunctionCall","src":"26493:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26467:6:24"},"nodeType":"YulFunctionCall","src":"26467:47:24"},"nodeType":"YulExpressionStatement","src":"26467:47:24"},{"nodeType":"YulAssignment","src":"26523:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26657:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26531:124:24"},"nodeType":"YulFunctionCall","src":"26531:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26523:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26401:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26416:4:24","type":""}],"src":"26250:419:24"},{"body":{"nodeType":"YulBlock","src":"26913:537:24","statements":[{"nodeType":"YulAssignment","src":"26923:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26935:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26946:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26931:3:24"},"nodeType":"YulFunctionCall","src":"26931:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26923:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27004:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27017:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27028:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27013:3:24"},"nodeType":"YulFunctionCall","src":"27013:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26960:43:24"},"nodeType":"YulFunctionCall","src":"26960:71:24"},"nodeType":"YulExpressionStatement","src":"26960:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27085:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27098:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27109:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27094:3:24"},"nodeType":"YulFunctionCall","src":"27094:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27041:43:24"},"nodeType":"YulFunctionCall","src":"27041:72:24"},"nodeType":"YulExpressionStatement","src":"27041:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27167:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27180:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27191:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27176:3:24"},"nodeType":"YulFunctionCall","src":"27176:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27123:43:24"},"nodeType":"YulFunctionCall","src":"27123:72:24"},"nodeType":"YulExpressionStatement","src":"27123:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27249:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27262:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27273:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27258:3:24"},"nodeType":"YulFunctionCall","src":"27258:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27205:43:24"},"nodeType":"YulFunctionCall","src":"27205:72:24"},"nodeType":"YulExpressionStatement","src":"27205:72:24"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27331:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27344:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27355:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27340:3:24"},"nodeType":"YulFunctionCall","src":"27340:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27287:43:24"},"nodeType":"YulFunctionCall","src":"27287:73:24"},"nodeType":"YulExpressionStatement","src":"27287:73:24"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"27414:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27427:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27438:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27423:3:24"},"nodeType":"YulFunctionCall","src":"27423:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27370:43:24"},"nodeType":"YulFunctionCall","src":"27370:73:24"},"nodeType":"YulExpressionStatement","src":"27370:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26845:9:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"26857:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26865:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26873:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26881:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26889:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26897:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26908:4:24","type":""}],"src":"26675:775:24"},{"body":{"nodeType":"YulBlock","src":"27562:74:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27584:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"27592:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27580:3:24"},"nodeType":"YulFunctionCall","src":"27580:14:24"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"27596:32:24","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27573:6:24"},"nodeType":"YulFunctionCall","src":"27573:56:24"},"nodeType":"YulExpressionStatement","src":"27573:56:24"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27554:6:24","type":""}],"src":"27456:180:24"},{"body":{"nodeType":"YulBlock","src":"27788:220:24","statements":[{"nodeType":"YulAssignment","src":"27798:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27864:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"27869:2:24","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27805:58:24"},"nodeType":"YulFunctionCall","src":"27805:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27798:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27970:3:24"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"27881:88:24"},"nodeType":"YulFunctionCall","src":"27881:93:24"},"nodeType":"YulExpressionStatement","src":"27881:93:24"},{"nodeType":"YulAssignment","src":"27983:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27994:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"27999:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27990:3:24"},"nodeType":"YulFunctionCall","src":"27990:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27983:3:24"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27776:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27784:3:24","type":""}],"src":"27642:366:24"},{"body":{"nodeType":"YulBlock","src":"28185:248:24","statements":[{"nodeType":"YulAssignment","src":"28195:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28207:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28218:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28203:3:24"},"nodeType":"YulFunctionCall","src":"28203:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28195:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28242:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28253:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28238:3:24"},"nodeType":"YulFunctionCall","src":"28238:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28261:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"28267:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28257:3:24"},"nodeType":"YulFunctionCall","src":"28257:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28231:6:24"},"nodeType":"YulFunctionCall","src":"28231:47:24"},"nodeType":"YulExpressionStatement","src":"28231:47:24"},{"nodeType":"YulAssignment","src":"28287:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28421:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28295:124:24"},"nodeType":"YulFunctionCall","src":"28295:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28287:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28165:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28180:4:24","type":""}],"src":"28014:419:24"},{"body":{"nodeType":"YulBlock","src":"28545:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28567:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"28575:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28563:3:24"},"nodeType":"YulFunctionCall","src":"28563:14:24"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"28579:34:24","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28556:6:24"},"nodeType":"YulFunctionCall","src":"28556:58:24"},"nodeType":"YulExpressionStatement","src":"28556:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28635:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"28643:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28631:3:24"},"nodeType":"YulFunctionCall","src":"28631:15:24"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"28648:8:24","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28624:6:24"},"nodeType":"YulFunctionCall","src":"28624:33:24"},"nodeType":"YulExpressionStatement","src":"28624:33:24"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28537:6:24","type":""}],"src":"28439:225:24"},{"body":{"nodeType":"YulBlock","src":"28816:220:24","statements":[{"nodeType":"YulAssignment","src":"28826:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28892:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"28897:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28833:58:24"},"nodeType":"YulFunctionCall","src":"28833:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28826:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28998:3:24"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"28909:88:24"},"nodeType":"YulFunctionCall","src":"28909:93:24"},"nodeType":"YulExpressionStatement","src":"28909:93:24"},{"nodeType":"YulAssignment","src":"29011:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29022:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"29027:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29018:3:24"},"nodeType":"YulFunctionCall","src":"29018:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29011:3:24"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28804:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28812:3:24","type":""}],"src":"28670:366:24"},{"body":{"nodeType":"YulBlock","src":"29213:248:24","statements":[{"nodeType":"YulAssignment","src":"29223:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29235:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"29246:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29231:3:24"},"nodeType":"YulFunctionCall","src":"29231:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29223:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29270:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"29281:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29266:3:24"},"nodeType":"YulFunctionCall","src":"29266:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29289:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"29295:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29285:3:24"},"nodeType":"YulFunctionCall","src":"29285:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29259:6:24"},"nodeType":"YulFunctionCall","src":"29259:47:24"},"nodeType":"YulExpressionStatement","src":"29259:47:24"},{"nodeType":"YulAssignment","src":"29315:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29449:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29323:124:24"},"nodeType":"YulFunctionCall","src":"29323:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29315:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29193:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29208:4:24","type":""}],"src":"29042:419:24"},{"body":{"nodeType":"YulBlock","src":"29573:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29595:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"29603:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29591:3:24"},"nodeType":"YulFunctionCall","src":"29591:14:24"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29607:34:24","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29584:6:24"},"nodeType":"YulFunctionCall","src":"29584:58:24"},"nodeType":"YulExpressionStatement","src":"29584:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29663:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"29671:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29659:3:24"},"nodeType":"YulFunctionCall","src":"29659:15:24"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29676:6:24","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29652:6:24"},"nodeType":"YulFunctionCall","src":"29652:31:24"},"nodeType":"YulExpressionStatement","src":"29652:31:24"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29565:6:24","type":""}],"src":"29467:223:24"},{"body":{"nodeType":"YulBlock","src":"29842:220:24","statements":[{"nodeType":"YulAssignment","src":"29852:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29918:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"29923:2:24","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29859:58:24"},"nodeType":"YulFunctionCall","src":"29859:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29852:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30024:3:24"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"29935:88:24"},"nodeType":"YulFunctionCall","src":"29935:93:24"},"nodeType":"YulExpressionStatement","src":"29935:93:24"},{"nodeType":"YulAssignment","src":"30037:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30048:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"30053:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30044:3:24"},"nodeType":"YulFunctionCall","src":"30044:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30037:3:24"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29830:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29838:3:24","type":""}],"src":"29696:366:24"},{"body":{"nodeType":"YulBlock","src":"30239:248:24","statements":[{"nodeType":"YulAssignment","src":"30249:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30261:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"30272:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30257:3:24"},"nodeType":"YulFunctionCall","src":"30257:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30249:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30296:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"30307:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30292:3:24"},"nodeType":"YulFunctionCall","src":"30292:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30315:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"30321:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30311:3:24"},"nodeType":"YulFunctionCall","src":"30311:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30285:6:24"},"nodeType":"YulFunctionCall","src":"30285:47:24"},"nodeType":"YulExpressionStatement","src":"30285:47:24"},{"nodeType":"YulAssignment","src":"30341:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30475:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30349:124:24"},"nodeType":"YulFunctionCall","src":"30349:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30341:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30219:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30234:4:24","type":""}],"src":"30068:419:24"},{"body":{"nodeType":"YulBlock","src":"30599:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30621:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"30629:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30617:3:24"},"nodeType":"YulFunctionCall","src":"30617:14:24"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"30633:34:24","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30610:6:24"},"nodeType":"YulFunctionCall","src":"30610:58:24"},"nodeType":"YulExpressionStatement","src":"30610:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30689:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"30697:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30685:3:24"},"nodeType":"YulFunctionCall","src":"30685:15:24"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"30702:4:24","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30678:6:24"},"nodeType":"YulFunctionCall","src":"30678:29:24"},"nodeType":"YulExpressionStatement","src":"30678:29:24"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30591:6:24","type":""}],"src":"30493:221:24"},{"body":{"nodeType":"YulBlock","src":"30866:220:24","statements":[{"nodeType":"YulAssignment","src":"30876:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30942:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"30947:2:24","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30883:58:24"},"nodeType":"YulFunctionCall","src":"30883:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30876:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31048:3:24"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"30959:88:24"},"nodeType":"YulFunctionCall","src":"30959:93:24"},"nodeType":"YulExpressionStatement","src":"30959:93:24"},{"nodeType":"YulAssignment","src":"31061:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31072:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"31077:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31068:3:24"},"nodeType":"YulFunctionCall","src":"31068:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31061:3:24"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30854:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30862:3:24","type":""}],"src":"30720:366:24"},{"body":{"nodeType":"YulBlock","src":"31263:248:24","statements":[{"nodeType":"YulAssignment","src":"31273:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31285:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31296:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31281:3:24"},"nodeType":"YulFunctionCall","src":"31281:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31273:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31320:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31331:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31316:3:24"},"nodeType":"YulFunctionCall","src":"31316:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31339:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"31345:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31335:3:24"},"nodeType":"YulFunctionCall","src":"31335:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31309:6:24"},"nodeType":"YulFunctionCall","src":"31309:47:24"},"nodeType":"YulExpressionStatement","src":"31309:47:24"},{"nodeType":"YulAssignment","src":"31365:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31499:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31373:124:24"},"nodeType":"YulFunctionCall","src":"31373:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31365:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31243:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31258:4:24","type":""}],"src":"31092:419:24"},{"body":{"nodeType":"YulBlock","src":"31623:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31645:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"31653:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31641:3:24"},"nodeType":"YulFunctionCall","src":"31641:14:24"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"31657:31:24","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31634:6:24"},"nodeType":"YulFunctionCall","src":"31634:55:24"},"nodeType":"YulExpressionStatement","src":"31634:55:24"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31615:6:24","type":""}],"src":"31517:179:24"},{"body":{"nodeType":"YulBlock","src":"31848:220:24","statements":[{"nodeType":"YulAssignment","src":"31858:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31924:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"31929:2:24","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31865:58:24"},"nodeType":"YulFunctionCall","src":"31865:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31858:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32030:3:24"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"31941:88:24"},"nodeType":"YulFunctionCall","src":"31941:93:24"},"nodeType":"YulExpressionStatement","src":"31941:93:24"},{"nodeType":"YulAssignment","src":"32043:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32054:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"32059:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32050:3:24"},"nodeType":"YulFunctionCall","src":"32050:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32043:3:24"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31836:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31844:3:24","type":""}],"src":"31702:366:24"},{"body":{"nodeType":"YulBlock","src":"32245:248:24","statements":[{"nodeType":"YulAssignment","src":"32255:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32267:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32278:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32263:3:24"},"nodeType":"YulFunctionCall","src":"32263:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32255:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32302:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32313:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32298:3:24"},"nodeType":"YulFunctionCall","src":"32298:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32321:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"32327:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32317:3:24"},"nodeType":"YulFunctionCall","src":"32317:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32291:6:24"},"nodeType":"YulFunctionCall","src":"32291:47:24"},"nodeType":"YulExpressionStatement","src":"32291:47:24"},{"nodeType":"YulAssignment","src":"32347:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32481:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32355:124:24"},"nodeType":"YulFunctionCall","src":"32355:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32347:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32225:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32240:4:24","type":""}],"src":"32074:419:24"},{"body":{"nodeType":"YulBlock","src":"32605:118:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32627:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"32635:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32623:3:24"},"nodeType":"YulFunctionCall","src":"32623:14:24"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"32639:34:24","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32616:6:24"},"nodeType":"YulFunctionCall","src":"32616:58:24"},"nodeType":"YulExpressionStatement","src":"32616:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32695:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"32703:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32691:3:24"},"nodeType":"YulFunctionCall","src":"32691:15:24"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"32708:7:24","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32684:6:24"},"nodeType":"YulFunctionCall","src":"32684:32:24"},"nodeType":"YulExpressionStatement","src":"32684:32:24"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32597:6:24","type":""}],"src":"32499:224:24"},{"body":{"nodeType":"YulBlock","src":"32875:220:24","statements":[{"nodeType":"YulAssignment","src":"32885:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32951:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"32956:2:24","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32892:58:24"},"nodeType":"YulFunctionCall","src":"32892:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32885:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33057:3:24"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"32968:88:24"},"nodeType":"YulFunctionCall","src":"32968:93:24"},"nodeType":"YulExpressionStatement","src":"32968:93:24"},{"nodeType":"YulAssignment","src":"33070:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33081:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"33086:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33077:3:24"},"nodeType":"YulFunctionCall","src":"33077:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33070:3:24"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32863:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32871:3:24","type":""}],"src":"32729:366:24"},{"body":{"nodeType":"YulBlock","src":"33272:248:24","statements":[{"nodeType":"YulAssignment","src":"33282:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33294:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33305:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33290:3:24"},"nodeType":"YulFunctionCall","src":"33290:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33282:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33329:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33340:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33325:3:24"},"nodeType":"YulFunctionCall","src":"33325:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33348:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"33354:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33344:3:24"},"nodeType":"YulFunctionCall","src":"33344:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33318:6:24"},"nodeType":"YulFunctionCall","src":"33318:47:24"},"nodeType":"YulExpressionStatement","src":"33318:47:24"},{"nodeType":"YulAssignment","src":"33374:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33508:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33382:124:24"},"nodeType":"YulFunctionCall","src":"33382:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33374:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33252:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33267:4:24","type":""}],"src":"33101:419:24"},{"body":{"nodeType":"YulBlock","src":"33632:116:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33654:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"33662:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33650:3:24"},"nodeType":"YulFunctionCall","src":"33650:14:24"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"33666:34:24","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33643:6:24"},"nodeType":"YulFunctionCall","src":"33643:58:24"},"nodeType":"YulExpressionStatement","src":"33643:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33722:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"33730:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33718:3:24"},"nodeType":"YulFunctionCall","src":"33718:15:24"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"33735:5:24","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33711:6:24"},"nodeType":"YulFunctionCall","src":"33711:30:24"},"nodeType":"YulExpressionStatement","src":"33711:30:24"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33624:6:24","type":""}],"src":"33526:222:24"},{"body":{"nodeType":"YulBlock","src":"33900:220:24","statements":[{"nodeType":"YulAssignment","src":"33910:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33976:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"33981:2:24","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33917:58:24"},"nodeType":"YulFunctionCall","src":"33917:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33910:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34082:3:24"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"33993:88:24"},"nodeType":"YulFunctionCall","src":"33993:93:24"},"nodeType":"YulExpressionStatement","src":"33993:93:24"},{"nodeType":"YulAssignment","src":"34095:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34106:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"34111:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34102:3:24"},"nodeType":"YulFunctionCall","src":"34102:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34095:3:24"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33888:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33896:3:24","type":""}],"src":"33754:366:24"},{"body":{"nodeType":"YulBlock","src":"34297:248:24","statements":[{"nodeType":"YulAssignment","src":"34307:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34319:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34330:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34315:3:24"},"nodeType":"YulFunctionCall","src":"34315:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34307:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34354:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34365:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34350:3:24"},"nodeType":"YulFunctionCall","src":"34350:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34373:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"34379:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34369:3:24"},"nodeType":"YulFunctionCall","src":"34369:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34343:6:24"},"nodeType":"YulFunctionCall","src":"34343:47:24"},"nodeType":"YulExpressionStatement","src":"34343:47:24"},{"nodeType":"YulAssignment","src":"34399:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34533:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34407:124:24"},"nodeType":"YulFunctionCall","src":"34407:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34399:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34277:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34292:4:24","type":""}],"src":"34126:419:24"},{"body":{"nodeType":"YulBlock","src":"34657:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34679:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"34687:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34675:3:24"},"nodeType":"YulFunctionCall","src":"34675:14:24"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"34691:34:24","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34668:6:24"},"nodeType":"YulFunctionCall","src":"34668:58:24"},"nodeType":"YulExpressionStatement","src":"34668:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34747:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"34755:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34743:3:24"},"nodeType":"YulFunctionCall","src":"34743:15:24"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"34760:8:24","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34736:6:24"},"nodeType":"YulFunctionCall","src":"34736:33:24"},"nodeType":"YulExpressionStatement","src":"34736:33:24"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34649:6:24","type":""}],"src":"34551:225:24"},{"body":{"nodeType":"YulBlock","src":"34928:220:24","statements":[{"nodeType":"YulAssignment","src":"34938:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35004:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"35009:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34945:58:24"},"nodeType":"YulFunctionCall","src":"34945:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34938:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35110:3:24"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"35021:88:24"},"nodeType":"YulFunctionCall","src":"35021:93:24"},"nodeType":"YulExpressionStatement","src":"35021:93:24"},{"nodeType":"YulAssignment","src":"35123:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35134:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"35139:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35130:3:24"},"nodeType":"YulFunctionCall","src":"35130:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35123:3:24"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34916:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34924:3:24","type":""}],"src":"34782:366:24"},{"body":{"nodeType":"YulBlock","src":"35325:248:24","statements":[{"nodeType":"YulAssignment","src":"35335:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35347:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35358:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35343:3:24"},"nodeType":"YulFunctionCall","src":"35343:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35335:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35382:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35393:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35378:3:24"},"nodeType":"YulFunctionCall","src":"35378:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35401:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"35407:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35397:3:24"},"nodeType":"YulFunctionCall","src":"35397:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35371:6:24"},"nodeType":"YulFunctionCall","src":"35371:47:24"},"nodeType":"YulExpressionStatement","src":"35371:47:24"},{"nodeType":"YulAssignment","src":"35427:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35561:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35435:124:24"},"nodeType":"YulFunctionCall","src":"35435:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35427:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35305:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35320:4:24","type":""}],"src":"35154:419:24"},{"body":{"nodeType":"YulBlock","src":"35642:80:24","statements":[{"nodeType":"YulAssignment","src":"35652:22:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35667:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35661:5:24"},"nodeType":"YulFunctionCall","src":"35661:13:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35652:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35710:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"35683:26:24"},"nodeType":"YulFunctionCall","src":"35683:33:24"},"nodeType":"YulExpressionStatement","src":"35683:33:24"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35620:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"35628:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35636:5:24","type":""}],"src":"35579:143:24"},{"body":{"nodeType":"YulBlock","src":"35805:274:24","statements":[{"body":{"nodeType":"YulBlock","src":"35851:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"35853:77:24"},"nodeType":"YulFunctionCall","src":"35853:79:24"},"nodeType":"YulExpressionStatement","src":"35853:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35826:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"35835:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35822:3:24"},"nodeType":"YulFunctionCall","src":"35822:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"35847:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35818:3:24"},"nodeType":"YulFunctionCall","src":"35818:32:24"},"nodeType":"YulIf","src":"35815:119:24"},{"nodeType":"YulBlock","src":"35944:128:24","statements":[{"nodeType":"YulVariableDeclaration","src":"35959:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"35973:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"35963:6:24","type":""}]},{"nodeType":"YulAssignment","src":"35988:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36034:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"36045:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36030:3:24"},"nodeType":"YulFunctionCall","src":"36030:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36054:7:24"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"35998:31:24"},"nodeType":"YulFunctionCall","src":"35998:64:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35988:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35775:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35786:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35798:6:24","type":""}],"src":"35728:351:24"},{"body":{"nodeType":"YulBlock","src":"36191:127:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36213:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"36221:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36209:3:24"},"nodeType":"YulFunctionCall","src":"36209:14:24"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"36225:34:24","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36202:6:24"},"nodeType":"YulFunctionCall","src":"36202:58:24"},"nodeType":"YulExpressionStatement","src":"36202:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36281:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"36289:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36277:3:24"},"nodeType":"YulFunctionCall","src":"36277:15:24"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"36294:16:24","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36270:6:24"},"nodeType":"YulFunctionCall","src":"36270:41:24"},"nodeType":"YulExpressionStatement","src":"36270:41:24"}]},"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36183:6:24","type":""}],"src":"36085:233:24"},{"body":{"nodeType":"YulBlock","src":"36470:220:24","statements":[{"nodeType":"YulAssignment","src":"36480:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36546:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"36551:2:24","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36487:58:24"},"nodeType":"YulFunctionCall","src":"36487:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36480:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36652:3:24"}],"functionName":{"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nodeType":"YulIdentifier","src":"36563:88:24"},"nodeType":"YulFunctionCall","src":"36563:93:24"},"nodeType":"YulExpressionStatement","src":"36563:93:24"},{"nodeType":"YulAssignment","src":"36665:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36676:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"36681:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36672:3:24"},"nodeType":"YulFunctionCall","src":"36672:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36665:3:24"}]}]},"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36458:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36466:3:24","type":""}],"src":"36324:366:24"},{"body":{"nodeType":"YulBlock","src":"36867:248:24","statements":[{"nodeType":"YulAssignment","src":"36877:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36889:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36900:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36885:3:24"},"nodeType":"YulFunctionCall","src":"36885:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36877:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36924:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36935:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36920:3:24"},"nodeType":"YulFunctionCall","src":"36920:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36943:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"36949:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36939:3:24"},"nodeType":"YulFunctionCall","src":"36939:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36913:6:24"},"nodeType":"YulFunctionCall","src":"36913:47:24"},"nodeType":"YulExpressionStatement","src":"36913:47:24"},{"nodeType":"YulAssignment","src":"36969:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37103:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36977:124:24"},"nodeType":"YulFunctionCall","src":"36977:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36969:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36847:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36862:4:24","type":""}],"src":"36696:419:24"},{"body":{"nodeType":"YulBlock","src":"37227:122:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37249:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"37257:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37245:3:24"},"nodeType":"YulFunctionCall","src":"37245:14:24"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"37261:34:24","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37238:6:24"},"nodeType":"YulFunctionCall","src":"37238:58:24"},"nodeType":"YulExpressionStatement","src":"37238:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37317:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"37325:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37313:3:24"},"nodeType":"YulFunctionCall","src":"37313:15:24"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"37330:11:24","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37306:6:24"},"nodeType":"YulFunctionCall","src":"37306:36:24"},"nodeType":"YulExpressionStatement","src":"37306:36:24"}]},"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37219:6:24","type":""}],"src":"37121:228:24"},{"body":{"nodeType":"YulBlock","src":"37501:220:24","statements":[{"nodeType":"YulAssignment","src":"37511:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37577:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"37582:2:24","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37518:58:24"},"nodeType":"YulFunctionCall","src":"37518:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37511:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37683:3:24"}],"functionName":{"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nodeType":"YulIdentifier","src":"37594:88:24"},"nodeType":"YulFunctionCall","src":"37594:93:24"},"nodeType":"YulExpressionStatement","src":"37594:93:24"},{"nodeType":"YulAssignment","src":"37696:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37707:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"37712:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37703:3:24"},"nodeType":"YulFunctionCall","src":"37703:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37696:3:24"}]}]},"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37489:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37497:3:24","type":""}],"src":"37355:366:24"},{"body":{"nodeType":"YulBlock","src":"37898:248:24","statements":[{"nodeType":"YulAssignment","src":"37908:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37920:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37931:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37916:3:24"},"nodeType":"YulFunctionCall","src":"37916:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37908:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37955:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37966:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37951:3:24"},"nodeType":"YulFunctionCall","src":"37951:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37974:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"37980:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37970:3:24"},"nodeType":"YulFunctionCall","src":"37970:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37944:6:24"},"nodeType":"YulFunctionCall","src":"37944:47:24"},"nodeType":"YulExpressionStatement","src":"37944:47:24"},{"nodeType":"YulAssignment","src":"38000:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38134:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38008:124:24"},"nodeType":"YulFunctionCall","src":"38008:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38000:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37878:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37893:4:24","type":""}],"src":"37727:419:24"},{"body":{"nodeType":"YulBlock","src":"38258:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38280:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"38288:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38276:3:24"},"nodeType":"YulFunctionCall","src":"38276:14:24"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"38292:34:24","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38269:6:24"},"nodeType":"YulFunctionCall","src":"38269:58:24"},"nodeType":"YulExpressionStatement","src":"38269:58:24"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38250:6:24","type":""}],"src":"38152:182:24"},{"body":{"nodeType":"YulBlock","src":"38486:220:24","statements":[{"nodeType":"YulAssignment","src":"38496:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38562:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"38567:2:24","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38503:58:24"},"nodeType":"YulFunctionCall","src":"38503:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38496:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38668:3:24"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"38579:88:24"},"nodeType":"YulFunctionCall","src":"38579:93:24"},"nodeType":"YulExpressionStatement","src":"38579:93:24"},{"nodeType":"YulAssignment","src":"38681:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38692:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"38697:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38688:3:24"},"nodeType":"YulFunctionCall","src":"38688:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38681:3:24"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38474:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38482:3:24","type":""}],"src":"38340:366:24"},{"body":{"nodeType":"YulBlock","src":"38883:248:24","statements":[{"nodeType":"YulAssignment","src":"38893:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38905:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38916:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38901:3:24"},"nodeType":"YulFunctionCall","src":"38901:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38893:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38940:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38951:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38936:3:24"},"nodeType":"YulFunctionCall","src":"38936:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38959:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"38965:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38955:3:24"},"nodeType":"YulFunctionCall","src":"38955:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38929:6:24"},"nodeType":"YulFunctionCall","src":"38929:47:24"},"nodeType":"YulExpressionStatement","src":"38929:47:24"},{"nodeType":"YulAssignment","src":"38985:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39119:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38993:124:24"},"nodeType":"YulFunctionCall","src":"38993:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38985:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38863:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38878:4:24","type":""}],"src":"38712:419:24"},{"body":{"nodeType":"YulBlock","src":"39243:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39265:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"39273:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39261:3:24"},"nodeType":"YulFunctionCall","src":"39261:14:24"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"39277:34:24","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39254:6:24"},"nodeType":"YulFunctionCall","src":"39254:58:24"},"nodeType":"YulExpressionStatement","src":"39254:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39333:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"39341:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39329:3:24"},"nodeType":"YulFunctionCall","src":"39329:15:24"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"39346:8:24","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39322:6:24"},"nodeType":"YulFunctionCall","src":"39322:33:24"},"nodeType":"YulExpressionStatement","src":"39322:33:24"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39235:6:24","type":""}],"src":"39137:225:24"},{"body":{"nodeType":"YulBlock","src":"39514:220:24","statements":[{"nodeType":"YulAssignment","src":"39524:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39590:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"39595:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39531:58:24"},"nodeType":"YulFunctionCall","src":"39531:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39524:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39696:3:24"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"39607:88:24"},"nodeType":"YulFunctionCall","src":"39607:93:24"},"nodeType":"YulExpressionStatement","src":"39607:93:24"},{"nodeType":"YulAssignment","src":"39709:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39720:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"39725:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39716:3:24"},"nodeType":"YulFunctionCall","src":"39716:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39709:3:24"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39502:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39510:3:24","type":""}],"src":"39368:366:24"},{"body":{"nodeType":"YulBlock","src":"39911:248:24","statements":[{"nodeType":"YulAssignment","src":"39921:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39933:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"39944:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39929:3:24"},"nodeType":"YulFunctionCall","src":"39929:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39921:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39968:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"39979:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39964:3:24"},"nodeType":"YulFunctionCall","src":"39964:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39987:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"39993:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39983:3:24"},"nodeType":"YulFunctionCall","src":"39983:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39957:6:24"},"nodeType":"YulFunctionCall","src":"39957:47:24"},"nodeType":"YulExpressionStatement","src":"39957:47:24"},{"nodeType":"YulAssignment","src":"40013:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40147:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40021:124:24"},"nodeType":"YulFunctionCall","src":"40021:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40013:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39891:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39906:4:24","type":""}],"src":"39740:419:24"},{"body":{"nodeType":"YulBlock","src":"40271:124:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40293:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"40301:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40289:3:24"},"nodeType":"YulFunctionCall","src":"40289:14:24"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"40305:34:24","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40282:6:24"},"nodeType":"YulFunctionCall","src":"40282:58:24"},"nodeType":"YulExpressionStatement","src":"40282:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40361:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"40369:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40357:3:24"},"nodeType":"YulFunctionCall","src":"40357:15:24"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"40374:13:24","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40350:6:24"},"nodeType":"YulFunctionCall","src":"40350:38:24"},"nodeType":"YulExpressionStatement","src":"40350:38:24"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40263:6:24","type":""}],"src":"40165:230:24"},{"body":{"nodeType":"YulBlock","src":"40547:220:24","statements":[{"nodeType":"YulAssignment","src":"40557:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40623:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"40628:2:24","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40564:58:24"},"nodeType":"YulFunctionCall","src":"40564:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40557:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40729:3:24"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"40640:88:24"},"nodeType":"YulFunctionCall","src":"40640:93:24"},"nodeType":"YulExpressionStatement","src":"40640:93:24"},{"nodeType":"YulAssignment","src":"40742:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40753:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"40758:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40749:3:24"},"nodeType":"YulFunctionCall","src":"40749:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40742:3:24"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40535:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40543:3:24","type":""}],"src":"40401:366:24"},{"body":{"nodeType":"YulBlock","src":"40944:248:24","statements":[{"nodeType":"YulAssignment","src":"40954:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40966:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"40977:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40962:3:24"},"nodeType":"YulFunctionCall","src":"40962:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40954:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41001:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41012:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40997:3:24"},"nodeType":"YulFunctionCall","src":"40997:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41020:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"41026:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41016:3:24"},"nodeType":"YulFunctionCall","src":"41016:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40990:6:24"},"nodeType":"YulFunctionCall","src":"40990:47:24"},"nodeType":"YulExpressionStatement","src":"40990:47:24"},{"nodeType":"YulAssignment","src":"41046:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41180:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41054:124:24"},"nodeType":"YulFunctionCall","src":"41054:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41046:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40924:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40939:4:24","type":""}],"src":"40773:419:24"},{"body":{"nodeType":"YulBlock","src":"41408:454:24","statements":[{"nodeType":"YulAssignment","src":"41418:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41430:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41441:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41426:3:24"},"nodeType":"YulFunctionCall","src":"41426:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41418:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41499:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41512:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41523:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41508:3:24"},"nodeType":"YulFunctionCall","src":"41508:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41455:43:24"},"nodeType":"YulFunctionCall","src":"41455:71:24"},"nodeType":"YulExpressionStatement","src":"41455:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41580:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41593:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41604:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41589:3:24"},"nodeType":"YulFunctionCall","src":"41589:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41536:43:24"},"nodeType":"YulFunctionCall","src":"41536:72:24"},"nodeType":"YulExpressionStatement","src":"41536:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41662:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41675:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41686:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41671:3:24"},"nodeType":"YulFunctionCall","src":"41671:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41618:43:24"},"nodeType":"YulFunctionCall","src":"41618:72:24"},"nodeType":"YulExpressionStatement","src":"41618:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41744:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41757:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41768:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41753:3:24"},"nodeType":"YulFunctionCall","src":"41753:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41700:43:24"},"nodeType":"YulFunctionCall","src":"41700:72:24"},"nodeType":"YulExpressionStatement","src":"41700:72:24"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"41826:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41839:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"41850:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41835:3:24"},"nodeType":"YulFunctionCall","src":"41835:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41782:43:24"},"nodeType":"YulFunctionCall","src":"41782:73:24"},"nodeType":"YulExpressionStatement","src":"41782:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41348:9:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"41360:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41368:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41376:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41384:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41392:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41403:4:24","type":""}],"src":"41198:664:24"},{"body":{"nodeType":"YulBlock","src":"41974:126:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41996:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"42004:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41992:3:24"},"nodeType":"YulFunctionCall","src":"41992:14:24"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"42008:34:24","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41985:6:24"},"nodeType":"YulFunctionCall","src":"41985:58:24"},"nodeType":"YulExpressionStatement","src":"41985:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42064:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"42072:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42060:3:24"},"nodeType":"YulFunctionCall","src":"42060:15:24"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"42077:15:24","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42053:6:24"},"nodeType":"YulFunctionCall","src":"42053:40:24"},"nodeType":"YulExpressionStatement","src":"42053:40:24"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41966:6:24","type":""}],"src":"41868:232:24"},{"body":{"nodeType":"YulBlock","src":"42252:220:24","statements":[{"nodeType":"YulAssignment","src":"42262:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42328:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"42333:2:24","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42269:58:24"},"nodeType":"YulFunctionCall","src":"42269:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42262:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42434:3:24"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"42345:88:24"},"nodeType":"YulFunctionCall","src":"42345:93:24"},"nodeType":"YulExpressionStatement","src":"42345:93:24"},{"nodeType":"YulAssignment","src":"42447:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42458:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"42463:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42454:3:24"},"nodeType":"YulFunctionCall","src":"42454:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42447:3:24"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42240:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42248:3:24","type":""}],"src":"42106:366:24"},{"body":{"nodeType":"YulBlock","src":"42649:248:24","statements":[{"nodeType":"YulAssignment","src":"42659:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42671:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"42682:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42667:3:24"},"nodeType":"YulFunctionCall","src":"42667:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42659:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42706:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"42717:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42702:3:24"},"nodeType":"YulFunctionCall","src":"42702:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42725:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"42731:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42721:3:24"},"nodeType":"YulFunctionCall","src":"42721:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42695:6:24"},"nodeType":"YulFunctionCall","src":"42695:47:24"},"nodeType":"YulExpressionStatement","src":"42695:47:24"},{"nodeType":"YulAssignment","src":"42751:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42885:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42759:124:24"},"nodeType":"YulFunctionCall","src":"42759:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42751:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42629:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42644:4:24","type":""}],"src":"42478:419:24"},{"body":{"nodeType":"YulBlock","src":"42931:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42948:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42951:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42941:6:24"},"nodeType":"YulFunctionCall","src":"42941:88:24"},"nodeType":"YulExpressionStatement","src":"42941:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43045:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43048:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43038:6:24"},"nodeType":"YulFunctionCall","src":"43038:15:24"},"nodeType":"YulExpressionStatement","src":"43038:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43069:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43072:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43062:6:24"},"nodeType":"YulFunctionCall","src":"43062:15:24"},"nodeType":"YulExpressionStatement","src":"43062:15:24"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"42903:180:24"},{"body":{"nodeType":"YulBlock","src":"43131:143:24","statements":[{"nodeType":"YulAssignment","src":"43141:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43164:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43146:17:24"},"nodeType":"YulFunctionCall","src":"43146:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43141:1:24"}]},{"nodeType":"YulAssignment","src":"43175:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43198:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43180:17:24"},"nodeType":"YulFunctionCall","src":"43180:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43175:1:24"}]},{"body":{"nodeType":"YulBlock","src":"43222:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43224:16:24"},"nodeType":"YulFunctionCall","src":"43224:18:24"},"nodeType":"YulExpressionStatement","src":"43224:18:24"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43219:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43212:6:24"},"nodeType":"YulFunctionCall","src":"43212:9:24"},"nodeType":"YulIf","src":"43209:35:24"},{"nodeType":"YulAssignment","src":"43254:14:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43263:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"43266:1:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43259:3:24"},"nodeType":"YulFunctionCall","src":"43259:9:24"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43254:1:24"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43120:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"43123:1:24","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43129:1:24","type":""}],"src":"43089:185:24"},{"body":{"nodeType":"YulBlock","src":"43386:64:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43408:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"43416:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43404:3:24"},"nodeType":"YulFunctionCall","src":"43404:14:24"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"43420:22:24","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43397:6:24"},"nodeType":"YulFunctionCall","src":"43397:46:24"},"nodeType":"YulExpressionStatement","src":"43397:46:24"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43378:6:24","type":""}],"src":"43280:170:24"},{"body":{"nodeType":"YulBlock","src":"43602:220:24","statements":[{"nodeType":"YulAssignment","src":"43612:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43678:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"43683:2:24","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43619:58:24"},"nodeType":"YulFunctionCall","src":"43619:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43612:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43784:3:24"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"43695:88:24"},"nodeType":"YulFunctionCall","src":"43695:93:24"},"nodeType":"YulExpressionStatement","src":"43695:93:24"},{"nodeType":"YulAssignment","src":"43797:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43808:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"43813:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43804:3:24"},"nodeType":"YulFunctionCall","src":"43804:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43797:3:24"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43590:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43598:3:24","type":""}],"src":"43456:366:24"},{"body":{"nodeType":"YulBlock","src":"43999:248:24","statements":[{"nodeType":"YulAssignment","src":"44009:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44021:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"44032:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44017:3:24"},"nodeType":"YulFunctionCall","src":"44017:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44009:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44056:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"44067:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44052:3:24"},"nodeType":"YulFunctionCall","src":"44052:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44075:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"44081:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44071:3:24"},"nodeType":"YulFunctionCall","src":"44071:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44045:6:24"},"nodeType":"YulFunctionCall","src":"44045:47:24"},"nodeType":"YulExpressionStatement","src":"44045:47:24"},{"nodeType":"YulAssignment","src":"44101:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44235:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44109:124:24"},"nodeType":"YulFunctionCall","src":"44109:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44101:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43979:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43994:4:24","type":""}],"src":"43828:419:24"},{"body":{"nodeType":"YulBlock","src":"44359:129:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44381:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"44389:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44377:3:24"},"nodeType":"YulFunctionCall","src":"44377:14:24"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"44393:34:24","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44370:6:24"},"nodeType":"YulFunctionCall","src":"44370:58:24"},"nodeType":"YulExpressionStatement","src":"44370:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44449:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"44457:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44445:3:24"},"nodeType":"YulFunctionCall","src":"44445:15:24"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"44462:18:24","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44438:6:24"},"nodeType":"YulFunctionCall","src":"44438:43:24"},"nodeType":"YulExpressionStatement","src":"44438:43:24"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44351:6:24","type":""}],"src":"44253:235:24"},{"body":{"nodeType":"YulBlock","src":"44640:220:24","statements":[{"nodeType":"YulAssignment","src":"44650:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44716:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"44721:2:24","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44657:58:24"},"nodeType":"YulFunctionCall","src":"44657:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44650:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44822:3:24"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"44733:88:24"},"nodeType":"YulFunctionCall","src":"44733:93:24"},"nodeType":"YulExpressionStatement","src":"44733:93:24"},{"nodeType":"YulAssignment","src":"44835:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44846:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"44851:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44842:3:24"},"nodeType":"YulFunctionCall","src":"44842:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44835:3:24"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44628:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44636:3:24","type":""}],"src":"44494:366:24"},{"body":{"nodeType":"YulBlock","src":"45037:248:24","statements":[{"nodeType":"YulAssignment","src":"45047:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45059:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"45070:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45055:3:24"},"nodeType":"YulFunctionCall","src":"45055:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45047:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45094:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"45105:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45090:3:24"},"nodeType":"YulFunctionCall","src":"45090:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45113:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"45119:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45109:3:24"},"nodeType":"YulFunctionCall","src":"45109:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45083:6:24"},"nodeType":"YulFunctionCall","src":"45083:47:24"},"nodeType":"YulExpressionStatement","src":"45083:47:24"},{"nodeType":"YulAssignment","src":"45139:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45273:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45147:124:24"},"nodeType":"YulFunctionCall","src":"45147:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45139:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45017:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45032:4:24","type":""}],"src":"44866:419:24"},{"body":{"nodeType":"YulBlock","src":"45417:206:24","statements":[{"nodeType":"YulAssignment","src":"45427:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45439:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"45450:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45435:3:24"},"nodeType":"YulFunctionCall","src":"45435:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45427:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45507:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45520:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"45531:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45516:3:24"},"nodeType":"YulFunctionCall","src":"45516:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"45463:43:24"},"nodeType":"YulFunctionCall","src":"45463:71:24"},"nodeType":"YulExpressionStatement","src":"45463:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45588:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45601:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"45612:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45597:3:24"},"nodeType":"YulFunctionCall","src":"45597:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"45544:43:24"},"nodeType":"YulFunctionCall","src":"45544:72:24"},"nodeType":"YulExpressionStatement","src":"45544:72:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45381:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45393:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45401:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45412:4:24","type":""}],"src":"45291:332:24"},{"body":{"nodeType":"YulBlock","src":"45735:60:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45757:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"45765:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45753:3:24"},"nodeType":"YulFunctionCall","src":"45753:14:24"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"45769:18:24","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45746:6:24"},"nodeType":"YulFunctionCall","src":"45746:42:24"},"nodeType":"YulExpressionStatement","src":"45746:42:24"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45727:6:24","type":""}],"src":"45629:166:24"},{"body":{"nodeType":"YulBlock","src":"45947:220:24","statements":[{"nodeType":"YulAssignment","src":"45957:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46023:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"46028:2:24","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45964:58:24"},"nodeType":"YulFunctionCall","src":"45964:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45957:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46129:3:24"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"46040:88:24"},"nodeType":"YulFunctionCall","src":"46040:93:24"},"nodeType":"YulExpressionStatement","src":"46040:93:24"},{"nodeType":"YulAssignment","src":"46142:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46153:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"46158:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46149:3:24"},"nodeType":"YulFunctionCall","src":"46149:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46142:3:24"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45935:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45943:3:24","type":""}],"src":"45801:366:24"},{"body":{"nodeType":"YulBlock","src":"46344:248:24","statements":[{"nodeType":"YulAssignment","src":"46354:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46366:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"46377:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46362:3:24"},"nodeType":"YulFunctionCall","src":"46362:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46354:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46401:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"46412:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46397:3:24"},"nodeType":"YulFunctionCall","src":"46397:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46420:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"46426:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46416:3:24"},"nodeType":"YulFunctionCall","src":"46416:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46390:6:24"},"nodeType":"YulFunctionCall","src":"46390:47:24"},"nodeType":"YulExpressionStatement","src":"46390:47:24"},{"nodeType":"YulAssignment","src":"46446:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46580:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46454:124:24"},"nodeType":"YulFunctionCall","src":"46454:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46446:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46324:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46339:4:24","type":""}],"src":"46173:419:24"},{"body":{"nodeType":"YulBlock","src":"46712:34:24","statements":[{"nodeType":"YulAssignment","src":"46722:18:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"46737:3:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"46722:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46684:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"46689:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"46700:11:24","type":""}],"src":"46598:148:24"},{"body":{"nodeType":"YulBlock","src":"46858:108:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46880:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"46888:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46876:3:24"},"nodeType":"YulFunctionCall","src":"46876:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"46892:66:24","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46869:6:24"},"nodeType":"YulFunctionCall","src":"46869:90:24"},"nodeType":"YulExpressionStatement","src":"46869:90:24"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46850:6:24","type":""}],"src":"46752:214:24"},{"body":{"nodeType":"YulBlock","src":"47136:236:24","statements":[{"nodeType":"YulAssignment","src":"47146:91:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47230:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"47235:1:24","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47153:76:24"},"nodeType":"YulFunctionCall","src":"47153:84:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47146:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47335:3:24"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"47246:88:24"},"nodeType":"YulFunctionCall","src":"47246:93:24"},"nodeType":"YulExpressionStatement","src":"47246:93:24"},{"nodeType":"YulAssignment","src":"47348:18:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47359:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"47364:1:24","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47355:3:24"},"nodeType":"YulFunctionCall","src":"47355:11:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47348:3:24"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47124:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47132:3:24","type":""}],"src":"46972:400:24"},{"body":{"nodeType":"YulBlock","src":"47425:32:24","statements":[{"nodeType":"YulAssignment","src":"47435:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"47446:5:24"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"47435:7:24"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47407:5:24","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"47417:7:24","type":""}],"src":"47378:79:24"},{"body":{"nodeType":"YulBlock","src":"47546:74:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47563:3:24"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47606:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"47588:17:24"},"nodeType":"YulFunctionCall","src":"47588:24:24"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"47568:19:24"},"nodeType":"YulFunctionCall","src":"47568:45:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47556:6:24"},"nodeType":"YulFunctionCall","src":"47556:58:24"},"nodeType":"YulExpressionStatement","src":"47556:58:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47534:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47541:3:24","type":""}],"src":"47463:157:24"},{"body":{"nodeType":"YulBlock","src":"47871:418:24","statements":[{"nodeType":"YulAssignment","src":"47882:155:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48033:3:24"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47889:142:24"},"nodeType":"YulFunctionCall","src":"47889:148:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47882:3:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48109:6:24"},{"name":"pos","nodeType":"YulIdentifier","src":"48118:3:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48047:61:24"},"nodeType":"YulFunctionCall","src":"48047:75:24"},"nodeType":"YulExpressionStatement","src":"48047:75:24"},{"nodeType":"YulAssignment","src":"48131:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48142:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"48147:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48138:3:24"},"nodeType":"YulFunctionCall","src":"48138:12:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48131:3:24"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48222:6:24"},{"name":"pos","nodeType":"YulIdentifier","src":"48231:3:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48160:61:24"},"nodeType":"YulFunctionCall","src":"48160:75:24"},"nodeType":"YulExpressionStatement","src":"48160:75:24"},{"nodeType":"YulAssignment","src":"48244:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48255:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"48260:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48251:3:24"},"nodeType":"YulFunctionCall","src":"48251:12:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48244:3:24"}]},{"nodeType":"YulAssignment","src":"48273:10:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"48280:3:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48273:3:24"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47842:3:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47848:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47856:6:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47867:3:24","type":""}],"src":"47626:663:24"},{"body":{"nodeType":"YulBlock","src":"48473:367:24","statements":[{"nodeType":"YulAssignment","src":"48483:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48495:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"48506:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48491:3:24"},"nodeType":"YulFunctionCall","src":"48491:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48483:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48564:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48577:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"48588:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48573:3:24"},"nodeType":"YulFunctionCall","src":"48573:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48520:43:24"},"nodeType":"YulFunctionCall","src":"48520:71:24"},"nodeType":"YulExpressionStatement","src":"48520:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48641:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48654:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"48665:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48650:3:24"},"nodeType":"YulFunctionCall","src":"48650:18:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"48601:39:24"},"nodeType":"YulFunctionCall","src":"48601:68:24"},"nodeType":"YulExpressionStatement","src":"48601:68:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"48723:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48736:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"48747:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48732:3:24"},"nodeType":"YulFunctionCall","src":"48732:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48679:43:24"},"nodeType":"YulFunctionCall","src":"48679:72:24"},"nodeType":"YulExpressionStatement","src":"48679:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"48805:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48818:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"48829:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48814:3:24"},"nodeType":"YulFunctionCall","src":"48814:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48761:43:24"},"nodeType":"YulFunctionCall","src":"48761:72:24"},"nodeType":"YulExpressionStatement","src":"48761:72:24"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48421:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"48433:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"48441:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48449:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48457:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48468:4:24","type":""}],"src":"48295:545:24"},{"body":{"nodeType":"YulBlock","src":"48874:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48891:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48894:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48884:6:24"},"nodeType":"YulFunctionCall","src":"48884:88:24"},"nodeType":"YulExpressionStatement","src":"48884:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48988:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"48991:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48981:6:24"},"nodeType":"YulFunctionCall","src":"48981:15:24"},"nodeType":"YulExpressionStatement","src":"48981:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49012:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49015:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49005:6:24"},"nodeType":"YulFunctionCall","src":"49005:15:24"},"nodeType":"YulExpressionStatement","src":"49005:15:24"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"48846:180:24"},{"body":{"nodeType":"YulBlock","src":"49138:68:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49160:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"49168:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49156:3:24"},"nodeType":"YulFunctionCall","src":"49156:14:24"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"49172:26:24","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49149:6:24"},"nodeType":"YulFunctionCall","src":"49149:50:24"},"nodeType":"YulExpressionStatement","src":"49149:50:24"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49130:6:24","type":""}],"src":"49032:174:24"},{"body":{"nodeType":"YulBlock","src":"49358:220:24","statements":[{"nodeType":"YulAssignment","src":"49368:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49434:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"49439:2:24","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49375:58:24"},"nodeType":"YulFunctionCall","src":"49375:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49368:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49540:3:24"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"49451:88:24"},"nodeType":"YulFunctionCall","src":"49451:93:24"},"nodeType":"YulExpressionStatement","src":"49451:93:24"},{"nodeType":"YulAssignment","src":"49553:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49564:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"49569:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49560:3:24"},"nodeType":"YulFunctionCall","src":"49560:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49553:3:24"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49346:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49354:3:24","type":""}],"src":"49212:366:24"},{"body":{"nodeType":"YulBlock","src":"49755:248:24","statements":[{"nodeType":"YulAssignment","src":"49765:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49777:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"49788:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49773:3:24"},"nodeType":"YulFunctionCall","src":"49773:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49765:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49812:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"49823:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49808:3:24"},"nodeType":"YulFunctionCall","src":"49808:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49831:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"49837:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49827:3:24"},"nodeType":"YulFunctionCall","src":"49827:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49801:6:24"},"nodeType":"YulFunctionCall","src":"49801:47:24"},"nodeType":"YulExpressionStatement","src":"49801:47:24"},{"nodeType":"YulAssignment","src":"49857:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49991:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49865:124:24"},"nodeType":"YulFunctionCall","src":"49865:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49857:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49735:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49750:4:24","type":""}],"src":"49584:419:24"},{"body":{"nodeType":"YulBlock","src":"50115:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50137:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"50145:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50133:3:24"},"nodeType":"YulFunctionCall","src":"50133:14:24"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"50149:33:24","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50126:6:24"},"nodeType":"YulFunctionCall","src":"50126:57:24"},"nodeType":"YulExpressionStatement","src":"50126:57:24"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50107:6:24","type":""}],"src":"50009:181:24"},{"body":{"nodeType":"YulBlock","src":"50342:220:24","statements":[{"nodeType":"YulAssignment","src":"50352:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50418:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"50423:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50359:58:24"},"nodeType":"YulFunctionCall","src":"50359:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50352:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50524:3:24"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"50435:88:24"},"nodeType":"YulFunctionCall","src":"50435:93:24"},"nodeType":"YulExpressionStatement","src":"50435:93:24"},{"nodeType":"YulAssignment","src":"50537:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50548:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"50553:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50544:3:24"},"nodeType":"YulFunctionCall","src":"50544:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50537:3:24"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50330:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50338:3:24","type":""}],"src":"50196:366:24"},{"body":{"nodeType":"YulBlock","src":"50739:248:24","statements":[{"nodeType":"YulAssignment","src":"50749:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50761:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"50772:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50757:3:24"},"nodeType":"YulFunctionCall","src":"50757:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50749:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50796:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"50807:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50792:3:24"},"nodeType":"YulFunctionCall","src":"50792:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50815:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"50821:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50811:3:24"},"nodeType":"YulFunctionCall","src":"50811:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50785:6:24"},"nodeType":"YulFunctionCall","src":"50785:47:24"},"nodeType":"YulExpressionStatement","src":"50785:47:24"},{"nodeType":"YulAssignment","src":"50841:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50975:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50849:124:24"},"nodeType":"YulFunctionCall","src":"50849:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50841:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50719:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50734:4:24","type":""}],"src":"50568:419:24"},{"body":{"nodeType":"YulBlock","src":"51099:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51121:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"51129:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51117:3:24"},"nodeType":"YulFunctionCall","src":"51117:14:24"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"51133:34:24","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51110:6:24"},"nodeType":"YulFunctionCall","src":"51110:58:24"},"nodeType":"YulExpressionStatement","src":"51110:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51189:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"51197:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51185:3:24"},"nodeType":"YulFunctionCall","src":"51185:15:24"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"51202:4:24","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51178:6:24"},"nodeType":"YulFunctionCall","src":"51178:29:24"},"nodeType":"YulExpressionStatement","src":"51178:29:24"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51091:6:24","type":""}],"src":"50993:221:24"},{"body":{"nodeType":"YulBlock","src":"51366:220:24","statements":[{"nodeType":"YulAssignment","src":"51376:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51442:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"51447:2:24","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51383:58:24"},"nodeType":"YulFunctionCall","src":"51383:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51376:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51548:3:24"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"51459:88:24"},"nodeType":"YulFunctionCall","src":"51459:93:24"},"nodeType":"YulExpressionStatement","src":"51459:93:24"},{"nodeType":"YulAssignment","src":"51561:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51572:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"51577:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51568:3:24"},"nodeType":"YulFunctionCall","src":"51568:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51561:3:24"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51354:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51362:3:24","type":""}],"src":"51220:366:24"},{"body":{"nodeType":"YulBlock","src":"51763:248:24","statements":[{"nodeType":"YulAssignment","src":"51773:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51785:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"51796:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51781:3:24"},"nodeType":"YulFunctionCall","src":"51781:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51773:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51820:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"51831:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51816:3:24"},"nodeType":"YulFunctionCall","src":"51816:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51839:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"51845:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51835:3:24"},"nodeType":"YulFunctionCall","src":"51835:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51809:6:24"},"nodeType":"YulFunctionCall","src":"51809:47:24"},"nodeType":"YulExpressionStatement","src":"51809:47:24"},{"nodeType":"YulAssignment","src":"51865:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51999:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51873:124:24"},"nodeType":"YulFunctionCall","src":"51873:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51865:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51743:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51758:4:24","type":""}],"src":"51592:419:24"},{"body":{"nodeType":"YulBlock","src":"52123:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52145:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"52153:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52141:3:24"},"nodeType":"YulFunctionCall","src":"52141:14:24"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c","kind":"string","nodeType":"YulLiteral","src":"52157:34:24","type":"","value":"ECDSA: invalid signature 'v' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52134:6:24"},"nodeType":"YulFunctionCall","src":"52134:58:24"},"nodeType":"YulExpressionStatement","src":"52134:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52213:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"52221:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52209:3:24"},"nodeType":"YulFunctionCall","src":"52209:15:24"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"52226:4:24","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52202:6:24"},"nodeType":"YulFunctionCall","src":"52202:29:24"},"nodeType":"YulExpressionStatement","src":"52202:29:24"}]},"name":"store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52115:6:24","type":""}],"src":"52017:221:24"},{"body":{"nodeType":"YulBlock","src":"52390:220:24","statements":[{"nodeType":"YulAssignment","src":"52400:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52466:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"52471:2:24","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52407:58:24"},"nodeType":"YulFunctionCall","src":"52407:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52400:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52572:3:24"}],"functionName":{"name":"store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","nodeType":"YulIdentifier","src":"52483:88:24"},"nodeType":"YulFunctionCall","src":"52483:93:24"},"nodeType":"YulExpressionStatement","src":"52483:93:24"},{"nodeType":"YulAssignment","src":"52585:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52596:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"52601:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52592:3:24"},"nodeType":"YulFunctionCall","src":"52592:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52585:3:24"}]}]},"name":"abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52378:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52386:3:24","type":""}],"src":"52244:366:24"},{"body":{"nodeType":"YulBlock","src":"52787:248:24","statements":[{"nodeType":"YulAssignment","src":"52797:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52809:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"52820:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52805:3:24"},"nodeType":"YulFunctionCall","src":"52805:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52797:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52844:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"52855:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52840:3:24"},"nodeType":"YulFunctionCall","src":"52840:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52863:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"52869:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52859:3:24"},"nodeType":"YulFunctionCall","src":"52859:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52833:6:24"},"nodeType":"YulFunctionCall","src":"52833:47:24"},"nodeType":"YulExpressionStatement","src":"52833:47:24"},{"nodeType":"YulAssignment","src":"52889:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53023:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52897:124:24"},"nodeType":"YulFunctionCall","src":"52897:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52889:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52767:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52782:4:24","type":""}],"src":"52616:419:24"},{"body":{"nodeType":"YulBlock","src":"53147:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53169:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"53177:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53165:3:24"},"nodeType":"YulFunctionCall","src":"53165:14:24"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"53181:34:24","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53158:6:24"},"nodeType":"YulFunctionCall","src":"53158:58:24"},"nodeType":"YulExpressionStatement","src":"53158:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53237:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"53245:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53233:3:24"},"nodeType":"YulFunctionCall","src":"53233:15:24"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"53250:8:24","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53226:6:24"},"nodeType":"YulFunctionCall","src":"53226:33:24"},"nodeType":"YulExpressionStatement","src":"53226:33:24"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53139:6:24","type":""}],"src":"53041:225:24"},{"body":{"nodeType":"YulBlock","src":"53418:220:24","statements":[{"nodeType":"YulAssignment","src":"53428:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53494:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"53499:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53435:58:24"},"nodeType":"YulFunctionCall","src":"53435:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53428:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53600:3:24"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulIdentifier","src":"53511:88:24"},"nodeType":"YulFunctionCall","src":"53511:93:24"},"nodeType":"YulExpressionStatement","src":"53511:93:24"},{"nodeType":"YulAssignment","src":"53613:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53624:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"53629:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53620:3:24"},"nodeType":"YulFunctionCall","src":"53620:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53613:3:24"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53406:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53414:3:24","type":""}],"src":"53272:366:24"},{"body":{"nodeType":"YulBlock","src":"53815:248:24","statements":[{"nodeType":"YulAssignment","src":"53825:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53837:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"53848:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53833:3:24"},"nodeType":"YulFunctionCall","src":"53833:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53825:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53872:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"53883:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53868:3:24"},"nodeType":"YulFunctionCall","src":"53868:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53891:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"53897:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53887:3:24"},"nodeType":"YulFunctionCall","src":"53887:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53861:6:24"},"nodeType":"YulFunctionCall","src":"53861:47:24"},"nodeType":"YulExpressionStatement","src":"53861:47:24"},{"nodeType":"YulAssignment","src":"53917:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54051:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53925:124:24"},"nodeType":"YulFunctionCall","src":"53925:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53917:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53795:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53810:4:24","type":""}],"src":"53644:419:24"},{"body":{"nodeType":"YulBlock","src":"54127:40:24","statements":[{"nodeType":"YulAssignment","src":"54138:22:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54154:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"54148:5:24"},"nodeType":"YulFunctionCall","src":"54148:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"54138:6:24"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54110:5:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"54120:6:24","type":""}],"src":"54069:98:24"},{"body":{"nodeType":"YulBlock","src":"54286:34:24","statements":[{"nodeType":"YulAssignment","src":"54296:18:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"54311:3:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"54296:11:24"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54258:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"54263:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"54274:11:24","type":""}],"src":"54173:147:24"},{"body":{"nodeType":"YulBlock","src":"54434:265:24","statements":[{"nodeType":"YulVariableDeclaration","src":"54444:52:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54490:5:24"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"54458:31:24"},"nodeType":"YulFunctionCall","src":"54458:38:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"54448:6:24","type":""}]},{"nodeType":"YulAssignment","src":"54505:95:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54588:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"54593:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"54512:75:24"},"nodeType":"YulFunctionCall","src":"54512:88:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54505:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54635:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"54642:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54631:3:24"},"nodeType":"YulFunctionCall","src":"54631:16:24"},{"name":"pos","nodeType":"YulIdentifier","src":"54649:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"54654:6:24"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"54609:21:24"},"nodeType":"YulFunctionCall","src":"54609:52:24"},"nodeType":"YulExpressionStatement","src":"54609:52:24"},{"nodeType":"YulAssignment","src":"54670:23:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54681:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"54686:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54677:3:24"},"nodeType":"YulFunctionCall","src":"54677:16:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54670:3:24"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54415:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"54422:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54430:3:24","type":""}],"src":"54326:373:24"},{"body":{"nodeType":"YulBlock","src":"54839:137:24","statements":[{"nodeType":"YulAssignment","src":"54850:100:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"54937:6:24"},{"name":"pos","nodeType":"YulIdentifier","src":"54946:3:24"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"54857:79:24"},"nodeType":"YulFunctionCall","src":"54857:93:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54850:3:24"}]},{"nodeType":"YulAssignment","src":"54960:10:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"54967:3:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54960:3:24"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54818:3:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"54824:6:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54835:3:24","type":""}],"src":"54705:271:24"},{"body":{"nodeType":"YulBlock","src":"55088:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55110:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"55118:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55106:3:24"},"nodeType":"YulFunctionCall","src":"55106:14:24"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"55122:33:24","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55099:6:24"},"nodeType":"YulFunctionCall","src":"55099:57:24"},"nodeType":"YulExpressionStatement","src":"55099:57:24"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55080:6:24","type":""}],"src":"54982:181:24"},{"body":{"nodeType":"YulBlock","src":"55315:220:24","statements":[{"nodeType":"YulAssignment","src":"55325:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55391:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"55396:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55332:58:24"},"nodeType":"YulFunctionCall","src":"55332:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55325:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55497:3:24"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"55408:88:24"},"nodeType":"YulFunctionCall","src":"55408:93:24"},"nodeType":"YulExpressionStatement","src":"55408:93:24"},{"nodeType":"YulAssignment","src":"55510:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55521:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"55526:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55517:3:24"},"nodeType":"YulFunctionCall","src":"55517:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55510:3:24"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55303:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55311:3:24","type":""}],"src":"55169:366:24"},{"body":{"nodeType":"YulBlock","src":"55712:248:24","statements":[{"nodeType":"YulAssignment","src":"55722:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55734:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"55745:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55730:3:24"},"nodeType":"YulFunctionCall","src":"55730:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55722:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55769:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"55780:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55765:3:24"},"nodeType":"YulFunctionCall","src":"55765:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55788:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"55794:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55784:3:24"},"nodeType":"YulFunctionCall","src":"55784:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55758:6:24"},"nodeType":"YulFunctionCall","src":"55758:47:24"},"nodeType":"YulExpressionStatement","src":"55758:47:24"},{"nodeType":"YulAssignment","src":"55814:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55948:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55822:124:24"},"nodeType":"YulFunctionCall","src":"55822:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55814:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55692:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55707:4:24","type":""}],"src":"55541:419:24"},{"body":{"nodeType":"YulBlock","src":"56072:120:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56094:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"56102:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56090:3:24"},"nodeType":"YulFunctionCall","src":"56090:14:24"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"56106:34:24","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56083:6:24"},"nodeType":"YulFunctionCall","src":"56083:58:24"},"nodeType":"YulExpressionStatement","src":"56083:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56162:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"56170:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56158:3:24"},"nodeType":"YulFunctionCall","src":"56158:15:24"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"56175:9:24","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56151:6:24"},"nodeType":"YulFunctionCall","src":"56151:34:24"},"nodeType":"YulExpressionStatement","src":"56151:34:24"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56064:6:24","type":""}],"src":"55966:226:24"},{"body":{"nodeType":"YulBlock","src":"56344:220:24","statements":[{"nodeType":"YulAssignment","src":"56354:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56420:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"56425:2:24","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56361:58:24"},"nodeType":"YulFunctionCall","src":"56361:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56354:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56526:3:24"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"56437:88:24"},"nodeType":"YulFunctionCall","src":"56437:93:24"},"nodeType":"YulExpressionStatement","src":"56437:93:24"},{"nodeType":"YulAssignment","src":"56539:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56550:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"56555:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56546:3:24"},"nodeType":"YulFunctionCall","src":"56546:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56539:3:24"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56332:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56340:3:24","type":""}],"src":"56198:366:24"},{"body":{"nodeType":"YulBlock","src":"56741:248:24","statements":[{"nodeType":"YulAssignment","src":"56751:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56763:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"56774:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56759:3:24"},"nodeType":"YulFunctionCall","src":"56759:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56751:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56798:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"56809:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56794:3:24"},"nodeType":"YulFunctionCall","src":"56794:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56817:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"56823:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56813:3:24"},"nodeType":"YulFunctionCall","src":"56813:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56787:6:24"},"nodeType":"YulFunctionCall","src":"56787:47:24"},"nodeType":"YulExpressionStatement","src":"56787:47:24"},{"nodeType":"YulAssignment","src":"56843:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56977:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56851:124:24"},"nodeType":"YulFunctionCall","src":"56851:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56843:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56721:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56736:4:24","type":""}],"src":"56570:419:24"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20VotesUpgradeable.Checkpoint -> struct ERC20VotesUpgradeable.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1733_memory_ptr_to_t_struct$_Checkpoint_$1733_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1733_memory_ptr__to_t_struct$_Checkpoint_$1733_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1733_memory_ptr_to_t_struct$_Checkpoint_$1733_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"active proxy\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: block not yet mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"UUPSUpgradeable: must not be cal\")\n\n        mstore(add(memPtr, 32), \"led through delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: new implementati\")\n\n        mstore(add(memPtr, 32), \"on is not UUPS\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: unsupported prox\")\n\n        mstore(add(memPtr, 32), \"iableUUID\")\n\n    }\n\n    function abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 'v' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"780":[{"length":32,"start":2327},{"length":32,"start":2470},{"length":32,"start":2964},{"length":32,"start":3107},{"length":32,"start":3283}]},"linkReferences":{},"object":"6080604052600436106101ee5760003560e01c80636fcfff451161010d57806395d89b41116100a0578063c3cda5201161006f578063c3cda5201461071a578063d505accf14610743578063dd62ed3e1461076c578063f1127ed8146107a9578063f2fde38b146107e6576101ee565b806395d89b41146106385780639ab24eb014610663578063a457c2d7146106a0578063a9059cbb146106dd576101ee565b80638129fc1c116100dc5780638129fc1c146105a25780638456cb59146105b95780638da5cb5b146105d05780638e539e8c146105fb576101ee565b80636fcfff45146104d457806370a0823114610511578063715018a61461054e5780637ecebe0014610565576101ee565b80633a46b1a81161018557806352d1902d1161015457806352d1902d14610418578063587cde1e146104435780635c19a95c146104805780635c975abb146104a9576101ee565b80633a46b1a81461037f5780633f4ba83a146103bc57806340c10f19146103d35780634f1ef286146103fc576101ee565b8063313ce567116101c1578063313ce567146102c35780633644e515146102ee5780633659cfe6146103195780633950935114610342576101ee565b806306fdde03146101f3578063095ea7b31461021e57806318160ddd1461025b57806323b872dd14610286575b600080fd5b3480156101ff57600080fd5b5061020861080f565b6040516102159190613887565b60405180910390f35b34801561022a57600080fd5b5061024560048036038101906102409190613951565b6108a1565b60405161025291906139ac565b60405180910390f35b34801561026757600080fd5b506102706108c4565b60405161027d91906139d6565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a891906139f1565b6108ce565b6040516102ba91906139ac565b60405180910390f35b3480156102cf57600080fd5b506102d86108fd565b6040516102e59190613a60565b60405180910390f35b3480156102fa57600080fd5b50610303610906565b6040516103109190613a94565b60405180910390f35b34801561032557600080fd5b50610340600480360381019061033b9190613aaf565b610915565b005b34801561034e57600080fd5b5061036960048036038101906103649190613951565b610a9e565b60405161037691906139ac565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a19190613951565b610ad5565b6040516103b391906139d6565b60405180910390f35b3480156103c857600080fd5b506103d1610b6a565b005b3480156103df57600080fd5b506103fa60048036038101906103f59190613951565b610b7c565b005b61041660048036038101906104119190613c11565b610b92565b005b34801561042457600080fd5b5061042d610ccf565b60405161043a9190613a94565b60405180910390f35b34801561044f57600080fd5b5061046a60048036038101906104659190613aaf565b610d88565b6040516104779190613c7c565b60405180910390f35b34801561048c57600080fd5b506104a760048036038101906104a29190613aaf565b610df2565b005b3480156104b557600080fd5b506104be610e06565b6040516104cb91906139ac565b60405180910390f35b3480156104e057600080fd5b506104fb60048036038101906104f69190613aaf565b610e1d565b6040516105089190613cb6565b60405180910390f35b34801561051d57600080fd5b5061053860048036038101906105339190613aaf565b610e72565b60405161054591906139d6565b60405180910390f35b34801561055a57600080fd5b50610563610ebb565b005b34801561057157600080fd5b5061058c60048036038101906105879190613aaf565b610ecf565b60405161059991906139d6565b60405180910390f35b3480156105ae57600080fd5b506105b7610f1f565b005b3480156105c557600080fd5b506105ce611127565b005b3480156105dc57600080fd5b506105e5611139565b6040516105f29190613c7c565b60405180910390f35b34801561060757600080fd5b50610622600480360381019061061d9190613cd1565b611163565b60405161062f91906139d6565b60405180910390f35b34801561064457600080fd5b5061064d6111ba565b60405161065a9190613887565b60405180910390f35b34801561066f57600080fd5b5061068a60048036038101906106859190613aaf565b61124c565b60405161069791906139d6565b60405180910390f35b3480156106ac57600080fd5b506106c760048036038101906106c29190613951565b61135f565b6040516106d491906139ac565b60405180910390f35b3480156106e957600080fd5b5061070460048036038101906106ff9190613951565b6113d6565b60405161071191906139ac565b60405180910390f35b34801561072657600080fd5b50610741600480360381019061073c9190613d56565b6113f9565b005b34801561074f57600080fd5b5061076a60048036038101906107659190613de3565b6114fd565b005b34801561077857600080fd5b50610793600480360381019061078e9190613e85565b61163f565b6040516107a091906139d6565b60405180910390f35b3480156107b557600080fd5b506107d060048036038101906107cb9190613ef1565b6116c6565b6040516107dd9190613fa6565b60405180910390f35b3480156107f257600080fd5b5061080d60048036038101906108089190613aaf565b6117d7565b005b60606036805461081e90613ff0565b80601f016020809104026020016040519081016040528092919081815260200182805461084a90613ff0565b80156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b6000806108ac61185b565b90506108b9818585611863565b600191505092915050565b6000603554905090565b6000806108d961185b565b90506108e6858285611a2e565b6108f1858585611aba565b60019150509392505050565b60006012905090565b6000610910611d3e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b90614094565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109e3611d7e565b73ffffffffffffffffffffffffffffffffffffffff1614610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3090614126565b60405180910390fd5b610a4281611dd5565b610a9b81600067ffffffffffffffff811115610a6157610a60613ae6565b5b6040519080825280601f01601f191660200182016040528015610a935781602001600182028036833780820191505090505b506000611de0565b50565b600080610aa961185b565b9050610aca818585610abb858961163f565b610ac59190614175565b611863565b600191505092915050565b6000438210610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090614217565b60405180910390fd5b610b6261013160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611f5d565b905092915050565b610b72612069565b610b7a6120e7565b565b610b84612069565b610b8e828261214a565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610c21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1890614094565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c60611d7e565b73ffffffffffffffffffffffffffffffffffffffff1614610cb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cad90614126565b60405180910390fd5b610cbf82611dd5565b610ccb82826001611de0565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d56906142a9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600061013060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e03610dfd61185b565b82612158565b50565b6000606560009054906101000a900460ff16905090565b6000610e6b61013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612273565b9050919050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ec3612069565b610ecd60006122c6565b565b6000610f1860fd60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061238c565b9050919050565b60008060019054906101000a900460ff16159050808015610f505750600160008054906101000a900460ff1660ff16105b80610f7d5750610f5f3061239a565b158015610f7c5750600160008054906101000a900460ff1660ff16145b5b610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39061433b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ff9576001600060016101000a81548160ff0219169083151502179055505b61106d6040518060400160405280600c81526020017f566f74696e67546f6b656e5800000000000000000000000000000000000000008152506040518060400160405280600381526020017f564f5400000000000000000000000000000000000000000000000000000000008152506123bd565b61107561241a565b61107d612473565b6110bb6040518060400160405280600c81526020017f566f74696e67546f6b656e5800000000000000000000000000000000000000008152506124cc565b6110c361255d565b6110cb6125ae565b80156111245760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161111b91906143a0565b60405180910390a15b50565b61112f612069565b6111376125ff565b565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004382106111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90614217565b60405180910390fd5b6111b361013283611f5d565b9050919050565b6060603780546111c990613ff0565b80601f01602080910402602001604051908101604052809291908181526020018280546111f590613ff0565b80156112425780601f1061121757610100808354040283529160200191611242565b820191906000526020600020905b81548152906001019060200180831161122557829003601f168201915b5050505050905090565b60008061013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600081146113365761013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826112ea91906143bb565b815481106112fb576112fa6143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611339565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b60008061136a61185b565b90506000611378828661163f565b9050838110156113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b490614490565b60405180910390fd5b6113ca8286868403611863565b60019250505092915050565b6000806113e161185b565b90506113ee818585611aba565b600191505092915050565b8342111561143c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611433906144fc565b60405180910390fd5b600061149e6114967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf89898960405160200161147b949392919061451c565b60405160208183030381529060405280519060200120612662565b85858561267c565b90506114a9816126a7565b86146114ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e1906145ad565b60405180910390fd5b6114f48188612158565b50505050505050565b83421115611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153790614619565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861156f8c6126a7565b8960405160200161158596959493929190614639565b60405160208183030381529060405280519060200120905060006115a882612662565b905060006115b88287878761267c565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161f906146e6565b60405180910390fd5b6116338a8a8a611863565b50505050505050505050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116ce61370d565b61013160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110611726576117256143ef565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6117df612069565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184690614778565b60405180910390fd5b611858816122c6565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ca9061480a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193a9061489c565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a2191906139d6565b60405180910390a3505050565b6000611a3a848461163f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ab45781811015611aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9d90614908565b60405180910390fd5b611ab38484848403611863565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b219061499a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9190614a2c565b60405180910390fd5b611ba5838383612705565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2390614abe565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cc19190614175565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d2591906139d6565b60405180910390a3611d3884848461271d565b50505050565b6000611d797f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d6c61272d565b611d74612737565b612741565b905090565b6000611dac7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61277b565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611ddd612069565b50565b611e0c7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b612785565b60000160009054906101000a900460ff1615611e3057611e2b8361278f565b611f58565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7657600080fd5b505afa925050508015611ea757506040513d601f19601f82011682018060405250810190611ea49190614af3565b60015b611ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edd90614b92565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4290614c24565b60405180910390fd5b50611f57838383612848565b5b505050565b6000808380549050905060005b81811015611fdc576000611f7e8284612874565b905084868281548110611f9457611f936143ef565b5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff161115611fc657809250611fd6565b600181611fd39190614175565b91505b50611f6a565b6000821461203e5784600183611ff291906143bb565b81548110612003576120026143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612041565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169250505092915050565b61207161185b565b73ffffffffffffffffffffffffffffffffffffffff1661208f611139565b73ffffffffffffffffffffffffffffffffffffffff16146120e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120dc90614c90565b60405180910390fd5b565b6120ef61289a565b6000606560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61213361185b565b6040516121409190613c7c565b60405180910390a1565b61215482826128e3565b5050565b600061216383610d88565b9050600061217084610e72565b90508261013060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461226d828483612971565b50505050565b600063ffffffff80168211156122be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122b590614d22565b60405180910390fd5b819050919050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661240c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240390614db4565b60405180910390fd5b6124168282612b6c565b5050565b600060019054906101000a900460ff16612469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246090614db4565b60405180910390fd5b612471612bed565b565b600060019054906101000a900460ff166124c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b990614db4565b60405180910390fd5b6124ca612c59565b565b600060019054906101000a900460ff1661251b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161251290614db4565b60405180910390fd5b61255a816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250612cba565b50565b600060019054906101000a900460ff166125ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a390614db4565b60405180910390fd5b565b600060019054906101000a900460ff166125fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f490614db4565b60405180910390fd5b565b612607612d35565b6001606560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861264b61185b565b6040516126589190613c7c565b60405180910390a1565b600061267561266f611d3e565b83612d7f565b9050919050565b600080600061268d87878787612db2565b9150915061269a81612ebf565b8192505050949350505050565b60008060fd60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126f48161238c565b91506126ff81613094565b50919050565b61270d612d35565b6127188383836130aa565b505050565b6127288383836130af565b505050565b600060c954905090565b600060ca54905090565b6000838383463060405160200161275c959493929190614dd4565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b6000819050919050565b6127988161239a565b6127d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ce90614e99565b60405180910390fd5b806128047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61277b565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b612851836130da565b60008251118061285e5750805b1561286f5761286d8383613129565b505b505050565b600060028284186128859190614ee8565b8284166128929190614175565b905092915050565b6128a2610e06565b6128e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128d890614f65565b60405180910390fd5b565b6128ed828261320d565b6128f561336e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661291b6108c4565b111561295c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295390614ff7565b60405180910390fd5b61296b610132613392836133a8565b50505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156129ad5750600081115b15612b6757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612a8c57600080612a3561013160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613620856133a8565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612a81929190615017565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612b6657600080612b0f61013160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613392856133a8565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612b5b929190615017565b60405180910390a250505b5b505050565b600060019054906101000a900460ff16612bbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb290614db4565b60405180910390fd5b8160369080519060200190612bd192919061374b565b508060379080519060200190612be892919061374b565b505050565b600060019054906101000a900460ff16612c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c3390614db4565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16612ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c9f90614db4565b60405180910390fd5b612cb8612cb361185b565b6122c6565b565b600060019054906101000a900460ff16612d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0090614db4565b60405180910390fd5b6000828051906020012090506000828051906020012090508160c9819055508060ca8190555050505050565b612d3d610e06565b15612d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d749061508c565b60405180910390fd5b565b60008282604051602001612d94929190615124565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115612ded576000600391509150612eb6565b601b8560ff1614158015612e055750601c8560ff1614155b15612e17576000600491509150612eb6565b600060018787878760405160008152602001604052604051612e3c949392919061515b565b6020604051602081039080840390855afa158015612e5e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ead57600060019250925050612eb6565b80600092509250505b94509492505050565b60006004811115612ed357612ed26151a0565b5b816004811115612ee657612ee56151a0565b5b1415612ef157613091565b60016004811115612f0557612f046151a0565b5b816004811115612f1857612f176151a0565b5b1415612f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f509061521b565b60405180910390fd5b60026004811115612f6d57612f6c6151a0565b5b816004811115612f8057612f7f6151a0565b5b1415612fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fb890615287565b60405180910390fd5b60036004811115612fd557612fd46151a0565b5b816004811115612fe857612fe76151a0565b5b1415613029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161302090615319565b60405180910390fd5b60048081111561303c5761303b6151a0565b5b81600481111561304f5761304e6151a0565b5b1415613090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613087906153ab565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b505050565b6130ba838383613636565b6130d56130c684610d88565b6130cf84610d88565b83612971565b505050565b6130e38161278f565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606131348361239a565b613173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161316a9061543d565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161319b91906154a4565b600060405180830381855af49150503d80600081146131d6576040519150601f19603f3d011682016040523d82523d6000602084013e6131db565b606091505b509150915061320382826040518060600160405280602781526020016155ba6027913961363b565b9250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561327d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161327490615507565b60405180910390fd5b61328960008383612705565b806035600082825461329b9190614175565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546132f19190614175565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161335691906139d6565b60405180910390a361336a6000838361271d565b5050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600081836133a09190614175565b905092915050565b6000806000858054905090506000811461341657856001826133ca91906143bb565b815481106133db576133da6143ef565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16613419565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16925061344783858763ffffffff16565b915060008111801561349a5750438660018361346391906143bb565b81548110613474576134736143ef565b5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16145b15613527576134a8826136a2565b866001836134b691906143bb565b815481106134c7576134c66143ef565b5b9060005260206000200160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550613617565b85604051806040016040528061353c43612273565b63ffffffff168152602001613550856136a2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b50935093915050565b6000818361362e91906143bb565b905092915050565b505050565b6060831561364b5782905061369b565b60008351111561365e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136929190613887565b60405180910390fd5b9392505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115613705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136fc90615599565b60405180910390fd5b819050919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b82805461375790613ff0565b90600052602060002090601f01602090048101928261377957600085556137c0565b82601f1061379257805160ff19168380011785556137c0565b828001600101855582156137c0579182015b828111156137bf5782518255916020019190600101906137a4565b5b5090506137cd91906137d1565b5090565b5b808211156137ea5760008160009055506001016137d2565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561382857808201518184015260208101905061380d565b83811115613837576000848401525b50505050565b6000601f19601f8301169050919050565b6000613859826137ee565b61386381856137f9565b935061387381856020860161380a565b61387c8161383d565b840191505092915050565b600060208201905081810360008301526138a1818461384e565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006138e8826138bd565b9050919050565b6138f8816138dd565b811461390357600080fd5b50565b600081359050613915816138ef565b92915050565b6000819050919050565b61392e8161391b565b811461393957600080fd5b50565b60008135905061394b81613925565b92915050565b60008060408385031215613968576139676138b3565b5b600061397685828601613906565b92505060206139878582860161393c565b9150509250929050565b60008115159050919050565b6139a681613991565b82525050565b60006020820190506139c1600083018461399d565b92915050565b6139d08161391b565b82525050565b60006020820190506139eb60008301846139c7565b92915050565b600080600060608486031215613a0a57613a096138b3565b5b6000613a1886828701613906565b9350506020613a2986828701613906565b9250506040613a3a8682870161393c565b9150509250925092565b600060ff82169050919050565b613a5a81613a44565b82525050565b6000602082019050613a756000830184613a51565b92915050565b6000819050919050565b613a8e81613a7b565b82525050565b6000602082019050613aa96000830184613a85565b92915050565b600060208284031215613ac557613ac46138b3565b5b6000613ad384828501613906565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613b1e8261383d565b810181811067ffffffffffffffff82111715613b3d57613b3c613ae6565b5b80604052505050565b6000613b506138a9565b9050613b5c8282613b15565b919050565b600067ffffffffffffffff821115613b7c57613b7b613ae6565b5b613b858261383d565b9050602081019050919050565b82818337600083830152505050565b6000613bb4613baf84613b61565b613b46565b905082815260208101848484011115613bd057613bcf613ae1565b5b613bdb848285613b92565b509392505050565b600082601f830112613bf857613bf7613adc565b5b8135613c08848260208601613ba1565b91505092915050565b60008060408385031215613c2857613c276138b3565b5b6000613c3685828601613906565b925050602083013567ffffffffffffffff811115613c5757613c566138b8565b5b613c6385828601613be3565b9150509250929050565b613c76816138dd565b82525050565b6000602082019050613c916000830184613c6d565b92915050565b600063ffffffff82169050919050565b613cb081613c97565b82525050565b6000602082019050613ccb6000830184613ca7565b92915050565b600060208284031215613ce757613ce66138b3565b5b6000613cf58482850161393c565b91505092915050565b613d0781613a44565b8114613d1257600080fd5b50565b600081359050613d2481613cfe565b92915050565b613d3381613a7b565b8114613d3e57600080fd5b50565b600081359050613d5081613d2a565b92915050565b60008060008060008060c08789031215613d7357613d726138b3565b5b6000613d8189828a01613906565b9650506020613d9289828a0161393c565b9550506040613da389828a0161393c565b9450506060613db489828a01613d15565b9350506080613dc589828a01613d41565b92505060a0613dd689828a01613d41565b9150509295509295509295565b600080600080600080600060e0888a031215613e0257613e016138b3565b5b6000613e108a828b01613906565b9750506020613e218a828b01613906565b9650506040613e328a828b0161393c565b9550506060613e438a828b0161393c565b9450506080613e548a828b01613d15565b93505060a0613e658a828b01613d41565b92505060c0613e768a828b01613d41565b91505092959891949750929550565b60008060408385031215613e9c57613e9b6138b3565b5b6000613eaa85828601613906565b9250506020613ebb85828601613906565b9150509250929050565b613ece81613c97565b8114613ed957600080fd5b50565b600081359050613eeb81613ec5565b92915050565b60008060408385031215613f0857613f076138b3565b5b6000613f1685828601613906565b9250506020613f2785828601613edc565b9150509250929050565b613f3a81613c97565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b613f7181613f40565b82525050565b604082016000820151613f8d6000850182613f31565b506020820151613fa06020850182613f68565b50505050565b6000604082019050613fbb6000830184613f77565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061400857607f821691505b6020821081141561401c5761401b613fc1565b5b50919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b600061407e602c836137f9565b915061408982614022565b604082019050919050565b600060208201905081810360008301526140ad81614071565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000614110602c836137f9565b915061411b826140b4565b604082019050919050565b6000602082019050818103600083015261413f81614103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006141808261391b565b915061418b8361391b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156141c0576141bf614146565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b6000614201601f836137f9565b915061420c826141cb565b602082019050919050565b60006020820190508181036000830152614230816141f4565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006142936038836137f9565b915061429e82614237565b604082019050919050565b600060208201905081810360008301526142c281614286565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614325602e836137f9565b9150614330826142c9565b604082019050919050565b6000602082019050818103600083015261435481614318565b9050919050565b6000819050919050565b6000819050919050565b600061438a6143856143808461435b565b614365565b613a44565b9050919050565b61439a8161436f565b82525050565b60006020820190506143b56000830184614391565b92915050565b60006143c68261391b565b91506143d18361391b565b9250828210156143e4576143e3614146565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061447a6025836137f9565b91506144858261441e565b604082019050919050565b600060208201905081810360008301526144a98161446d565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b60006144e6601d836137f9565b91506144f1826144b0565b602082019050919050565b60006020820190508181036000830152614515816144d9565b9050919050565b60006080820190506145316000830187613a85565b61453e6020830186613c6d565b61454b60408301856139c7565b61455860608301846139c7565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b60006145976019836137f9565b91506145a282614561565b602082019050919050565b600060208201905081810360008301526145c68161458a565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000614603601d836137f9565b915061460e826145cd565b602082019050919050565b60006020820190508181036000830152614632816145f6565b9050919050565b600060c08201905061464e6000830189613a85565b61465b6020830188613c6d565b6146686040830187613c6d565b61467560608301866139c7565b61468260808301856139c7565b61468f60a08301846139c7565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b60006146d0601e836137f9565b91506146db8261469a565b602082019050919050565b600060208201905081810360008301526146ff816146c3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006147626026836137f9565b915061476d82614706565b604082019050919050565b6000602082019050818103600083015261479181614755565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006147f46024836137f9565b91506147ff82614798565b604082019050919050565b60006020820190508181036000830152614823816147e7565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006148866022836137f9565b91506148918261482a565b604082019050919050565b600060208201905081810360008301526148b581614879565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006148f2601d836137f9565b91506148fd826148bc565b602082019050919050565b60006020820190508181036000830152614921816148e5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006149846025836137f9565b915061498f82614928565b604082019050919050565b600060208201905081810360008301526149b381614977565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614a166023836137f9565b9150614a21826149ba565b604082019050919050565b60006020820190508181036000830152614a4581614a09565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614aa86026836137f9565b9150614ab382614a4c565b604082019050919050565b60006020820190508181036000830152614ad781614a9b565b9050919050565b600081519050614aed81613d2a565b92915050565b600060208284031215614b0957614b086138b3565b5b6000614b1784828501614ade565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000614b7c602e836137f9565b9150614b8782614b20565b604082019050919050565b60006020820190508181036000830152614bab81614b6f565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000614c0e6029836137f9565b9150614c1982614bb2565b604082019050919050565b60006020820190508181036000830152614c3d81614c01565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614c7a6020836137f9565b9150614c8582614c44565b602082019050919050565b60006020820190508181036000830152614ca981614c6d565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000614d0c6026836137f9565b9150614d1782614cb0565b604082019050919050565b60006020820190508181036000830152614d3b81614cff565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614d9e602b836137f9565b9150614da982614d42565b604082019050919050565b60006020820190508181036000830152614dcd81614d91565b9050919050565b600060a082019050614de96000830188613a85565b614df66020830187613a85565b614e036040830186613a85565b614e1060608301856139c7565b614e1d6080830184613c6d565b9695505050505050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000614e83602d836137f9565b9150614e8e82614e27565b604082019050919050565b60006020820190508181036000830152614eb281614e76565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614ef38261391b565b9150614efe8361391b565b925082614f0e57614f0d614eb9565b5b828204905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000614f4f6014836137f9565b9150614f5a82614f19565b602082019050919050565b60006020820190508181036000830152614f7e81614f42565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b6000614fe16030836137f9565b9150614fec82614f85565b604082019050919050565b6000602082019050818103600083015261501081614fd4565b9050919050565b600060408201905061502c60008301856139c7565b61503960208301846139c7565b9392505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006150766010836137f9565b915061508182615040565b602082019050919050565b600060208201905081810360008301526150a581615069565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006150ed6002836150ac565b91506150f8826150b7565b600282019050919050565b6000819050919050565b61511e61511982613a7b565b615103565b82525050565b600061512f826150e0565b915061513b828561510d565b60208201915061514b828461510d565b6020820191508190509392505050565b60006080820190506151706000830187613a85565b61517d6020830186613a51565b61518a6040830185613a85565b6151976060830184613a85565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006152056018836137f9565b9150615210826151cf565b602082019050919050565b60006020820190508181036000830152615234816151f8565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000615271601f836137f9565b915061527c8261523b565b602082019050919050565b600060208201905081810360008301526152a081615264565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006153036022836137f9565b915061530e826152a7565b604082019050919050565b60006020820190508181036000830152615332816152f6565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006153956022836137f9565b91506153a082615339565b604082019050919050565b600060208201905081810360008301526153c481615388565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006154276026836137f9565b9150615432826153cb565b604082019050919050565b600060208201905081810360008301526154568161541a565b9050919050565b600081519050919050565b600081905092915050565b600061547e8261545d565b6154888185615468565b935061549881856020860161380a565b80840191505092915050565b60006154b08284615473565b915081905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006154f1601f836137f9565b91506154fc826154bb565b602082019050919050565b60006020820190508181036000830152615520816154e4565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b60006155836027836137f9565b915061558e82615527565b604082019050919050565b600060208201905081810360008301526155b281615576565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c677cf51d7edce4efee089200fcfcdc3bc5273188d65885e2e92384c235b254664736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E6 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6DD JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5FB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x565 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A9 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3FC JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x342 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x3C11 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x563 PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B7 PUSH2 0xF1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH2 0x1127 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x622 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3CD1 JUMP JUMPDEST PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x135F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x704 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x3951 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x741 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x3D56 JUMP JUMPDEST PUSH2 0x13F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x3DE3 JUMP JUMPDEST PUSH2 0x14FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x793 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x3EF1 JUMP JUMPDEST PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x3FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x3AAF JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x81E SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8AC PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x8B9 DUP2 DUP6 DUP6 PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D9 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x8E6 DUP6 DUP3 DUP6 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x8F1 DUP6 DUP6 DUP6 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E3 PUSH2 0x1D7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x4126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP2 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0x1DE0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA9 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0xABB DUP6 DUP10 PUSH2 0x163F JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP1 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB62 PUSH2 0x131 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB72 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xB7A PUSH2 0x20E7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB84 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xB8E DUP3 DUP3 PUSH2 0x214A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC18 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC60 PUSH2 0x1D7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP1 PUSH2 0x4126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF DUP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0xCCB DUP3 DUP3 PUSH1 0x1 PUSH2 0x1DE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE03 PUSH2 0xDFD PUSH2 0x185B JUMP JUMPDEST DUP3 PUSH2 0x2158 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6B PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC3 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xECD PUSH1 0x0 PUSH2 0x22C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0xFD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x238C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xF50 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xF7D JUMPI POP PUSH2 0xF5F ADDRESS PUSH2 0x239A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x433B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x106D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F74696E67546F6B656E580000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x564F540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x23BD JUMP JUMPDEST PUSH2 0x1075 PUSH2 0x241A JUMP JUMPDEST PUSH2 0x107D PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F74696E67546F6B656E580000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x10C3 PUSH2 0x255D JUMP JUMPDEST PUSH2 0x10CB PUSH2 0x25AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x112F PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x1137 PUSH2 0x25FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B3 PUSH2 0x132 DUP4 PUSH2 0x1F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x11C9 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11F5 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1217 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1242 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1225 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1336 JUMPI PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x136A PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1378 DUP3 DUP7 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP1 PUSH2 0x4490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13E1 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP PUSH2 0x13EE DUP2 DUP6 DUP6 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP1 PUSH2 0x44FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E PUSH2 0x1496 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x147B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x451C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2662 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x267C JUMP JUMPDEST SWAP1 POP PUSH2 0x14A9 DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP7 EQ PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E1 SWAP1 PUSH2 0x45AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F4 DUP2 DUP9 PUSH2 0x2158 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1537 SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x156F DUP13 PUSH2 0x26A7 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1585 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x15A8 DUP3 PUSH2 0x2662 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x267C JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161F SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1633 DUP11 DUP11 DUP11 PUSH2 0x1863 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16CE PUSH2 0x370D JUMP JUMPDEST PUSH2 0x131 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x184F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP1 PUSH2 0x4778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x22C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CA SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x489C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3A DUP5 DUP5 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1AB4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9D SWAP1 PUSH2 0x4908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AB3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1863 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP1 PUSH2 0x499A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x4A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA5 DUP4 DUP4 DUP4 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C23 SWAP1 PUSH2 0x4ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CC1 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D25 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D38 DUP5 DUP5 DUP5 PUSH2 0x271D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D79 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D6C PUSH2 0x272D JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DDD PUSH2 0x2069 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E0C PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E30 JUMPI PUSH2 0x1E2B DUP4 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x1F58 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EA7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA4 SWAP2 SWAP1 PUSH2 0x4AF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1EE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDD SWAP1 PUSH2 0x4B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1F4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F42 SWAP1 PUSH2 0x4C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1F57 DUP4 DUP4 DUP4 PUSH2 0x2848 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FDC JUMPI PUSH1 0x0 PUSH2 0x1F7E DUP3 DUP5 PUSH2 0x2874 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1FC6 JUMPI DUP1 SWAP3 POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x1F6A JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x203E JUMPI DUP5 PUSH1 0x1 DUP4 PUSH2 0x1FF2 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2003 JUMPI PUSH2 0x2002 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x185B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x208F PUSH2 0x1139 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DC SWAP1 PUSH2 0x4C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20EF PUSH2 0x289A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2133 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2140 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2154 DUP3 DUP3 PUSH2 0x28E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2163 DUP4 PUSH2 0xD88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2170 DUP5 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x130 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x226D DUP3 DUP5 DUP4 PUSH2 0x2971 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x22BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B5 SWAP1 PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2403 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2416 DUP3 DUP3 PUSH2 0x2B6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2460 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2471 PUSH2 0x2BED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24CA PUSH2 0x2C59 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x251B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2512 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x255A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2CBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A3 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F4 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2607 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x264B PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2658 SWAP2 SWAP1 PUSH2 0x3C7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2675 PUSH2 0x266F PUSH2 0x1D3E JUMP JUMPDEST DUP4 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x268D DUP8 DUP8 DUP8 DUP8 PUSH2 0x2DB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x269A DUP2 PUSH2 0x2EBF JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x26F4 DUP2 PUSH2 0x238C JUMP JUMPDEST SWAP2 POP PUSH2 0x26FF DUP2 PUSH2 0x3094 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x270D PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0x2718 DUP4 DUP4 DUP4 PUSH2 0x30AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2728 DUP4 DUP4 DUP4 PUSH2 0x30AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x275C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2798 DUP2 PUSH2 0x239A JUMP JUMPDEST PUSH2 0x27D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CE SWAP1 PUSH2 0x4E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2804 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2851 DUP4 PUSH2 0x30DA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x285E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x286F JUMPI PUSH2 0x286D DUP4 DUP4 PUSH2 0x3129 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x4EE8 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2892 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28A2 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x28E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D8 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x28ED DUP3 DUP3 PUSH2 0x320D JUMP JUMPDEST PUSH2 0x28F5 PUSH2 0x336E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x291B PUSH2 0x8C4 JUMP JUMPDEST GT ISZERO PUSH2 0x295C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2953 SWAP1 PUSH2 0x4FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296B PUSH2 0x132 PUSH2 0x3392 DUP4 PUSH2 0x33A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29AD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2B67 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 PUSH2 0x2A35 PUSH2 0x131 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3620 DUP6 PUSH2 0x33A8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2A81 SWAP3 SWAP2 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B66 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B0F PUSH2 0x131 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3392 DUP6 PUSH2 0x33A8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B5B SWAP3 SWAP2 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB2 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BD1 SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BE8 SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2C3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C33 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9F SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CB8 PUSH2 0x2CB3 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x22C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D00 SWAP1 PUSH2 0x4DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xCA DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D3D PUSH2 0xE06 JUMP JUMPDEST ISZERO PUSH2 0x2D7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D74 SWAP1 PUSH2 0x508C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D94 SWAP3 SWAP2 SWAP1 PUSH2 0x5124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2DED JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2E05 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E17 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2E3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EAD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2EB6 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2ED3 JUMPI PUSH2 0x2ED2 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2EF1 JUMPI PUSH2 0x3091 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F05 JUMPI PUSH2 0x2F04 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F50 SWAP1 PUSH2 0x521B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F6D JUMPI PUSH2 0x2F6C PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F80 JUMPI PUSH2 0x2F7F PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2FC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB8 SWAP1 PUSH2 0x5287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FD5 JUMPI PUSH2 0x2FD4 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FE8 JUMPI PUSH2 0x2FE7 PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3020 SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x303C JUMPI PUSH2 0x303B PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x304F JUMPI PUSH2 0x304E PUSH2 0x51A0 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3090 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3087 SWAP1 PUSH2 0x53AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x30BA DUP4 DUP4 DUP4 PUSH2 0x3636 JUMP JUMPDEST PUSH2 0x30D5 PUSH2 0x30C6 DUP5 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x30CF DUP5 PUSH2 0xD88 JUMP JUMPDEST DUP4 PUSH2 0x2971 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x30E3 DUP2 PUSH2 0x278F JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3134 DUP4 PUSH2 0x239A JUMP JUMPDEST PUSH2 0x3173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316A SWAP1 PUSH2 0x543D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x54A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x31D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x31DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3203 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55BA PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x363B JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x327D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3274 SWAP1 PUSH2 0x5507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3289 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2705 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x329B SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x32F1 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3356 SWAP2 SWAP1 PUSH2 0x39D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x336A PUSH1 0x0 DUP4 DUP4 PUSH2 0x271D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33A0 SWAP2 SWAP1 PUSH2 0x4175 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x3416 JUMPI DUP6 PUSH1 0x1 DUP3 PUSH2 0x33CA SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x33DB JUMPI PUSH2 0x33DA PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x3447 DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x349A JUMPI POP NUMBER DUP7 PUSH1 0x1 DUP4 PUSH2 0x3463 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3474 JUMPI PUSH2 0x3473 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3527 JUMPI PUSH2 0x34A8 DUP3 PUSH2 0x36A2 JUMP JUMPDEST DUP7 PUSH1 0x1 DUP4 PUSH2 0x34B6 SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x43EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3617 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x353C NUMBER PUSH2 0x2273 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3550 DUP6 PUSH2 0x36A2 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x362E SWAP2 SWAP1 PUSH2 0x43BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x364B JUMPI DUP3 SWAP1 POP PUSH2 0x369B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x365E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3692 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x3705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36FC SWAP1 PUSH2 0x5599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3757 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3779 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x37C0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3792 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x37C0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x37C0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x37BF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37A4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x37CD SWAP2 SWAP1 PUSH2 0x37D1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37EA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3828 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x380D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3837 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP3 PUSH2 0x37EE JUMP JUMPDEST PUSH2 0x3863 DUP2 DUP6 PUSH2 0x37F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3873 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x380A JUMP JUMPDEST PUSH2 0x387C DUP2 PUSH2 0x383D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 DUP5 PUSH2 0x384E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E8 DUP3 PUSH2 0x38BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38F8 DUP2 PUSH2 0x38DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3915 DUP2 PUSH2 0x38EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x392E DUP2 PUSH2 0x391B JUMP JUMPDEST DUP2 EQ PUSH2 0x3939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x394B DUP2 PUSH2 0x3925 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3968 JUMPI PUSH2 0x3967 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3976 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3987 DUP6 DUP3 DUP7 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A6 DUP2 PUSH2 0x3991 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x399D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39D0 DUP2 PUSH2 0x391B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A0A JUMPI PUSH2 0x3A09 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A18 DUP7 DUP3 DUP8 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A29 DUP7 DUP3 DUP8 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A3A DUP7 DUP3 DUP8 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5A DUP2 PUSH2 0x3A44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8E DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AA9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AC5 JUMPI PUSH2 0x3AC4 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AD3 DUP5 DUP3 DUP6 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3B1E DUP3 PUSH2 0x383D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3B3D JUMPI PUSH2 0x3B3C PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B50 PUSH2 0x38A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B5C DUP3 DUP3 PUSH2 0x3B15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3B7C JUMPI PUSH2 0x3B7B PUSH2 0x3AE6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B85 DUP3 PUSH2 0x383D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 PUSH2 0x3BAF DUP5 PUSH2 0x3B61 JUMP JUMPDEST PUSH2 0x3B46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3BD0 JUMPI PUSH2 0x3BCF PUSH2 0x3AE1 JUMP JUMPDEST JUMPDEST PUSH2 0x3BDB DUP5 DUP3 DUP6 PUSH2 0x3B92 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BF8 JUMPI PUSH2 0x3BF7 PUSH2 0x3ADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3C08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C36 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x38B8 JUMP JUMPDEST JUMPDEST PUSH2 0x3C63 DUP6 DUP3 DUP7 ADD PUSH2 0x3BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C76 DUP2 PUSH2 0x38DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB0 DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE7 JUMPI PUSH2 0x3CE6 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CF5 DUP5 DUP3 DUP6 ADD PUSH2 0x393C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D07 DUP2 PUSH2 0x3A44 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D24 DUP2 PUSH2 0x3CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D33 DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP2 EQ PUSH2 0x3D3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D50 DUP2 PUSH2 0x3D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3D73 JUMPI PUSH2 0x3D72 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D81 DUP10 DUP3 DUP11 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3D92 DUP10 DUP3 DUP11 ADD PUSH2 0x393C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3DA3 DUP10 DUP3 DUP11 ADD PUSH2 0x393C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3DB4 DUP10 DUP3 DUP11 ADD PUSH2 0x3D15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3DC5 DUP10 DUP3 DUP11 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3DD6 DUP10 DUP3 DUP11 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3E02 JUMPI PUSH2 0x3E01 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E10 DUP11 DUP3 DUP12 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3E21 DUP11 DUP3 DUP12 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3E32 DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3E43 DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3E54 DUP11 DUP3 DUP12 ADD PUSH2 0x3D15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3E65 DUP11 DUP3 DUP12 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3E76 DUP11 DUP3 DUP12 ADD PUSH2 0x3D41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E9C JUMPI PUSH2 0x3E9B PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EAA DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3EBB DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ECE DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP2 EQ PUSH2 0x3ED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEB DUP2 PUSH2 0x3EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F08 JUMPI PUSH2 0x3F07 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F16 DUP6 DUP3 DUP7 ADD PUSH2 0x3906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F27 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F3A DUP2 PUSH2 0x3C97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F71 DUP2 PUSH2 0x3F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3F8D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3F31 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3FA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3F68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4008 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x401C JUMPI PUSH2 0x401B PUSH2 0x3FC1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407E PUSH1 0x2C DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4089 DUP3 PUSH2 0x4022 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40AD DUP2 PUSH2 0x4071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4110 PUSH1 0x2C DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x411B DUP3 PUSH2 0x40B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x413F DUP2 PUSH2 0x4103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4180 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x418B DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x41C0 JUMPI PUSH2 0x41BF PUSH2 0x4146 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4201 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x420C DUP3 PUSH2 0x41CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4230 DUP2 PUSH2 0x41F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4293 PUSH1 0x38 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x429E DUP3 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42C2 DUP2 PUSH2 0x4286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4325 PUSH1 0x2E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4330 DUP3 PUSH2 0x42C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4354 DUP2 PUSH2 0x4318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438A PUSH2 0x4385 PUSH2 0x4380 DUP5 PUSH2 0x435B JUMP JUMPDEST PUSH2 0x4365 JUMP JUMPDEST PUSH2 0x3A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439A DUP2 PUSH2 0x436F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4391 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C6 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D1 DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x43E4 JUMPI PUSH2 0x43E3 PUSH2 0x4146 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x25 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x441E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44A9 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E6 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x44F1 DUP3 PUSH2 0x44B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4515 DUP2 PUSH2 0x44D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4531 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x453E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x454B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4558 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4597 PUSH1 0x19 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A2 DUP3 PUSH2 0x4561 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C6 DUP2 PUSH2 0x458A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4603 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x460E DUP3 PUSH2 0x45CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x45F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x464E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x465B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x4668 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3C6D JUMP JUMPDEST PUSH2 0x4675 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4682 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x468F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D0 PUSH1 0x1E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x46DB DUP3 PUSH2 0x469A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46FF DUP2 PUSH2 0x46C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4762 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x476D DUP3 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4791 DUP2 PUSH2 0x4755 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F4 PUSH1 0x24 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x47FF DUP3 PUSH2 0x4798 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4823 DUP2 PUSH2 0x47E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4886 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4891 DUP3 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B5 DUP2 PUSH2 0x4879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F2 PUSH1 0x1D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x48FD DUP3 PUSH2 0x48BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4921 DUP2 PUSH2 0x48E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4984 PUSH1 0x25 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x498F DUP3 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B3 DUP2 PUSH2 0x4977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A16 PUSH1 0x23 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A21 DUP3 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A45 DUP2 PUSH2 0x4A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA8 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AB3 DUP3 PUSH2 0x4A4C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AD7 DUP2 PUSH2 0x4A9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AED DUP2 PUSH2 0x3D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B09 JUMPI PUSH2 0x4B08 PUSH2 0x38B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B17 DUP5 DUP3 DUP6 ADD PUSH2 0x4ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7C PUSH1 0x2E DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B87 DUP3 PUSH2 0x4B20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BAB DUP2 PUSH2 0x4B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0E PUSH1 0x29 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C19 DUP3 PUSH2 0x4BB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3D DUP2 PUSH2 0x4C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7A PUSH1 0x20 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C85 DUP3 PUSH2 0x4C44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CA9 DUP2 PUSH2 0x4C6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0C PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D17 DUP3 PUSH2 0x4CB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D3B DUP2 PUSH2 0x4CFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9E PUSH1 0x2B DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA9 DUP3 PUSH2 0x4D42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DCD DUP2 PUSH2 0x4D91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4DE9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4DF6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4E03 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x4E10 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x4E1D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C6D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E83 PUSH1 0x2D DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8E DUP3 PUSH2 0x4E27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB2 DUP2 PUSH2 0x4E76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF3 DUP3 PUSH2 0x391B JUMP JUMPDEST SWAP2 POP PUSH2 0x4EFE DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4F0E JUMPI PUSH2 0x4F0D PUSH2 0x4EB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4F PUSH1 0x14 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F5A DUP3 PUSH2 0x4F19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F7E DUP2 PUSH2 0x4F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FE1 PUSH1 0x30 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FEC DUP3 PUSH2 0x4F85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5010 DUP2 PUSH2 0x4FD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x502C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39C7 JUMP JUMPDEST PUSH2 0x5039 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5076 PUSH1 0x10 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5081 DUP3 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50A5 DUP2 PUSH2 0x5069 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50ED PUSH1 0x2 DUP4 PUSH2 0x50AC JUMP JUMPDEST SWAP2 POP PUSH2 0x50F8 DUP3 PUSH2 0x50B7 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x511E PUSH2 0x5119 DUP3 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x5103 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512F DUP3 PUSH2 0x50E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x513B DUP3 DUP6 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x514B DUP3 DUP5 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5170 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x517D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x518A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A85 JUMP JUMPDEST PUSH2 0x5197 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3A85 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5205 PUSH1 0x18 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5210 DUP3 PUSH2 0x51CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5234 DUP2 PUSH2 0x51F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5271 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x527C DUP3 PUSH2 0x523B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52A0 DUP2 PUSH2 0x5264 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5303 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x530E DUP3 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5332 DUP2 PUSH2 0x52F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5395 PUSH1 0x22 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x53A0 DUP3 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C4 DUP2 PUSH2 0x5388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5427 PUSH1 0x26 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5432 DUP3 PUSH2 0x53CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5456 DUP2 PUSH2 0x541A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E DUP3 PUSH2 0x545D JUMP JUMPDEST PUSH2 0x5488 DUP2 DUP6 PUSH2 0x5468 JUMP JUMPDEST SWAP4 POP PUSH2 0x5498 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x380A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B0 DUP3 DUP5 PUSH2 0x5473 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F1 PUSH1 0x1F DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x54FC DUP3 PUSH2 0x54BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5520 DUP2 PUSH2 0x54E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5583 PUSH1 0x27 DUP4 PUSH2 0x37F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x558E DUP3 PUSH2 0x5527 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B2 DUP2 PUSH2 0x5576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220C677CF MLOAD 0xD7 0xED 0xCE 0x4E INVALID 0xE0 DUP10 KECCAK256 0xF 0xCF 0xCD 0xC3 0xBC MSTORE PUSH20 0x188D65885E2E92384C235B254664736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"643:1715:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3581:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5529:286;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3430:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3282:113:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:197:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6210:234:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3133:265:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1247:63:23;;;;;;;;;;;;;:::i;:::-;;1316:93;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3761:222:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:131;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2526:126:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5567:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:84:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2278:160:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3745:125:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:101:0;;;;;;;;;;;;;:::i;:::-;;3032:126:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:253:23;;;;;;;;;;;;;:::i;:::-;;1182:59;;;;;;;;;;;;;:::i;:::-;;1441:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:256:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2704:102:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2731:209:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6931:427:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4066:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5756:585:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2334:637:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4313:149:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:148:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2493:98:8;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;:::o;3581:106::-;3642:7;3668:12;;3661:19;;3581:106;:::o;5529:286::-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;:::o;3430:91::-;3488:5;3512:2;3505:9;;3430:91;:::o;3282:113:12:-;3342:7;3368:20;:18;:20::i;:::-;3361:27;;3282:113;:::o;3315:197:6:-;1898:6;1881:23;;1889:4;1881:23;;;;1873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:6;1971:30;;:20;:18;:20::i;:::-;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3398:36:::1;3416:17;3398;:36::i;:::-;3444:61;3466:17;3495:1;3485:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:5;3444:21;:61::i;:::-;3315:197:::0;:::o;6210:234:8:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;:::-;6433:4;6426:11;;;6210:234;;;;:::o;3133:265:10:-;3231:7;3272:12;3258:11;:26;3250:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3337:54;3356:12;:21;3369:7;3356:21;;;;;;;;;;;;;;;3379:11;3337:18;:54::i;:::-;3330:61;;3133:265;;;;:::o;1247:63:23:-;1334:13:0;:11;:13::i;:::-;1293:10:23::1;:8;:10::i;:::-;1247:63::o:0;1316:93::-;1334:13:0;:11;:13::i;:::-;1385:17:23::1;1391:2;1395:6;1385:5;:17::i;:::-;1316:93:::0;;:::o;3761:222:6:-;1898:6;1881:23;;1889:4;1881:23;;;;1873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:6;1971:30;;:20;:18;:20::i;:::-;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3878:36:::1;3896:17;3878;:36::i;:::-;3924:52;3946:17;3965:4;3971;3924:21;:52::i;:::-;3761:222:::0;;:::o;3004:131::-;3082:7;2333:6;2316:23;;2324:4;2316:23;;;2308:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1292:66:3::1;3108:20:6;;3101:27;;3004:131:::0;:::o;2526:126:10:-;2600:7;2626:10;:19;2637:7;2626:19;;;;;;;;;;;;;;;;;;;;;;;;;2619:26;;2526:126;;;:::o;5567:112::-;5638:34;5648:12;:10;:12::i;:::-;5662:9;5638;:34::i;:::-;5567:112;:::o;1858:84:7:-;1905:4;1928:7;;;;;;;;;;;1921:14;;1858:84;:::o;2278:160:10:-;2348:6;2373:58;2402:12;:21;2415:7;2402:21;;;;;;;;;;;;;;;:28;;;;2373;:58::i;:::-;2366:65;;2278:160;;;:::o;3745:125:8:-;3819:7;3845:9;:18;3855:7;3845:18;;;;;;;;;;;;;;;;3838:25;;3745:125;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3032:126:12:-;3101:7;3127:24;:7;:14;3135:5;3127:14;;;;;;;;;;;;;;;:22;:24::i;:::-;3120:31;;3032:126;;;:::o;923:253:23:-;3111:19:5;3134:13;;;;;;;;;;;3133:14;3111:36;;3179:14;:34;;;;;3212:1;3197:12;;;;;;;;;;:16;;;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;;3284:1;3268:12;;;;;;;;;;:17;;;3219:66;3178:108;3157:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3383:1;3368:12;;:16;;;;;;;;;;;;;;;;;;3398:14;3394:65;;;3444:4;3428:13;;:20;;;;;;;;;;;;;;;;;;3394:65;974:35:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:35::i;:::-;1019:17;:15;:17::i;:::-;1046:16;:14;:16::i;:::-;1072:34;;;;;;;;;;;;;;;;;::::0;:18:::1;:34::i;:::-;1116:19;:17;:19::i;:::-;1145:24;:22;:24::i;:::-;3483:14:5::0;3479:99;;;3529:5;3513:13;;:21;;;;;;;;;;;;;;;;;;3553:14;3565:1;3553:14;;;;;;:::i;:::-;;;;;;;;3479:99;3101:483;923:253:23:o;1182:59::-;1334:13:0;:11;:13::i;:::-;1226:8:23::1;:6;:8::i;:::-;1182:59::o:0;1441:85:0:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;3677:256:10:-;3764:7;3805:12;3791:11;:26;3783:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3870:56;3889:23;3914:11;3870:18;:56::i;:::-;3863:63;;3677:256;;;:::o;2704:102:8:-;2760:13;2792:7;2785:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102;:::o;2731:209:10:-;2804:7;2823:11;2837:12;:21;2850:7;2837:21;;;;;;;;;;;;;;;:28;;;;2823:42;;2889:1;2882:3;:8;:51;;2897:12;:21;2910:7;2897:21;;;;;;;;;;;;;;;2925:1;2919:3;:7;;;;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;2882:51;;;2893:1;2882:51;2875:58;;;;;2731:209;;;:::o;6931:427:8:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;7347:4;7340:11;;;;6931:427;;;;:::o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;:::-;4244:4;4237:11;;;4066:189;;;;:::o;5756:585:10:-;5975:6;5956:15;:25;;5948:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6025:14;6042:180;6080:87;1744:71;6140:9;6151:5;6158:6;6107:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6097:69;;;;;;6080:16;:87::i;:::-;6181:1;6196;6211;6042:24;:180::i;:::-;6025:197;;6249:17;6259:6;6249:9;:17::i;:::-;6240:5;:26;6232:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6306:28;6316:6;6324:9;6306;:28::i;:::-;5938:403;5756:585;;;;;;:::o;2334:637:12:-;2569:8;2550:15;:27;;2542:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2622:18;1369:95;2682:5;2689:7;2698:5;2705:16;2715:5;2705:9;:16::i;:::-;2723:8;2653:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2643:90;;;;;;2622:111;;2744:12;2759:28;2776:10;2759:16;:28::i;:::-;2744:43;;2798:14;2815:39;2840:4;2846:1;2849;2852;2815:24;:39::i;:::-;2798:56;;2882:5;2872:15;;:6;:15;;;2864:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2933:31;2942:5;2949:7;2958:5;2933:8;:31::i;:::-;2532:439;;;2334:637;;;;;;;:::o;4313:149:8:-;4402:7;4428:11;:18;4440:5;4428:18;;;;;;;;;;;;;;;:27;4447:7;4428:27;;;;;;;;;;;;;;;;4421:34;;4313:149;;;;:::o;2055:148:10:-;2134:17;;:::i;:::-;2170:12;:21;2183:7;2170:21;;;;;;;;;;;;;;;2192:3;2170:26;;;;;;;;;;:::i;:::-;;;;;;;;;2163:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:148;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;2429:1:::1;2409:22;;:8;:22;;;;2401:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;850:96:15:-;903:7;929:10;922:17;;850:96;:::o;10447:370:8:-;10595:1;10578:19;;:5;:19;;;;10570:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10675:1;10656:21;;:7;:21;;;;10648:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10757:6;10727:11;:18;10739:5;10727:18;;;;;;;;;;;;;;;:27;10746:7;10727:27;;;;;;;;;;;;;;;:36;;;;10794:7;10778:32;;10787:5;10778:32;;;10803:6;10778:32;;;;;;:::i;:::-;;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;11314:17;11294:16;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11290:243;11218:321;11098:441;;;:::o;7812:651::-;7954:1;7938:18;;:4;:18;;;;7930:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8030:1;8016:16;;:2;:16;;;;8008:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;8132:19;8154:9;:15;8164:4;8154:15;;;;;;;;;;;;;;;;8132:37;;8202:6;8187:11;:21;;8179:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8317:6;8303:11;:20;8285:9;:15;8295:4;8285:15;;;;;;;;;;;;;;;:38;;;;8360:6;8343:9;:13;8353:2;8343:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8397:2;8382:26;;8391:4;8382:26;;;8401:6;8382:26;;;;;;:::i;:::-;;;;;;;;8419:37;8439:4;8445:2;8449:6;8419:19;:37::i;:::-;7920:543;7812:651;;;:::o;2842:160:20:-;2895:7;2921:74;1595:95;2955:17;:15;:17::i;:::-;2974:20;:18;:20::i;:::-;2921:21;:74::i;:::-;2914:81;;2842:160;:::o;1563:151:3:-;1616:7;1642:59;1292:66;1680:20;;1642:37;:59::i;:::-;:65;;;;;;;;;;;;1635:72;;1563:151;:::o;1614:112:23:-;1334:13:0;:11;:13::i;:::-;1614:112:23;:::o;2938:974:3:-;3384:53;951:66;3422:14;;3384:37;:53::i;:::-;:59;;;;;;;;;;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;:::-;3380:526;;;3560:17;3531:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;;;;;;;;;:::i;:::-;;;;;;;;3527:302;1292:66;3652:20;;3644:4;:28;3636:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;:::-;3380:526;2938:974;;;:::o;4017:1469:10:-;4116:7;5123:12;5138:5;:12;;;;5123:27;;5160:11;5185:240;5198:4;5192:3;:10;5185:240;;;5218:11;5232:34;5256:3;5261:4;5232:23;:34::i;:::-;5218:48;;5307:11;5284:5;5290:3;5284:10;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;;;;;;;;;:34;;;5280:135;;;5345:3;5338:10;;5280:135;;;5399:1;5393:3;:7;;;;:::i;:::-;5387:13;;5280:135;5204:221;5185:240;;;5450:1;5442:4;:9;:37;;5458:5;5471:1;5464:4;:8;;;;:::i;:::-;5458:15;;;;;;;;:::i;:::-;;;;;;;;;:21;;;;;;;;;;;;5442:37;;;5454:1;5442:37;5435:44;;;;;;4017:1469;;;;:::o;1599:130:0:-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2676:117:7:-;1729:16;:14;:16::i;:::-;2744:5:::1;2734:7;;:15;;;;;;;;;;;;;;;;;;2764:22;2773:12;:10;:12::i;:::-;2764:22;;;;;;:::i;:::-;;;;;;;;2676:117::o:0;2016:162:23:-;2148:23;2160:2;2164:6;2148:11;:23::i;:::-;2016:162;;:::o;7743:380:10:-;7827:23;7853:20;7863:9;7853;:20::i;:::-;7827:46;;7883:24;7910:20;7920:9;7910;:20::i;:::-;7883:47;;7964:9;7940:10;:21;7951:9;7940:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8033:9;7989:54;;8016:15;7989:54;;8005:9;7989:54;;;;;;;;;;;;8054:62;8071:15;8088:9;8099:16;8054;:62::i;:::-;7817:306;;7743:380;;:::o;15190:187:22:-;15246:6;15281:16;15272:25;;:5;:25;;15264:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15364:5;15350:20;;15190:187;;;:::o;2673::0:-;2746:16;2765:6;;;;;;;;;;;2746:25;;2790:8;2781:6;;:17;;;;;;;;;;;;;;;;;;2844:8;2813:40;;2834:8;2813:40;;;;;;;;;;;;2736:124;2673:187;:::o;838:112:16:-;903:7;929;:14;;;922:21;;838:112;;;:::o;1186:320:14:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;2116:147:8:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:38:8::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;1063:97:7:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1126:27:7::1;:25;:27::i;:::-;1063:97::o:0;1003:95:0:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;2061:125:12:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:34:12::1;2169:4;2145:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;:::-;2061:125:::0;:::o;1463:62:10:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1463:62:10:o;1042:67:6:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:67:6:o;2429:115:7:-;1482:19;:17;:19::i;:::-;2498:4:::1;2488:7;;:14;;;;;;;;;;;;;;;;;;2517:20;2524:12;:10;:12::i;:::-;2517:20;;;;;;:::i;:::-;;;;;;;;2429:115::o:0;3890:176:20:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;3993:32;:66::i;:::-;3986:73;;3890:176;;;:::o;6925:270:19:-;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;7179:9;7172:16;;;;6925:270;;;;;;:::o;3526:214:12:-;3586:15;3613:41;3657:7;:14;3665:5;3657:14;;;;;;;;;;;;;;;3613:58;;3691:15;:5;:13;:15::i;:::-;3681:25;;3716:17;:5;:15;:17::i;:::-;3603:137;3526:214;;;:::o;1415:193:23:-;1482:19:7;:17;:19::i;:::-;1557:44:23::1;1584:4;1590:2;1594:6;1557:26;:44::i;:::-;1415:193:::0;;;:::o;1800:210::-;1960:43;1986:4;1992:2;1996:6;1960:25;:43::i;:::-;1800:210;;;:::o;4302:103:20:-;4360:7;4386:12;;4379:19;;4302:103;:::o;4644:109::-;4705:7;4731:15;;4724:22;;4644:109;:::o;3008:257::-;3148:7;3195:8;3205;3215:11;3228:13;3251:4;3184:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;:::o;1625:190:17:-;1686:21;1795:4;1785:14;;1625:190;;;:::o;1913:::-;1974:21;2083:4;2073:14;;1913:190;;;:::o;1805:281:3:-;1886:48;1916:17;1886:29;:48::i;:::-;1878:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2062:17;1994:59;1292:66;2032:20;;1994:37;:59::i;:::-;:65;;;:85;;;;;;;;;;;;;;;;;;1805:281;:::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2655:105;2478:288;;;:::o;817:153:21:-;879:7;962:1;957;953;:5;952:11;;;;:::i;:::-;947:1;943;:5;942:21;;;;:::i;:::-;935:28;;817:153;;;;:::o;2188:106:7:-;2254:8;:6;:8::i;:::-;2246:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:106::o;6635:285:10:-;6719:28;6731:7;6740:6;6719:11;:28::i;:::-;6782:12;:10;:12::i;:::-;6765:29;;:13;:11;:13::i;:::-;:29;;6757:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6858:55;6875:23;6900:4;6906:6;6858:16;:55::i;:::-;;;6635:285;;:::o;8129:627::-;8256:3;8249:10;;:3;:10;;;;:24;;;;;8272:1;8263:6;:10;8249:24;8245:505;;;8308:1;8293:17;;:3;:17;;;8289:221;;8331:17;8350;8371:54;8388:12;:17;8401:3;8388:17;;;;;;;;;;;;;;;8407:9;8418:6;8371:16;:54::i;:::-;8330:95;;;;8469:3;8448:47;;;8474:9;8485;8448:47;;;;;;;:::i;:::-;;;;;;;;8312:198;;8289:221;8543:1;8528:17;;:3;:17;;;8524:216;;8566:17;8585;8606:49;8623:12;:17;8636:3;8623:17;;;;;;;;;;;;;;;8642:4;8648:6;8606:16;:49::i;:::-;8565:90;;;;8699:3;8678:47;;;8704:9;8715;8678:47;;;;;;;:::i;:::-;;;;;;;;8547:193;;8524:216;8245:505;8129:627;;;:::o;2269:159:8:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2389:5:8::1;2381;:13;;;;;;;;;;;;:::i;:::-;;2414:7;2404;:17;;;;;;;;;;;;:::i;:::-;;2269:159:::0;;:::o;1166:95:7:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1249:5:7::1;1239:7;;:15;;;;;;;;;;;;;;;;;;1166:95::o:0;1104:111:0:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;2459:297:20:-;4910:13:5;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2571:18:20::1;2608:4;2592:22;;;;;;2571:43;;2624:21;2664:7;2648:25;;;;;;2624:49;;2698:10;2683:12;:25;;;;2736:13;2718:15;:31;;;;2561:195;;2459:297:::0;;:::o;2010:106:7:-;2080:8;:6;:8::i;:::-;2079:9;2071:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2010:106::o;8581:194:19:-;8674:7;8739:15;8756:10;8710:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;:::o;5189:1603::-;5315:7;5324:12;6239:66;6234:1;6226:10;;:79;6222:161;;;6337:1;6341:30;6321:51;;;;;;6222:161;6401:2;6396:1;:7;;;;:18;;;;;6412:2;6407:1;:7;;;;6396:18;6392:100;;;6446:1;6450:30;6430:51;;;;;;6392:100;6586:14;6603:24;6613:4;6619:1;6622;6625;6603:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6586:41;;6659:1;6641:20;;:6;:20;;;6637:101;;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;6764:20;6748:37;;;;;5189:1603;;;;;;;;:::o;570:631::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:561;;;683:7;;634:561;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:465;;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:465;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:356;;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:356;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:234;;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:234;1094:30;1085:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;1081:114;;;1140:44;;;;;;;;;;:::i;:::-;;;;;;;;1081:114;570:631;;:::o;956:123:16:-;1061:1;1043:7;:14;;;:19;;;;;;;;;;;956:123;:::o;12123:121:8:-;;;;:::o;7332:254:10:-;7469:43;7495:4;7501:2;7505:6;7469:25;:43::i;:::-;7523:56;7540:15;7550:4;7540:9;:15::i;:::-;7557:13;7567:2;7557:9;:13::i;:::-;7572:6;7523:16;:56::i;:::-;7332:254;;;:::o;2192:152:3:-;2258:37;2277:17;2258:18;:37::i;:::-;2319:17;2310:27;;;;;;;;;;;;2192:152;:::o;7088:455::-;7171:12;7203:37;7233:6;7203:29;:37::i;:::-;7195:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;7354:12;7368:23;7395:6;:19;;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;;;;7088:455;;;;:::o;8739:389:8:-;8841:1;8822:21;;:7;:21;;;;8814:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;;;;;9004:6;8982:9;:18;8992:7;8982:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;9046:7;9025:37;;9042:1;9025:37;;;9055:6;9025:37;;;;;;:::i;:::-;;;;;;;;9073:48;9101:1;9105:7;9114:6;9073:19;:48::i;:::-;8739:389;;:::o;6443:103:10:-;6496:7;6522:17;6515:24;;6443:103;:::o;9432:96::-;9490:7;9520:1;9516;:5;;;;:::i;:::-;9509:12;;9432:96;;;;:::o;8762:664::-;8932:17;8951;8980:11;8994:5;:12;;;;8980:26;;9035:1;9028:3;:8;:35;;9043:5;9055:1;9049:3;:7;;;;:::i;:::-;9043:14;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;;;;;;;;;9028:35;;;9039:1;9028:35;9016:47;;;;9085:20;9088:9;9099:5;9085:2;:20;;:::i;:::-;9073:32;;9126:1;9120:3;:7;:51;;;;;9159:12;9131:5;9143:1;9137:3;:7;;;;:::i;:::-;9131:14;;;;;;;;:::i;:::-;;;;;;;;;:24;;;;;;;;;;;;:40;;;9120:51;9116:304;;;9210:40;9240:9;9210:29;:40::i;:::-;9187:5;9199:1;9193:3;:7;;;;:::i;:::-;9187:14;;;;;;;;:::i;:::-;;;;;;;;;:20;;;:63;;;;;;;;;;;;;;;;;;9116:304;;;9281:5;9292:116;;;;;;;;9315:42;9344:12;9315:28;:42::i;:::-;9292:116;;;;;;9366:40;9396:9;9366:29;:40::i;:::-;9292:116;;;;;9281:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9116:304;8970:456;8762:664;;;;;;:::o;9534:101::-;9597:7;9627:1;9623;:5;;;;:::i;:::-;9616:12;;9534:101;;;;:::o;12832:120:8:-;;;;:::o;6622:742:14:-;6768:12;6796:7;6792:566;;;6826:10;6819:17;;;;6792:566;6957:1;6937:10;:17;:21;6933:415;;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;;;;;;;;;;:::i;:::-;;;;;;;;6622:742;;;;;;:::o;2762:192:22:-;2819:7;2855:17;2846:26;;:5;:26;;2838:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2941:5;2926:21;;2762:192;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:75::-;1430:6;1463:2;1457:9;1447:19;;1397:75;:::o;1478:117::-;1587:1;1584;1577:12;1601:117;1710:1;1707;1700:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:77::-;4938:7;4967:5;4956:16;;4901:77;;;:::o;4984:118::-;5071:24;5089:5;5071:24;:::i;:::-;5066:3;5059:37;4984:118;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5108:222;;;;:::o;5336:329::-;5395:6;5444:2;5432:9;5423:7;5419:23;5415:32;5412:119;;;5450:79;;:::i;:::-;5412:119;5570:1;5595:53;5640:7;5631:6;5620:9;5616:22;5595:53;:::i;:::-;5585:63;;5541:117;5336:329;;;;:::o;5671:117::-;5780:1;5777;5770:12;5794:117;5903:1;5900;5893:12;5917:180;5965:77;5962:1;5955:88;6062:4;6059:1;6052:15;6086:4;6083:1;6076:15;6103:281;6186:27;6208:4;6186:27;:::i;:::-;6178:6;6174:40;6316:6;6304:10;6301:22;6280:18;6268:10;6265:34;6262:62;6259:88;;;6327:18;;:::i;:::-;6259:88;6367:10;6363:2;6356:22;6146:238;6103:281;;:::o;6390:129::-;6424:6;6451:20;;:::i;:::-;6441:30;;6480:33;6508:4;6500:6;6480:33;:::i;:::-;6390:129;;;:::o;6525:307::-;6586:4;6676:18;6668:6;6665:30;6662:56;;;6698:18;;:::i;:::-;6662:56;6736:29;6758:6;6736:29;:::i;:::-;6728:37;;6820:4;6814;6810:15;6802:23;;6525:307;;;:::o;6838:154::-;6922:6;6917:3;6912;6899:30;6984:1;6975:6;6970:3;6966:16;6959:27;6838:154;;;:::o;6998:410::-;7075:5;7100:65;7116:48;7157:6;7116:48;:::i;:::-;7100:65;:::i;:::-;7091:74;;7188:6;7181:5;7174:21;7226:4;7219:5;7215:16;7264:3;7255:6;7250:3;7246:16;7243:25;7240:112;;;7271:79;;:::i;:::-;7240:112;7361:41;7395:6;7390:3;7385;7361:41;:::i;:::-;7081:327;6998:410;;;;;:::o;7427:338::-;7482:5;7531:3;7524:4;7516:6;7512:17;7508:27;7498:122;;7539:79;;:::i;:::-;7498:122;7656:6;7643:20;7681:78;7755:3;7747:6;7740:4;7732:6;7728:17;7681:78;:::i;:::-;7672:87;;7488:277;7427:338;;;;:::o;7771:652::-;7848:6;7856;7905:2;7893:9;7884:7;7880:23;7876:32;7873:119;;;7911:79;;:::i;:::-;7873:119;8031:1;8056:53;8101:7;8092:6;8081:9;8077:22;8056:53;:::i;:::-;8046:63;;8002:117;8186:2;8175:9;8171:18;8158:32;8217:18;8209:6;8206:30;8203:117;;;8239:79;;:::i;:::-;8203:117;8344:62;8398:7;8389:6;8378:9;8374:22;8344:62;:::i;:::-;8334:72;;8129:287;7771:652;;;;;:::o;8429:118::-;8516:24;8534:5;8516:24;:::i;:::-;8511:3;8504:37;8429:118;;:::o;8553:222::-;8646:4;8684:2;8673:9;8669:18;8661:26;;8697:71;8765:1;8754:9;8750:17;8741:6;8697:71;:::i;:::-;8553:222;;;;:::o;8781:93::-;8817:7;8857:10;8850:5;8846:22;8835:33;;8781:93;;;:::o;8880:115::-;8965:23;8982:5;8965:23;:::i;:::-;8960:3;8953:36;8880:115;;:::o;9001:218::-;9092:4;9130:2;9119:9;9115:18;9107:26;;9143:69;9209:1;9198:9;9194:17;9185:6;9143:69;:::i;:::-;9001:218;;;;:::o;9225:329::-;9284:6;9333:2;9321:9;9312:7;9308:23;9304:32;9301:119;;;9339:79;;:::i;:::-;9301:119;9459:1;9484:53;9529:7;9520:6;9509:9;9505:22;9484:53;:::i;:::-;9474:63;;9430:117;9225:329;;;;:::o;9560:118::-;9631:22;9647:5;9631:22;:::i;:::-;9624:5;9621:33;9611:61;;9668:1;9665;9658:12;9611:61;9560:118;:::o;9684:135::-;9728:5;9766:6;9753:20;9744:29;;9782:31;9807:5;9782:31;:::i;:::-;9684:135;;;;:::o;9825:122::-;9898:24;9916:5;9898:24;:::i;:::-;9891:5;9888:35;9878:63;;9937:1;9934;9927:12;9878:63;9825:122;:::o;9953:139::-;9999:5;10037:6;10024:20;10015:29;;10053:33;10080:5;10053:33;:::i;:::-;9953:139;;;;:::o;10098:1053::-;10200:6;10208;10216;10224;10232;10240;10289:3;10277:9;10268:7;10264:23;10260:33;10257:120;;;10296:79;;:::i;:::-;10257:120;10416:1;10441:53;10486:7;10477:6;10466:9;10462:22;10441:53;:::i;:::-;10431:63;;10387:117;10543:2;10569:53;10614:7;10605:6;10594:9;10590:22;10569:53;:::i;:::-;10559:63;;10514:118;10671:2;10697:53;10742:7;10733:6;10722:9;10718:22;10697:53;:::i;:::-;10687:63;;10642:118;10799:2;10825:51;10868:7;10859:6;10848:9;10844:22;10825:51;:::i;:::-;10815:61;;10770:116;10925:3;10952:53;10997:7;10988:6;10977:9;10973:22;10952:53;:::i;:::-;10942:63;;10896:119;11054:3;11081:53;11126:7;11117:6;11106:9;11102:22;11081:53;:::i;:::-;11071:63;;11025:119;10098:1053;;;;;;;;:::o;11157:1199::-;11268:6;11276;11284;11292;11300;11308;11316;11365:3;11353:9;11344:7;11340:23;11336:33;11333:120;;;11372:79;;:::i;:::-;11333:120;11492:1;11517:53;11562:7;11553:6;11542:9;11538:22;11517:53;:::i;:::-;11507:63;;11463:117;11619:2;11645:53;11690:7;11681:6;11670:9;11666:22;11645:53;:::i;:::-;11635:63;;11590:118;11747:2;11773:53;11818:7;11809:6;11798:9;11794:22;11773:53;:::i;:::-;11763:63;;11718:118;11875:2;11901:53;11946:7;11937:6;11926:9;11922:22;11901:53;:::i;:::-;11891:63;;11846:118;12003:3;12030:51;12073:7;12064:6;12053:9;12049:22;12030:51;:::i;:::-;12020:61;;11974:117;12130:3;12157:53;12202:7;12193:6;12182:9;12178:22;12157:53;:::i;:::-;12147:63;;12101:119;12259:3;12286:53;12331:7;12322:6;12311:9;12307:22;12286:53;:::i;:::-;12276:63;;12230:119;11157:1199;;;;;;;;;;:::o;12362:474::-;12430:6;12438;12487:2;12475:9;12466:7;12462:23;12458:32;12455:119;;;12493:79;;:::i;:::-;12455:119;12613:1;12638:53;12683:7;12674:6;12663:9;12659:22;12638:53;:::i;:::-;12628:63;;12584:117;12740:2;12766:53;12811:7;12802:6;12791:9;12787:22;12766:53;:::i;:::-;12756:63;;12711:118;12362:474;;;;;:::o;12842:120::-;12914:23;12931:5;12914:23;:::i;:::-;12907:5;12904:34;12894:62;;12952:1;12949;12942:12;12894:62;12842:120;:::o;12968:137::-;13013:5;13051:6;13038:20;13029:29;;13067:32;13093:5;13067:32;:::i;:::-;12968:137;;;;:::o;13111:472::-;13178:6;13186;13235:2;13223:9;13214:7;13210:23;13206:32;13203:119;;;13241:79;;:::i;:::-;13203:119;13361:1;13386:53;13431:7;13422:6;13411:9;13407:22;13386:53;:::i;:::-;13376:63;;13332:117;13488:2;13514:52;13558:7;13549:6;13538:9;13534:22;13514:52;:::i;:::-;13504:62;;13459:117;13111:472;;;;;:::o;13589:105::-;13664:23;13681:5;13664:23;:::i;:::-;13659:3;13652:36;13589:105;;:::o;13700:142::-;13737:7;13777:58;13770:5;13766:70;13755:81;;13700:142;;;:::o;13848:108::-;13925:24;13943:5;13925:24;:::i;:::-;13920:3;13913:37;13848:108;;:::o;14052:517::-;14205:4;14200:3;14196:14;14297:4;14290:5;14286:16;14280:23;14316:61;14371:4;14366:3;14362:14;14348:12;14316:61;:::i;:::-;14220:167;14470:4;14463:5;14459:16;14453:23;14489:63;14546:4;14541:3;14537:14;14523:12;14489:63;:::i;:::-;14397:165;14174:395;14052:517;;:::o;14575:334::-;14724:4;14762:2;14751:9;14747:18;14739:26;;14775:127;14899:1;14888:9;14884:17;14875:6;14775:127;:::i;:::-;14575:334;;;;:::o;14915:180::-;14963:77;14960:1;14953:88;15060:4;15057:1;15050:15;15084:4;15081:1;15074:15;15101:320;15145:6;15182:1;15176:4;15172:12;15162:22;;15229:1;15223:4;15219:12;15250:18;15240:81;;15306:4;15298:6;15294:17;15284:27;;15240:81;15368:2;15360:6;15357:14;15337:18;15334:38;15331:84;;;15387:18;;:::i;:::-;15331:84;15152:269;15101:320;;;:::o;15427:231::-;15567:34;15563:1;15555:6;15551:14;15544:58;15636:14;15631:2;15623:6;15619:15;15612:39;15427:231;:::o;15664:366::-;15806:3;15827:67;15891:2;15886:3;15827:67;:::i;:::-;15820:74;;15903:93;15992:3;15903:93;:::i;:::-;16021:2;16016:3;16012:12;16005:19;;15664:366;;;:::o;16036:419::-;16202:4;16240:2;16229:9;16225:18;16217:26;;16289:9;16283:4;16279:20;16275:1;16264:9;16260:17;16253:47;16317:131;16443:4;16317:131;:::i;:::-;16309:139;;16036:419;;;:::o;16461:231::-;16601:34;16597:1;16589:6;16585:14;16578:58;16670:14;16665:2;16657:6;16653:15;16646:39;16461:231;:::o;16698:366::-;16840:3;16861:67;16925:2;16920:3;16861:67;:::i;:::-;16854:74;;16937:93;17026:3;16937:93;:::i;:::-;17055:2;17050:3;17046:12;17039:19;;16698:366;;;:::o;17070:419::-;17236:4;17274:2;17263:9;17259:18;17251:26;;17323:9;17317:4;17313:20;17309:1;17298:9;17294:17;17287:47;17351:131;17477:4;17351:131;:::i;:::-;17343:139;;17070:419;;;:::o;17495:180::-;17543:77;17540:1;17533:88;17640:4;17637:1;17630:15;17664:4;17661:1;17654:15;17681:305;17721:3;17740:20;17758:1;17740:20;:::i;:::-;17735:25;;17774:20;17792:1;17774:20;:::i;:::-;17769:25;;17928:1;17860:66;17856:74;17853:1;17850:81;17847:107;;;17934:18;;:::i;:::-;17847:107;17978:1;17975;17971:9;17964:16;;17681:305;;;;:::o;17992:181::-;18132:33;18128:1;18120:6;18116:14;18109:57;17992:181;:::o;18179:366::-;18321:3;18342:67;18406:2;18401:3;18342:67;:::i;:::-;18335:74;;18418:93;18507:3;18418:93;:::i;:::-;18536:2;18531:3;18527:12;18520:19;;18179:366;;;:::o;18551:419::-;18717:4;18755:2;18744:9;18740:18;18732:26;;18804:9;18798:4;18794:20;18790:1;18779:9;18775:17;18768:47;18832:131;18958:4;18832:131;:::i;:::-;18824:139;;18551:419;;;:::o;18976:243::-;19116:34;19112:1;19104:6;19100:14;19093:58;19185:26;19180:2;19172:6;19168:15;19161:51;18976:243;:::o;19225:366::-;19367:3;19388:67;19452:2;19447:3;19388:67;:::i;:::-;19381:74;;19464:93;19553:3;19464:93;:::i;:::-;19582:2;19577:3;19573:12;19566:19;;19225:366;;;:::o;19597:419::-;19763:4;19801:2;19790:9;19786:18;19778:26;;19850:9;19844:4;19840:20;19836:1;19825:9;19821:17;19814:47;19878:131;20004:4;19878:131;:::i;:::-;19870:139;;19597:419;;;:::o;20022:233::-;20162:34;20158:1;20150:6;20146:14;20139:58;20231:16;20226:2;20218:6;20214:15;20207:41;20022:233;:::o;20261:366::-;20403:3;20424:67;20488:2;20483:3;20424:67;:::i;:::-;20417:74;;20500:93;20589:3;20500:93;:::i;:::-;20618:2;20613:3;20609:12;20602:19;;20261:366;;;:::o;20633:419::-;20799:4;20837:2;20826:9;20822:18;20814:26;;20886:9;20880:4;20876:20;20872:1;20861:9;20857:17;20850:47;20914:131;21040:4;20914:131;:::i;:::-;20906:139;;20633:419;;;:::o;21058:85::-;21103:7;21132:5;21121:16;;21058:85;;;:::o;21149:60::-;21177:3;21198:5;21191:12;;21149:60;;;:::o;21215:154::-;21271:9;21304:59;21320:42;21329:32;21355:5;21329:32;:::i;:::-;21320:42;:::i;:::-;21304:59;:::i;:::-;21291:72;;21215:154;;;:::o;21375:143::-;21468:43;21505:5;21468:43;:::i;:::-;21463:3;21456:56;21375:143;;:::o;21524:234::-;21623:4;21661:2;21650:9;21646:18;21638:26;;21674:77;21748:1;21737:9;21733:17;21724:6;21674:77;:::i;:::-;21524:234;;;;:::o;21764:191::-;21804:4;21824:20;21842:1;21824:20;:::i;:::-;21819:25;;21858:20;21876:1;21858:20;:::i;:::-;21853:25;;21897:1;21894;21891:8;21888:34;;;21902:18;;:::i;:::-;21888:34;21947:1;21944;21940:9;21932:17;;21764:191;;;;:::o;21961:180::-;22009:77;22006:1;21999:88;22106:4;22103:1;22096:15;22130:4;22127:1;22120:15;22147:224;22287:34;22283:1;22275:6;22271:14;22264:58;22356:7;22351:2;22343:6;22339:15;22332:32;22147:224;:::o;22377:366::-;22519:3;22540:67;22604:2;22599:3;22540:67;:::i;:::-;22533:74;;22616:93;22705:3;22616:93;:::i;:::-;22734:2;22729:3;22725:12;22718:19;;22377:366;;;:::o;22749:419::-;22915:4;22953:2;22942:9;22938:18;22930:26;;23002:9;22996:4;22992:20;22988:1;22977:9;22973:17;22966:47;23030:131;23156:4;23030:131;:::i;:::-;23022:139;;22749:419;;;:::o;23174:179::-;23314:31;23310:1;23302:6;23298:14;23291:55;23174:179;:::o;23359:366::-;23501:3;23522:67;23586:2;23581:3;23522:67;:::i;:::-;23515:74;;23598:93;23687:3;23598:93;:::i;:::-;23716:2;23711:3;23707:12;23700:19;;23359:366;;;:::o;23731:419::-;23897:4;23935:2;23924:9;23920:18;23912:26;;23984:9;23978:4;23974:20;23970:1;23959:9;23955:17;23948:47;24012:131;24138:4;24012:131;:::i;:::-;24004:139;;23731:419;;;:::o;24156:553::-;24333:4;24371:3;24360:9;24356:19;24348:27;;24385:71;24453:1;24442:9;24438:17;24429:6;24385:71;:::i;:::-;24466:72;24534:2;24523:9;24519:18;24510:6;24466:72;:::i;:::-;24548;24616:2;24605:9;24601:18;24592:6;24548:72;:::i;:::-;24630;24698:2;24687:9;24683:18;24674:6;24630:72;:::i;:::-;24156:553;;;;;;;:::o;24715:175::-;24855:27;24851:1;24843:6;24839:14;24832:51;24715:175;:::o;24896:366::-;25038:3;25059:67;25123:2;25118:3;25059:67;:::i;:::-;25052:74;;25135:93;25224:3;25135:93;:::i;:::-;25253:2;25248:3;25244:12;25237:19;;24896:366;;;:::o;25268:419::-;25434:4;25472:2;25461:9;25457:18;25449:26;;25521:9;25515:4;25511:20;25507:1;25496:9;25492:17;25485:47;25549:131;25675:4;25549:131;:::i;:::-;25541:139;;25268:419;;;:::o;25693:179::-;25833:31;25829:1;25821:6;25817:14;25810:55;25693:179;:::o;25878:366::-;26020:3;26041:67;26105:2;26100:3;26041:67;:::i;:::-;26034:74;;26117:93;26206:3;26117:93;:::i;:::-;26235:2;26230:3;26226:12;26219:19;;25878:366;;;:::o;26250:419::-;26416:4;26454:2;26443:9;26439:18;26431:26;;26503:9;26497:4;26493:20;26489:1;26478:9;26474:17;26467:47;26531:131;26657:4;26531:131;:::i;:::-;26523:139;;26250:419;;;:::o;26675:775::-;26908:4;26946:3;26935:9;26931:19;26923:27;;26960:71;27028:1;27017:9;27013:17;27004:6;26960:71;:::i;:::-;27041:72;27109:2;27098:9;27094:18;27085:6;27041:72;:::i;:::-;27123;27191:2;27180:9;27176:18;27167:6;27123:72;:::i;:::-;27205;27273:2;27262:9;27258:18;27249:6;27205:72;:::i;:::-;27287:73;27355:3;27344:9;27340:19;27331:6;27287:73;:::i;:::-;27370;27438:3;27427:9;27423:19;27414:6;27370:73;:::i;:::-;26675:775;;;;;;;;;:::o;27456:180::-;27596:32;27592:1;27584:6;27580:14;27573:56;27456:180;:::o;27642:366::-;27784:3;27805:67;27869:2;27864:3;27805:67;:::i;:::-;27798:74;;27881:93;27970:3;27881:93;:::i;:::-;27999:2;27994:3;27990:12;27983:19;;27642:366;;;:::o;28014:419::-;28180:4;28218:2;28207:9;28203:18;28195:26;;28267:9;28261:4;28257:20;28253:1;28242:9;28238:17;28231:47;28295:131;28421:4;28295:131;:::i;:::-;28287:139;;28014:419;;;:::o;28439:225::-;28579:34;28575:1;28567:6;28563:14;28556:58;28648:8;28643:2;28635:6;28631:15;28624:33;28439:225;:::o;28670:366::-;28812:3;28833:67;28897:2;28892:3;28833:67;:::i;:::-;28826:74;;28909:93;28998:3;28909:93;:::i;:::-;29027:2;29022:3;29018:12;29011:19;;28670:366;;;:::o;29042:419::-;29208:4;29246:2;29235:9;29231:18;29223:26;;29295:9;29289:4;29285:20;29281:1;29270:9;29266:17;29259:47;29323:131;29449:4;29323:131;:::i;:::-;29315:139;;29042:419;;;:::o;29467:223::-;29607:34;29603:1;29595:6;29591:14;29584:58;29676:6;29671:2;29663:6;29659:15;29652:31;29467:223;:::o;29696:366::-;29838:3;29859:67;29923:2;29918:3;29859:67;:::i;:::-;29852:74;;29935:93;30024:3;29935:93;:::i;:::-;30053:2;30048:3;30044:12;30037:19;;29696:366;;;:::o;30068:419::-;30234:4;30272:2;30261:9;30257:18;30249:26;;30321:9;30315:4;30311:20;30307:1;30296:9;30292:17;30285:47;30349:131;30475:4;30349:131;:::i;:::-;30341:139;;30068:419;;;:::o;30493:221::-;30633:34;30629:1;30621:6;30617:14;30610:58;30702:4;30697:2;30689:6;30685:15;30678:29;30493:221;:::o;30720:366::-;30862:3;30883:67;30947:2;30942:3;30883:67;:::i;:::-;30876:74;;30959:93;31048:3;30959:93;:::i;:::-;31077:2;31072:3;31068:12;31061:19;;30720:366;;;:::o;31092:419::-;31258:4;31296:2;31285:9;31281:18;31273:26;;31345:9;31339:4;31335:20;31331:1;31320:9;31316:17;31309:47;31373:131;31499:4;31373:131;:::i;:::-;31365:139;;31092:419;;;:::o;31517:179::-;31657:31;31653:1;31645:6;31641:14;31634:55;31517:179;:::o;31702:366::-;31844:3;31865:67;31929:2;31924:3;31865:67;:::i;:::-;31858:74;;31941:93;32030:3;31941:93;:::i;:::-;32059:2;32054:3;32050:12;32043:19;;31702:366;;;:::o;32074:419::-;32240:4;32278:2;32267:9;32263:18;32255:26;;32327:9;32321:4;32317:20;32313:1;32302:9;32298:17;32291:47;32355:131;32481:4;32355:131;:::i;:::-;32347:139;;32074:419;;;:::o;32499:224::-;32639:34;32635:1;32627:6;32623:14;32616:58;32708:7;32703:2;32695:6;32691:15;32684:32;32499:224;:::o;32729:366::-;32871:3;32892:67;32956:2;32951:3;32892:67;:::i;:::-;32885:74;;32968:93;33057:3;32968:93;:::i;:::-;33086:2;33081:3;33077:12;33070:19;;32729:366;;;:::o;33101:419::-;33267:4;33305:2;33294:9;33290:18;33282:26;;33354:9;33348:4;33344:20;33340:1;33329:9;33325:17;33318:47;33382:131;33508:4;33382:131;:::i;:::-;33374:139;;33101:419;;;:::o;33526:222::-;33666:34;33662:1;33654:6;33650:14;33643:58;33735:5;33730:2;33722:6;33718:15;33711:30;33526:222;:::o;33754:366::-;33896:3;33917:67;33981:2;33976:3;33917:67;:::i;:::-;33910:74;;33993:93;34082:3;33993:93;:::i;:::-;34111:2;34106:3;34102:12;34095:19;;33754:366;;;:::o;34126:419::-;34292:4;34330:2;34319:9;34315:18;34307:26;;34379:9;34373:4;34369:20;34365:1;34354:9;34350:17;34343:47;34407:131;34533:4;34407:131;:::i;:::-;34399:139;;34126:419;;;:::o;34551:225::-;34691:34;34687:1;34679:6;34675:14;34668:58;34760:8;34755:2;34747:6;34743:15;34736:33;34551:225;:::o;34782:366::-;34924:3;34945:67;35009:2;35004:3;34945:67;:::i;:::-;34938:74;;35021:93;35110:3;35021:93;:::i;:::-;35139:2;35134:3;35130:12;35123:19;;34782:366;;;:::o;35154:419::-;35320:4;35358:2;35347:9;35343:18;35335:26;;35407:9;35401:4;35397:20;35393:1;35382:9;35378:17;35371:47;35435:131;35561:4;35435:131;:::i;:::-;35427:139;;35154:419;;;:::o;35579:143::-;35636:5;35667:6;35661:13;35652:22;;35683:33;35710:5;35683:33;:::i;:::-;35579:143;;;;:::o;35728:351::-;35798:6;35847:2;35835:9;35826:7;35822:23;35818:32;35815:119;;;35853:79;;:::i;:::-;35815:119;35973:1;35998:64;36054:7;36045:6;36034:9;36030:22;35998:64;:::i;:::-;35988:74;;35944:128;35728:351;;;;:::o;36085:233::-;36225:34;36221:1;36213:6;36209:14;36202:58;36294:16;36289:2;36281:6;36277:15;36270:41;36085:233;:::o;36324:366::-;36466:3;36487:67;36551:2;36546:3;36487:67;:::i;:::-;36480:74;;36563:93;36652:3;36563:93;:::i;:::-;36681:2;36676:3;36672:12;36665:19;;36324:366;;;:::o;36696:419::-;36862:4;36900:2;36889:9;36885:18;36877:26;;36949:9;36943:4;36939:20;36935:1;36924:9;36920:17;36913:47;36977:131;37103:4;36977:131;:::i;:::-;36969:139;;36696:419;;;:::o;37121:228::-;37261:34;37257:1;37249:6;37245:14;37238:58;37330:11;37325:2;37317:6;37313:15;37306:36;37121:228;:::o;37355:366::-;37497:3;37518:67;37582:2;37577:3;37518:67;:::i;:::-;37511:74;;37594:93;37683:3;37594:93;:::i;:::-;37712:2;37707:3;37703:12;37696:19;;37355:366;;;:::o;37727:419::-;37893:4;37931:2;37920:9;37916:18;37908:26;;37980:9;37974:4;37970:20;37966:1;37955:9;37951:17;37944:47;38008:131;38134:4;38008:131;:::i;:::-;38000:139;;37727:419;;;:::o;38152:182::-;38292:34;38288:1;38280:6;38276:14;38269:58;38152:182;:::o;38340:366::-;38482:3;38503:67;38567:2;38562:3;38503:67;:::i;:::-;38496:74;;38579:93;38668:3;38579:93;:::i;:::-;38697:2;38692:3;38688:12;38681:19;;38340:366;;;:::o;38712:419::-;38878:4;38916:2;38905:9;38901:18;38893:26;;38965:9;38959:4;38955:20;38951:1;38940:9;38936:17;38929:47;38993:131;39119:4;38993:131;:::i;:::-;38985:139;;38712:419;;;:::o;39137:225::-;39277:34;39273:1;39265:6;39261:14;39254:58;39346:8;39341:2;39333:6;39329:15;39322:33;39137:225;:::o;39368:366::-;39510:3;39531:67;39595:2;39590:3;39531:67;:::i;:::-;39524:74;;39607:93;39696:3;39607:93;:::i;:::-;39725:2;39720:3;39716:12;39709:19;;39368:366;;;:::o;39740:419::-;39906:4;39944:2;39933:9;39929:18;39921:26;;39993:9;39987:4;39983:20;39979:1;39968:9;39964:17;39957:47;40021:131;40147:4;40021:131;:::i;:::-;40013:139;;39740:419;;;:::o;40165:230::-;40305:34;40301:1;40293:6;40289:14;40282:58;40374:13;40369:2;40361:6;40357:15;40350:38;40165:230;:::o;40401:366::-;40543:3;40564:67;40628:2;40623:3;40564:67;:::i;:::-;40557:74;;40640:93;40729:3;40640:93;:::i;:::-;40758:2;40753:3;40749:12;40742:19;;40401:366;;;:::o;40773:419::-;40939:4;40977:2;40966:9;40962:18;40954:26;;41026:9;41020:4;41016:20;41012:1;41001:9;40997:17;40990:47;41054:131;41180:4;41054:131;:::i;:::-;41046:139;;40773:419;;;:::o;41198:664::-;41403:4;41441:3;41430:9;41426:19;41418:27;;41455:71;41523:1;41512:9;41508:17;41499:6;41455:71;:::i;:::-;41536:72;41604:2;41593:9;41589:18;41580:6;41536:72;:::i;:::-;41618;41686:2;41675:9;41671:18;41662:6;41618:72;:::i;:::-;41700;41768:2;41757:9;41753:18;41744:6;41700:72;:::i;:::-;41782:73;41850:3;41839:9;41835:19;41826:6;41782:73;:::i;:::-;41198:664;;;;;;;;:::o;41868:232::-;42008:34;42004:1;41996:6;41992:14;41985:58;42077:15;42072:2;42064:6;42060:15;42053:40;41868:232;:::o;42106:366::-;42248:3;42269:67;42333:2;42328:3;42269:67;:::i;:::-;42262:74;;42345:93;42434:3;42345:93;:::i;:::-;42463:2;42458:3;42454:12;42447:19;;42106:366;;;:::o;42478:419::-;42644:4;42682:2;42671:9;42667:18;42659:26;;42731:9;42725:4;42721:20;42717:1;42706:9;42702:17;42695:47;42759:131;42885:4;42759:131;:::i;:::-;42751:139;;42478:419;;;:::o;42903:180::-;42951:77;42948:1;42941:88;43048:4;43045:1;43038:15;43072:4;43069:1;43062:15;43089:185;43129:1;43146:20;43164:1;43146:20;:::i;:::-;43141:25;;43180:20;43198:1;43180:20;:::i;:::-;43175:25;;43219:1;43209:35;;43224:18;;:::i;:::-;43209:35;43266:1;43263;43259:9;43254:14;;43089:185;;;;:::o;43280:170::-;43420:22;43416:1;43408:6;43404:14;43397:46;43280:170;:::o;43456:366::-;43598:3;43619:67;43683:2;43678:3;43619:67;:::i;:::-;43612:74;;43695:93;43784:3;43695:93;:::i;:::-;43813:2;43808:3;43804:12;43797:19;;43456:366;;;:::o;43828:419::-;43994:4;44032:2;44021:9;44017:18;44009:26;;44081:9;44075:4;44071:20;44067:1;44056:9;44052:17;44045:47;44109:131;44235:4;44109:131;:::i;:::-;44101:139;;43828:419;;;:::o;44253:235::-;44393:34;44389:1;44381:6;44377:14;44370:58;44462:18;44457:2;44449:6;44445:15;44438:43;44253:235;:::o;44494:366::-;44636:3;44657:67;44721:2;44716:3;44657:67;:::i;:::-;44650:74;;44733:93;44822:3;44733:93;:::i;:::-;44851:2;44846:3;44842:12;44835:19;;44494:366;;;:::o;44866:419::-;45032:4;45070:2;45059:9;45055:18;45047:26;;45119:9;45113:4;45109:20;45105:1;45094:9;45090:17;45083:47;45147:131;45273:4;45147:131;:::i;:::-;45139:139;;44866:419;;;:::o;45291:332::-;45412:4;45450:2;45439:9;45435:18;45427:26;;45463:71;45531:1;45520:9;45516:17;45507:6;45463:71;:::i;:::-;45544:72;45612:2;45601:9;45597:18;45588:6;45544:72;:::i;:::-;45291:332;;;;;:::o;45629:166::-;45769:18;45765:1;45757:6;45753:14;45746:42;45629:166;:::o;45801:366::-;45943:3;45964:67;46028:2;46023:3;45964:67;:::i;:::-;45957:74;;46040:93;46129:3;46040:93;:::i;:::-;46158:2;46153:3;46149:12;46142:19;;45801:366;;;:::o;46173:419::-;46339:4;46377:2;46366:9;46362:18;46354:26;;46426:9;46420:4;46416:20;46412:1;46401:9;46397:17;46390:47;46454:131;46580:4;46454:131;:::i;:::-;46446:139;;46173:419;;;:::o;46598:148::-;46700:11;46737:3;46722:18;;46598:148;;;;:::o;46752:214::-;46892:66;46888:1;46880:6;46876:14;46869:90;46752:214;:::o;46972:400::-;47132:3;47153:84;47235:1;47230:3;47153:84;:::i;:::-;47146:91;;47246:93;47335:3;47246:93;:::i;:::-;47364:1;47359:3;47355:11;47348:18;;46972:400;;;:::o;47378:79::-;47417:7;47446:5;47435:16;;47378:79;;;:::o;47463:157::-;47568:45;47588:24;47606:5;47588:24;:::i;:::-;47568:45;:::i;:::-;47563:3;47556:58;47463:157;;:::o;47626:663::-;47867:3;47889:148;48033:3;47889:148;:::i;:::-;47882:155;;48047:75;48118:3;48109:6;48047:75;:::i;:::-;48147:2;48142:3;48138:12;48131:19;;48160:75;48231:3;48222:6;48160:75;:::i;:::-;48260:2;48255:3;48251:12;48244:19;;48280:3;48273:10;;47626:663;;;;;:::o;48295:545::-;48468:4;48506:3;48495:9;48491:19;48483:27;;48520:71;48588:1;48577:9;48573:17;48564:6;48520:71;:::i;:::-;48601:68;48665:2;48654:9;48650:18;48641:6;48601:68;:::i;:::-;48679:72;48747:2;48736:9;48732:18;48723:6;48679:72;:::i;:::-;48761;48829:2;48818:9;48814:18;48805:6;48761:72;:::i;:::-;48295:545;;;;;;;:::o;48846:180::-;48894:77;48891:1;48884:88;48991:4;48988:1;48981:15;49015:4;49012:1;49005:15;49032:174;49172:26;49168:1;49160:6;49156:14;49149:50;49032:174;:::o;49212:366::-;49354:3;49375:67;49439:2;49434:3;49375:67;:::i;:::-;49368:74;;49451:93;49540:3;49451:93;:::i;:::-;49569:2;49564:3;49560:12;49553:19;;49212:366;;;:::o;49584:419::-;49750:4;49788:2;49777:9;49773:18;49765:26;;49837:9;49831:4;49827:20;49823:1;49812:9;49808:17;49801:47;49865:131;49991:4;49865:131;:::i;:::-;49857:139;;49584:419;;;:::o;50009:181::-;50149:33;50145:1;50137:6;50133:14;50126:57;50009:181;:::o;50196:366::-;50338:3;50359:67;50423:2;50418:3;50359:67;:::i;:::-;50352:74;;50435:93;50524:3;50435:93;:::i;:::-;50553:2;50548:3;50544:12;50537:19;;50196:366;;;:::o;50568:419::-;50734:4;50772:2;50761:9;50757:18;50749:26;;50821:9;50815:4;50811:20;50807:1;50796:9;50792:17;50785:47;50849:131;50975:4;50849:131;:::i;:::-;50841:139;;50568:419;;;:::o;50993:221::-;51133:34;51129:1;51121:6;51117:14;51110:58;51202:4;51197:2;51189:6;51185:15;51178:29;50993:221;:::o;51220:366::-;51362:3;51383:67;51447:2;51442:3;51383:67;:::i;:::-;51376:74;;51459:93;51548:3;51459:93;:::i;:::-;51577:2;51572:3;51568:12;51561:19;;51220:366;;;:::o;51592:419::-;51758:4;51796:2;51785:9;51781:18;51773:26;;51845:9;51839:4;51835:20;51831:1;51820:9;51816:17;51809:47;51873:131;51999:4;51873:131;:::i;:::-;51865:139;;51592:419;;;:::o;52017:221::-;52157:34;52153:1;52145:6;52141:14;52134:58;52226:4;52221:2;52213:6;52209:15;52202:29;52017:221;:::o;52244:366::-;52386:3;52407:67;52471:2;52466:3;52407:67;:::i;:::-;52400:74;;52483:93;52572:3;52483:93;:::i;:::-;52601:2;52596:3;52592:12;52585:19;;52244:366;;;:::o;52616:419::-;52782:4;52820:2;52809:9;52805:18;52797:26;;52869:9;52863:4;52859:20;52855:1;52844:9;52840:17;52833:47;52897:131;53023:4;52897:131;:::i;:::-;52889:139;;52616:419;;;:::o;53041:225::-;53181:34;53177:1;53169:6;53165:14;53158:58;53250:8;53245:2;53237:6;53233:15;53226:33;53041:225;:::o;53272:366::-;53414:3;53435:67;53499:2;53494:3;53435:67;:::i;:::-;53428:74;;53511:93;53600:3;53511:93;:::i;:::-;53629:2;53624:3;53620:12;53613:19;;53272:366;;;:::o;53644:419::-;53810:4;53848:2;53837:9;53833:18;53825:26;;53897:9;53891:4;53887:20;53883:1;53872:9;53868:17;53861:47;53925:131;54051:4;53925:131;:::i;:::-;53917:139;;53644:419;;;:::o;54069:98::-;54120:6;54154:5;54148:12;54138:22;;54069:98;;;:::o;54173:147::-;54274:11;54311:3;54296:18;;54173:147;;;;:::o;54326:373::-;54430:3;54458:38;54490:5;54458:38;:::i;:::-;54512:88;54593:6;54588:3;54512:88;:::i;:::-;54505:95;;54609:52;54654:6;54649:3;54642:4;54635:5;54631:16;54609:52;:::i;:::-;54686:6;54681:3;54677:16;54670:23;;54434:265;54326:373;;;;:::o;54705:271::-;54835:3;54857:93;54946:3;54937:6;54857:93;:::i;:::-;54850:100;;54967:3;54960:10;;54705:271;;;;:::o;54982:181::-;55122:33;55118:1;55110:6;55106:14;55099:57;54982:181;:::o;55169:366::-;55311:3;55332:67;55396:2;55391:3;55332:67;:::i;:::-;55325:74;;55408:93;55497:3;55408:93;:::i;:::-;55526:2;55521:3;55517:12;55510:19;;55169:366;;;:::o;55541:419::-;55707:4;55745:2;55734:9;55730:18;55722:26;;55794:9;55788:4;55784:20;55780:1;55769:9;55765:17;55758:47;55822:131;55948:4;55822:131;:::i;:::-;55814:139;;55541:419;;;:::o;55966:226::-;56106:34;56102:1;56094:6;56090:14;56083:58;56175:9;56170:2;56162:6;56158:15;56151:34;55966:226;:::o;56198:366::-;56340:3;56361:67;56425:2;56420:3;56361:67;:::i;:::-;56354:74;;56437:93;56526:3;56437:93;:::i;:::-;56555:2;56550:3;56546:12;56539:19;;56198:366;;;:::o;56570:419::-;56736:4;56774:2;56763:9;56759:18;56751:26;;56823:9;56817:4;56813:20;56809:1;56798:9;56794:17;56787:47;56851:131;56977:4;56851:131;:::i;:::-;56843:139;;56570:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingTokenX.sol\":\"VotingTokenX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0\",\"dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"contracts/VotingTokenX.sol\":{\"keccak256\":\"0x93244566c5e794676898a9225320ede17cbefb3b08b09417ac4b9f48b5dff128\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef27473125b7e51c96a4d2b8c69e5c08ddb8a4fc2aa9ab5d28df914bb1062736\",\"dweb:/ipfs/QmXcipo3zqRfyPZnT8JVs9FZJNTFh7ZgGJ7U2UNncEHjkV\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":605,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":608,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2894,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1031,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1037,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1039,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1041,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1043,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1622,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":906,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":1011,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":10,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":130,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":3652,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_HASHED_NAME","offset":0,"slot":"201","type":"t_bytes32"},{"astId":3654,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_HASHED_VERSION","offset":0,"slot":"202","type":"t_bytes32"},{"astId":3792,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"203","type":"t_array(t_uint256)50_storage"},{"astId":2409,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_nonces","offset":0,"slot":"253","type":"t_mapping(t_address,t_struct(Counter)2901_storage)"},{"astId":2417,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"254","type":"t_bytes32"},{"astId":2573,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"255","type":"t_array(t_uint256)49_storage"},{"astId":1742,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_delegates","offset":0,"slot":"304","type":"t_mapping(t_address,t_address)"},{"astId":1748,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_checkpoints","offset":0,"slot":"305","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1733_storage)dyn_storage)"},{"astId":1752,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_totalSupplyCheckpoints","offset":0,"slot":"306","type":"t_array(t_struct(Checkpoint)1733_storage)dyn_storage"},{"astId":2357,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"307","type":"t_array(t_uint256)47_storage"},{"astId":587,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"354","type":"t_array(t_uint256)50_storage"},{"astId":884,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"__gap","offset":0,"slot":"404","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1733_storage)dyn_storage":{"base":"t_struct(Checkpoint)1733_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1733_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1733_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2901_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2901_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1733_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":1730,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1732,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2901_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2900,"contract":"contracts/VotingTokenX.sol:VotingTokenX","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}